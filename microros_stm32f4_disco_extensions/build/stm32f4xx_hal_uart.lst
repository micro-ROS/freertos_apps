ARM GAS  /tmp/ccytgAn2.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_UART_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_UART_Init:
  27              	.LFB130:
  28              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @file    stm32f4xx_hal_uart.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @verbatim
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                         ##### How to use this driver #####
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) UART pins configuration:
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure these UART pins (TX as alternate function pull-up, RX as alternate func
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
ARM GAS  /tmp/ccytgAn2.s 			page 2


  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx stream.
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   Tx/Rx parameters.
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx stream.
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx stream.
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority and enable the NVIC USART IRQ handle
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   (used for last byte sending completion detection in DMA non circular mode)
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the huart Init structure.
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_UART_Init() API.
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt,
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             and receive process.
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_MspInit() API.
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ##### Callback registration #####
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ==================================
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Use Function @ref HAL_UART_RegisterCallback() to register a user callback.
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Function @ref HAL_UART_RegisterCallback() allows to register following callbacks:
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
ARM GAS  /tmp/ccytgAn2.s 			page 3


  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and a pointer to the user callback function.
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Use function @ref HAL_UART_UnRegisterCallback() to reset a callback to the default
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     weak (surcharged) function.
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     @ref HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and the Callback ID.
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This function allows to reset following callbacks:
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     By default, after the @ref HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     examples @ref HAL_UART_TxCpltCallback(), @ref HAL_UART_RxHalfCpltCallback().
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_UART_Init()
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and @ref HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_UART_Init() and @ref HAL_UART_DeInit()
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     using @ref HAL_UART_RegisterCallback() before calling @ref HAL_UART_DeInit()
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     or @ref HAL_UART_Init() function.
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     not defined, the callback registration feature is not available
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         Three operation modes are available within this driver :
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Polling mode IO operation ***
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      =================================
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Interrupt mode IO operation ***
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ===================================
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT()
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
ARM GAS  /tmp/ccytgAn2.s 			page 4


 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT()
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** DMA mode IO operation ***
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ==============================
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA()
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA()
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** UART HAL driver macros list ***
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      =============================================
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @endverbatim
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) Additionnal remark: If the parity is enabled, then the MSB bit of the data written
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            in the data register is transmitted but is changed by the parity bit.
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Depending on the frame length defined by the M bit (8-bits or 9-bits),
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the possible UART frame formats are as listed in the following table:
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     +-------------------------------------------------------------+
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |   M bit |  PCE bit  |            UART frame                 |
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------------------|---------------------------------------|
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    0    |    0      |    | SB | 8 bit data | STB |          |
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    1    |    0      |    | SB | 9 bit data | STB |          |
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
ARM GAS  /tmp/ccytgAn2.s 			page 5


 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     +-------------------------------------------------------------+
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @attention
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * All rights reserved.</center></h2>
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * the "License"; You may not use this file except in compliance with the
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * License. You may obtain a copy of the License at:
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                        opensource.org/licenses/BSD-3-Clause
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #include "stm32f4xx_hal.h"
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup STM32F4xx_HAL_Driver
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART UART
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief HAL UART module driver
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Constants
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions  UART Private Functions
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart);
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
ARM GAS  /tmp/ccytgAn2.s 			page 6


 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart);
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in asynchronous mode.
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured:
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Baud Rate
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Word Length
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Stop Bit
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Hardware flow control
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Over Sampling Method
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor configurat
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     procedures (details for the procedures are available in reference manual
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (RM0430 for STM32F4X3xx MCUs and RM0402 for STM32F412xx MCUs
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0383 for STM32F411xC/E MCUs and RM0401 for STM32F410xx MCUs
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0090 for STM32F4X5xx/STM32F4X7xx/STM32F429xx/STM32F439xx MCUs
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0390 for STM32F446xx MCUs and RM0386 for STM32F469xx/STM32F479xx MCUs)).
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the UART_InitTypeDef and create the associated handle.
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/ccytgAn2.s 			page 7


 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
  29              		.loc 1 318 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
  45              		.loc 1 320 6
  46 0008 7B68     		ldr	r3, [r7, #4]
  47 000a 002B     		cmp	r3, #0
  48 000c 01D1     		bne	.L2
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
  49              		.loc 1 322 12
  50 000e 0123     		movs	r3, #1
  51 0010 3FE0     		b	.L3
  52              	.L2:
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* The hardware flow control is available only for USART1, USART2, USART3 and USART6.
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Except for STM32F446xx devices, that is available for USART1, USART2, USART3, USART6, UART4 
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     */
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
  53              		.loc 1 341 12
  54 0012 7B68     		ldr	r3, [r7, #4]
  55 0014 93F83930 		ldrb	r3, [r3, #57]
  56 0018 DBB2     		uxtb	r3, r3
  57              		.loc 1 341 6
  58 001a 002B     		cmp	r3, #0
  59 001c 06D1     		bne	.L4
ARM GAS  /tmp/ccytgAn2.s 			page 8


 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
  60              		.loc 1 344 17
  61 001e 7B68     		ldr	r3, [r7, #4]
  62 0020 0022     		movs	r2, #0
  63 0022 83F83820 		strb	r2, [r3, #56]
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
  64              		.loc 1 358 5
  65 0026 7868     		ldr	r0, [r7, #4]
  66 0028 FFF7FEFF 		bl	HAL_UART_MspInit
  67              	.L4:
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
  68              		.loc 1 362 17
  69 002c 7B68     		ldr	r3, [r7, #4]
  70 002e 2422     		movs	r2, #36
  71 0030 83F83920 		strb	r2, [r3, #57]
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  72              		.loc 1 365 3
  73 0034 7B68     		ldr	r3, [r7, #4]
  74 0036 1B68     		ldr	r3, [r3]
  75 0038 DA68     		ldr	r2, [r3, #12]
  76 003a 7B68     		ldr	r3, [r7, #4]
  77 003c 1B68     		ldr	r3, [r3]
  78 003e 22F40052 		bic	r2, r2, #8192
  79 0042 DA60     		str	r2, [r3, #12]
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
  80              		.loc 1 368 3
  81 0044 7868     		ldr	r0, [r7, #4]
  82 0046 FFF7FEFF 		bl	UART_SetConfig
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
  83              		.loc 1 373 3
  84 004a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccytgAn2.s 			page 9


  85 004c 1B68     		ldr	r3, [r3]
  86 004e 1A69     		ldr	r2, [r3, #16]
  87 0050 7B68     		ldr	r3, [r7, #4]
  88 0052 1B68     		ldr	r3, [r3]
  89 0054 22F49042 		bic	r2, r2, #18432
  90 0058 1A61     		str	r2, [r3, #16]
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
  91              		.loc 1 374 3
  92 005a 7B68     		ldr	r3, [r7, #4]
  93 005c 1B68     		ldr	r3, [r3]
  94 005e 5A69     		ldr	r2, [r3, #20]
  95 0060 7B68     		ldr	r3, [r7, #4]
  96 0062 1B68     		ldr	r3, [r3]
  97 0064 22F02A02 		bic	r2, r2, #42
  98 0068 5A61     		str	r2, [r3, #20]
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
  99              		.loc 1 377 3
 100 006a 7B68     		ldr	r3, [r7, #4]
 101 006c 1B68     		ldr	r3, [r3]
 102 006e DA68     		ldr	r2, [r3, #12]
 103 0070 7B68     		ldr	r3, [r7, #4]
 104 0072 1B68     		ldr	r3, [r3]
 105 0074 42F40052 		orr	r2, r2, #8192
 106 0078 DA60     		str	r2, [r3, #12]
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 107              		.loc 1 380 20
 108 007a 7B68     		ldr	r3, [r7, #4]
 109 007c 0022     		movs	r2, #0
 110 007e DA63     		str	r2, [r3, #60]
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 111              		.loc 1 381 17
 112 0080 7B68     		ldr	r3, [r7, #4]
 113 0082 2022     		movs	r2, #32
 114 0084 83F83920 		strb	r2, [r3, #57]
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 115              		.loc 1 382 18
 116 0088 7B68     		ldr	r3, [r7, #4]
 117 008a 2022     		movs	r2, #32
 118 008c 83F83A20 		strb	r2, [r3, #58]
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 119              		.loc 1 384 10
 120 0090 0023     		movs	r3, #0
 121              	.L3:
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 122              		.loc 1 385 1
 123 0092 1846     		mov	r0, r3
 124 0094 0837     		adds	r7, r7, #8
 125              	.LCFI3:
 126              		.cfi_def_cfa_offset 8
 127 0096 BD46     		mov	sp, r7
 128              	.LCFI4:
 129              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccytgAn2.s 			page 10


 130              		@ sp needed
 131 0098 80BD     		pop	{r7, pc}
 132              		.cfi_endproc
 133              	.LFE130:
 135              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 136              		.align	1
 137              		.global	HAL_HalfDuplex_Init
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv4-sp-d16
 143              	HAL_HalfDuplex_Init:
 144              	.LFB131:
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the half-duplex mode according to the specified
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 145              		.loc 1 395 1
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 8
 148              		@ frame_needed = 1, uses_anonymous_args = 0
 149 0000 80B5     		push	{r7, lr}
 150              	.LCFI5:
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 7, -8
 153              		.cfi_offset 14, -4
 154 0002 82B0     		sub	sp, sp, #8
 155              	.LCFI6:
 156              		.cfi_def_cfa_offset 16
 157 0004 00AF     		add	r7, sp, #0
 158              	.LCFI7:
 159              		.cfi_def_cfa_register 7
 160 0006 7860     		str	r0, [r7, #4]
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 161              		.loc 1 397 6
 162 0008 7B68     		ldr	r3, [r7, #4]
 163 000a 002B     		cmp	r3, #0
 164 000c 01D1     		bne	.L6
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 165              		.loc 1 399 12
 166 000e 0123     		movs	r3, #1
 167 0010 47E0     		b	.L7
 168              	.L6:
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
ARM GAS  /tmp/ccytgAn2.s 			page 11


 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 169              		.loc 1 407 12
 170 0012 7B68     		ldr	r3, [r7, #4]
 171 0014 93F83930 		ldrb	r3, [r3, #57]
 172 0018 DBB2     		uxtb	r3, r3
 173              		.loc 1 407 6
 174 001a 002B     		cmp	r3, #0
 175 001c 06D1     		bne	.L8
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 176              		.loc 1 410 17
 177 001e 7B68     		ldr	r3, [r7, #4]
 178 0020 0022     		movs	r2, #0
 179 0022 83F83820 		strb	r2, [r3, #56]
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 180              		.loc 1 424 5
 181 0026 7868     		ldr	r0, [r7, #4]
 182 0028 FFF7FEFF 		bl	HAL_UART_MspInit
 183              	.L8:
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 184              		.loc 1 428 17
 185 002c 7B68     		ldr	r3, [r7, #4]
 186 002e 2422     		movs	r2, #36
 187 0030 83F83920 		strb	r2, [r3, #57]
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 188              		.loc 1 431 3
 189 0034 7B68     		ldr	r3, [r7, #4]
 190 0036 1B68     		ldr	r3, [r3]
 191 0038 DA68     		ldr	r2, [r3, #12]
 192 003a 7B68     		ldr	r3, [r7, #4]
 193 003c 1B68     		ldr	r3, [r3]
 194 003e 22F40052 		bic	r2, r2, #8192
 195 0042 DA60     		str	r2, [r3, #12]
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 196              		.loc 1 434 3
ARM GAS  /tmp/ccytgAn2.s 			page 12


 197 0044 7868     		ldr	r0, [r7, #4]
 198 0046 FFF7FEFF 		bl	UART_SetConfig
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 199              		.loc 1 439 3
 200 004a 7B68     		ldr	r3, [r7, #4]
 201 004c 1B68     		ldr	r3, [r3]
 202 004e 1A69     		ldr	r2, [r3, #16]
 203 0050 7B68     		ldr	r3, [r7, #4]
 204 0052 1B68     		ldr	r3, [r3]
 205 0054 22F49042 		bic	r2, r2, #18432
 206 0058 1A61     		str	r2, [r3, #16]
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 207              		.loc 1 440 3
 208 005a 7B68     		ldr	r3, [r7, #4]
 209 005c 1B68     		ldr	r3, [r3]
 210 005e 5A69     		ldr	r2, [r3, #20]
 211 0060 7B68     		ldr	r3, [r7, #4]
 212 0062 1B68     		ldr	r3, [r3]
 213 0064 22F02202 		bic	r2, r2, #34
 214 0068 5A61     		str	r2, [r3, #20]
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 215              		.loc 1 443 3
 216 006a 7B68     		ldr	r3, [r7, #4]
 217 006c 1B68     		ldr	r3, [r3]
 218 006e 5A69     		ldr	r2, [r3, #20]
 219 0070 7B68     		ldr	r3, [r7, #4]
 220 0072 1B68     		ldr	r3, [r3]
 221 0074 42F00802 		orr	r2, r2, #8
 222 0078 5A61     		str	r2, [r3, #20]
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 223              		.loc 1 446 3
 224 007a 7B68     		ldr	r3, [r7, #4]
 225 007c 1B68     		ldr	r3, [r3]
 226 007e DA68     		ldr	r2, [r3, #12]
 227 0080 7B68     		ldr	r3, [r7, #4]
 228 0082 1B68     		ldr	r3, [r3]
 229 0084 42F40052 		orr	r2, r2, #8192
 230 0088 DA60     		str	r2, [r3, #12]
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 231              		.loc 1 449 20
 232 008a 7B68     		ldr	r3, [r7, #4]
 233 008c 0022     		movs	r2, #0
 234 008e DA63     		str	r2, [r3, #60]
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 235              		.loc 1 450 17
 236 0090 7B68     		ldr	r3, [r7, #4]
 237 0092 2022     		movs	r2, #32
ARM GAS  /tmp/ccytgAn2.s 			page 13


 238 0094 83F83920 		strb	r2, [r3, #57]
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 239              		.loc 1 451 18
 240 0098 7B68     		ldr	r3, [r7, #4]
 241 009a 2022     		movs	r2, #32
 242 009c 83F83A20 		strb	r2, [r3, #58]
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 243              		.loc 1 453 10
 244 00a0 0023     		movs	r3, #0
 245              	.L7:
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 246              		.loc 1 454 1
 247 00a2 1846     		mov	r0, r3
 248 00a4 0837     		adds	r7, r7, #8
 249              	.LCFI8:
 250              		.cfi_def_cfa_offset 8
 251 00a6 BD46     		mov	sp, r7
 252              	.LCFI9:
 253              		.cfi_def_cfa_register 13
 254              		@ sp needed
 255 00a8 80BD     		pop	{r7, pc}
 256              		.cfi_endproc
 257              	.LFE131:
 259              		.section	.text.HAL_LIN_Init,"ax",%progbits
 260              		.align	1
 261              		.global	HAL_LIN_Init
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 265              		.fpu fpv4-sp-d16
 267              	HAL_LIN_Init:
 268              	.LFB132:
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the LIN mode according to the specified
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  BreakDetectLength Specifies the LIN break detection length.
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 269              		.loc 1 468 1
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 8
 272              		@ frame_needed = 1, uses_anonymous_args = 0
 273 0000 80B5     		push	{r7, lr}
 274              	.LCFI10:
 275              		.cfi_def_cfa_offset 8
 276              		.cfi_offset 7, -8
 277              		.cfi_offset 14, -4
 278 0002 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/ccytgAn2.s 			page 14


 279              	.LCFI11:
 280              		.cfi_def_cfa_offset 16
 281 0004 00AF     		add	r7, sp, #0
 282              	.LCFI12:
 283              		.cfi_def_cfa_register 7
 284 0006 7860     		str	r0, [r7, #4]
 285 0008 3960     		str	r1, [r7]
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 286              		.loc 1 470 6
 287 000a 7B68     		ldr	r3, [r7, #4]
 288 000c 002B     		cmp	r3, #0
 289 000e 01D1     		bne	.L10
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 290              		.loc 1 472 12
 291 0010 0123     		movs	r3, #1
 292 0012 57E0     		b	.L11
 293              	.L10:
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the LIN UART instance */
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 294              		.loc 1 483 12
 295 0014 7B68     		ldr	r3, [r7, #4]
 296 0016 93F83930 		ldrb	r3, [r3, #57]
 297 001a DBB2     		uxtb	r3, r3
 298              		.loc 1 483 6
 299 001c 002B     		cmp	r3, #0
 300 001e 06D1     		bne	.L12
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 301              		.loc 1 486 17
 302 0020 7B68     		ldr	r3, [r7, #4]
 303 0022 0022     		movs	r2, #0
 304 0024 83F83820 		strb	r2, [r3, #56]
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
ARM GAS  /tmp/ccytgAn2.s 			page 15


 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 305              		.loc 1 500 5
 306 0028 7868     		ldr	r0, [r7, #4]
 307 002a FFF7FEFF 		bl	HAL_UART_MspInit
 308              	.L12:
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 309              		.loc 1 504 17
 310 002e 7B68     		ldr	r3, [r7, #4]
 311 0030 2422     		movs	r2, #36
 312 0032 83F83920 		strb	r2, [r3, #57]
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 313              		.loc 1 507 3
 314 0036 7B68     		ldr	r3, [r7, #4]
 315 0038 1B68     		ldr	r3, [r3]
 316 003a DA68     		ldr	r2, [r3, #12]
 317 003c 7B68     		ldr	r3, [r7, #4]
 318 003e 1B68     		ldr	r3, [r3]
 319 0040 22F40052 		bic	r2, r2, #8192
 320 0044 DA60     		str	r2, [r3, #12]
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 321              		.loc 1 510 3
 322 0046 7868     		ldr	r0, [r7, #4]
 323 0048 FFF7FEFF 		bl	UART_SetConfig
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - CLKEN bits in the USART_CR2 register,
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN bits in the USART_CR3 register.*/
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_CLKEN));
 324              		.loc 1 515 3
 325 004c 7B68     		ldr	r3, [r7, #4]
 326 004e 1B68     		ldr	r3, [r3]
 327 0050 1A69     		ldr	r2, [r3, #16]
 328 0052 7B68     		ldr	r3, [r7, #4]
 329 0054 1B68     		ldr	r3, [r3]
 330 0056 22F40062 		bic	r2, r2, #2048
 331 005a 1A61     		str	r2, [r3, #16]
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 332              		.loc 1 516 3
 333 005c 7B68     		ldr	r3, [r7, #4]
 334 005e 1B68     		ldr	r3, [r3]
 335 0060 5A69     		ldr	r2, [r3, #20]
 336 0062 7B68     		ldr	r3, [r7, #4]
 337 0064 1B68     		ldr	r3, [r3]
 338 0066 22F02A02 		bic	r2, r2, #42
 339 006a 5A61     		str	r2, [r3, #20]
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 340              		.loc 1 519 3
 341 006c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccytgAn2.s 			page 16


 342 006e 1B68     		ldr	r3, [r3]
 343 0070 1A69     		ldr	r2, [r3, #16]
 344 0072 7B68     		ldr	r3, [r7, #4]
 345 0074 1B68     		ldr	r3, [r3]
 346 0076 42F48042 		orr	r2, r2, #16384
 347 007a 1A61     		str	r2, [r3, #16]
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_LBDL);
 348              		.loc 1 522 3
 349 007c 7B68     		ldr	r3, [r7, #4]
 350 007e 1B68     		ldr	r3, [r3]
 351 0080 1A69     		ldr	r2, [r3, #16]
 352 0082 7B68     		ldr	r3, [r7, #4]
 353 0084 1B68     		ldr	r3, [r3]
 354 0086 22F02002 		bic	r2, r2, #32
 355 008a 1A61     		str	r2, [r3, #16]
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 356              		.loc 1 523 3
 357 008c 7B68     		ldr	r3, [r7, #4]
 358 008e 1B68     		ldr	r3, [r3]
 359 0090 1969     		ldr	r1, [r3, #16]
 360 0092 7B68     		ldr	r3, [r7, #4]
 361 0094 1B68     		ldr	r3, [r3]
 362 0096 3A68     		ldr	r2, [r7]
 363 0098 0A43     		orrs	r2, r2, r1
 364 009a 1A61     		str	r2, [r3, #16]
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 365              		.loc 1 526 3
 366 009c 7B68     		ldr	r3, [r7, #4]
 367 009e 1B68     		ldr	r3, [r3]
 368 00a0 DA68     		ldr	r2, [r3, #12]
 369 00a2 7B68     		ldr	r3, [r7, #4]
 370 00a4 1B68     		ldr	r3, [r3]
 371 00a6 42F40052 		orr	r2, r2, #8192
 372 00aa DA60     		str	r2, [r3, #12]
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 373              		.loc 1 529 20
 374 00ac 7B68     		ldr	r3, [r7, #4]
 375 00ae 0022     		movs	r2, #0
 376 00b0 DA63     		str	r2, [r3, #60]
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 377              		.loc 1 530 17
 378 00b2 7B68     		ldr	r3, [r7, #4]
 379 00b4 2022     		movs	r2, #32
 380 00b6 83F83920 		strb	r2, [r3, #57]
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 381              		.loc 1 531 18
 382 00ba 7B68     		ldr	r3, [r7, #4]
 383 00bc 2022     		movs	r2, #32
 384 00be 83F83A20 		strb	r2, [r3, #58]
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
ARM GAS  /tmp/ccytgAn2.s 			page 17


 385              		.loc 1 533 10
 386 00c2 0023     		movs	r3, #0
 387              	.L11:
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 388              		.loc 1 534 1
 389 00c4 1846     		mov	r0, r3
 390 00c6 0837     		adds	r7, r7, #8
 391              	.LCFI13:
 392              		.cfi_def_cfa_offset 8
 393 00c8 BD46     		mov	sp, r7
 394              	.LCFI14:
 395              		.cfi_def_cfa_register 13
 396              		@ sp needed
 397 00ca 80BD     		pop	{r7, pc}
 398              		.cfi_endproc
 399              	.LFE132:
 401              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 402              		.align	1
 403              		.global	HAL_MultiProcessor_Init
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 407              		.fpu fpv4-sp-d16
 409              	HAL_MultiProcessor_Init:
 410              	.LFB133:
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the Multi-Processor mode according to the specified
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Address USART address
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  WakeUpMethod specifies the USART wake-up method.
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_IDLELINE: Wake-up by an idle line detection
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_ADDRESSMARK: Wake-up by an address mark
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 411              		.loc 1 549 1
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 16
 414              		@ frame_needed = 1, uses_anonymous_args = 0
 415 0000 80B5     		push	{r7, lr}
 416              	.LCFI15:
 417              		.cfi_def_cfa_offset 8
 418              		.cfi_offset 7, -8
 419              		.cfi_offset 14, -4
 420 0002 84B0     		sub	sp, sp, #16
 421              	.LCFI16:
 422              		.cfi_def_cfa_offset 24
 423 0004 00AF     		add	r7, sp, #0
 424              	.LCFI17:
 425              		.cfi_def_cfa_register 7
 426 0006 F860     		str	r0, [r7, #12]
 427 0008 0B46     		mov	r3, r1
ARM GAS  /tmp/ccytgAn2.s 			page 18


 428 000a 7A60     		str	r2, [r7, #4]
 429 000c FB72     		strb	r3, [r7, #11]
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 430              		.loc 1 551 6
 431 000e FB68     		ldr	r3, [r7, #12]
 432 0010 002B     		cmp	r3, #0
 433 0012 01D1     		bne	.L14
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 434              		.loc 1 553 12
 435 0014 0123     		movs	r3, #1
 436 0016 5FE0     		b	.L15
 437              	.L14:
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Address & wake up method parameters */
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 438              		.loc 1 565 12
 439 0018 FB68     		ldr	r3, [r7, #12]
 440 001a 93F83930 		ldrb	r3, [r3, #57]
 441 001e DBB2     		uxtb	r3, r3
 442              		.loc 1 565 6
 443 0020 002B     		cmp	r3, #0
 444 0022 06D1     		bne	.L16
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 445              		.loc 1 568 17
 446 0024 FB68     		ldr	r3, [r7, #12]
 447 0026 0022     		movs	r2, #0
 448 0028 83F83820 		strb	r2, [r3, #56]
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 449              		.loc 1 582 5
 450 002c F868     		ldr	r0, [r7, #12]
 451 002e FFF7FEFF 		bl	HAL_UART_MspInit
ARM GAS  /tmp/ccytgAn2.s 			page 19


 452              	.L16:
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 453              		.loc 1 586 17
 454 0032 FB68     		ldr	r3, [r7, #12]
 455 0034 2422     		movs	r2, #36
 456 0036 83F83920 		strb	r2, [r3, #57]
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 457              		.loc 1 589 3
 458 003a FB68     		ldr	r3, [r7, #12]
 459 003c 1B68     		ldr	r3, [r3]
 460 003e DA68     		ldr	r2, [r3, #12]
 461 0040 FB68     		ldr	r3, [r7, #12]
 462 0042 1B68     		ldr	r3, [r3]
 463 0044 22F40052 		bic	r2, r2, #8192
 464 0048 DA60     		str	r2, [r3, #12]
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 465              		.loc 1 592 3
 466 004a F868     		ldr	r0, [r7, #12]
 467 004c FFF7FEFF 		bl	UART_SetConfig
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In Multi-Processor mode, the following bits must be kept cleared:
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register */
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 468              		.loc 1 597 3
 469 0050 FB68     		ldr	r3, [r7, #12]
 470 0052 1B68     		ldr	r3, [r3]
 471 0054 1A69     		ldr	r2, [r3, #16]
 472 0056 FB68     		ldr	r3, [r7, #12]
 473 0058 1B68     		ldr	r3, [r3]
 474 005a 22F49042 		bic	r2, r2, #18432
 475 005e 1A61     		str	r2, [r3, #16]
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 476              		.loc 1 598 3
 477 0060 FB68     		ldr	r3, [r7, #12]
 478 0062 1B68     		ldr	r3, [r3]
 479 0064 5A69     		ldr	r2, [r3, #20]
 480 0066 FB68     		ldr	r3, [r7, #12]
 481 0068 1B68     		ldr	r3, [r3]
 482 006a 22F02A02 		bic	r2, r2, #42
 483 006e 5A61     		str	r2, [r3, #20]
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART address node */
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_ADD);
 484              		.loc 1 601 3
 485 0070 FB68     		ldr	r3, [r7, #12]
 486 0072 1B68     		ldr	r3, [r3]
 487 0074 1A69     		ldr	r2, [r3, #16]
 488 0076 FB68     		ldr	r3, [r7, #12]
 489 0078 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccytgAn2.s 			page 20


 490 007a 22F00F02 		bic	r2, r2, #15
 491 007e 1A61     		str	r2, [r3, #16]
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, Address);
 492              		.loc 1 602 3
 493 0080 FB68     		ldr	r3, [r7, #12]
 494 0082 1B68     		ldr	r3, [r3]
 495 0084 1969     		ldr	r1, [r3, #16]
 496 0086 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 497 0088 FB68     		ldr	r3, [r7, #12]
 498 008a 1B68     		ldr	r3, [r3]
 499 008c 0A43     		orrs	r2, r2, r1
 500 008e 1A61     		str	r2, [r3, #16]
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_WAKE);
 501              		.loc 1 605 3
 502 0090 FB68     		ldr	r3, [r7, #12]
 503 0092 1B68     		ldr	r3, [r3]
 504 0094 DA68     		ldr	r2, [r3, #12]
 505 0096 FB68     		ldr	r3, [r7, #12]
 506 0098 1B68     		ldr	r3, [r3]
 507 009a 22F40062 		bic	r2, r2, #2048
 508 009e DA60     		str	r2, [r3, #12]
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 509              		.loc 1 606 3
 510 00a0 FB68     		ldr	r3, [r7, #12]
 511 00a2 1B68     		ldr	r3, [r3]
 512 00a4 D968     		ldr	r1, [r3, #12]
 513 00a6 FB68     		ldr	r3, [r7, #12]
 514 00a8 1B68     		ldr	r3, [r3]
 515 00aa 7A68     		ldr	r2, [r7, #4]
 516 00ac 0A43     		orrs	r2, r2, r1
 517 00ae DA60     		str	r2, [r3, #12]
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 518              		.loc 1 609 3
 519 00b0 FB68     		ldr	r3, [r7, #12]
 520 00b2 1B68     		ldr	r3, [r3]
 521 00b4 DA68     		ldr	r2, [r3, #12]
 522 00b6 FB68     		ldr	r3, [r7, #12]
 523 00b8 1B68     		ldr	r3, [r3]
 524 00ba 42F40052 		orr	r2, r2, #8192
 525 00be DA60     		str	r2, [r3, #12]
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 526              		.loc 1 612 20
 527 00c0 FB68     		ldr	r3, [r7, #12]
 528 00c2 0022     		movs	r2, #0
 529 00c4 DA63     		str	r2, [r3, #60]
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 530              		.loc 1 613 17
 531 00c6 FB68     		ldr	r3, [r7, #12]
 532 00c8 2022     		movs	r2, #32
 533 00ca 83F83920 		strb	r2, [r3, #57]
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
ARM GAS  /tmp/ccytgAn2.s 			page 21


 534              		.loc 1 614 18
 535 00ce FB68     		ldr	r3, [r7, #12]
 536 00d0 2022     		movs	r2, #32
 537 00d2 83F83A20 		strb	r2, [r3, #58]
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 538              		.loc 1 616 10
 539 00d6 0023     		movs	r3, #0
 540              	.L15:
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 541              		.loc 1 617 1
 542 00d8 1846     		mov	r0, r3
 543 00da 1037     		adds	r7, r7, #16
 544              	.LCFI18:
 545              		.cfi_def_cfa_offset 8
 546 00dc BD46     		mov	sp, r7
 547              	.LCFI19:
 548              		.cfi_def_cfa_register 13
 549              		@ sp needed
 550 00de 80BD     		pop	{r7, pc}
 551              		.cfi_endproc
 552              	.LFE133:
 554              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 555              		.align	1
 556              		.global	HAL_UART_DeInit
 557              		.syntax unified
 558              		.thumb
 559              		.thumb_func
 560              		.fpu fpv4-sp-d16
 562              	HAL_UART_DeInit:
 563              	.LFB134:
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DeInitializes the UART peripheral.
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 564              		.loc 1 626 1
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 8
 567              		@ frame_needed = 1, uses_anonymous_args = 0
 568 0000 80B5     		push	{r7, lr}
 569              	.LCFI20:
 570              		.cfi_def_cfa_offset 8
 571              		.cfi_offset 7, -8
 572              		.cfi_offset 14, -4
 573 0002 82B0     		sub	sp, sp, #8
 574              	.LCFI21:
 575              		.cfi_def_cfa_offset 16
 576 0004 00AF     		add	r7, sp, #0
 577              	.LCFI22:
 578              		.cfi_def_cfa_register 7
 579 0006 7860     		str	r0, [r7, #4]
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
ARM GAS  /tmp/ccytgAn2.s 			page 22


 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 580              		.loc 1 628 6
 581 0008 7B68     		ldr	r3, [r7, #4]
 582 000a 002B     		cmp	r3, #0
 583 000c 01D1     		bne	.L18
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 584              		.loc 1 630 12
 585 000e 0123     		movs	r3, #1
 586 0010 1EE0     		b	.L19
 587              	.L18:
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 588              		.loc 1 636 17
 589 0012 7B68     		ldr	r3, [r7, #4]
 590 0014 2422     		movs	r2, #36
 591 0016 83F83920 		strb	r2, [r3, #57]
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the Peripheral */
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 592              		.loc 1 639 3
 593 001a 7B68     		ldr	r3, [r7, #4]
 594 001c 1B68     		ldr	r3, [r3]
 595 001e DA68     		ldr	r2, [r3, #12]
 596 0020 7B68     		ldr	r3, [r7, #4]
 597 0022 1B68     		ldr	r3, [r3]
 598 0024 22F40052 		bic	r2, r2, #8192
 599 0028 DA60     		str	r2, [r3, #12]
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DeInit the low level hardware */
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DeInit the low level hardware */
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 600              		.loc 1 650 3
 601 002a 7868     		ldr	r0, [r7, #4]
 602 002c FFF7FEFF 		bl	HAL_UART_MspDeInit
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 603              		.loc 1 653 20
 604 0030 7B68     		ldr	r3, [r7, #4]
 605 0032 0022     		movs	r2, #0
 606 0034 DA63     		str	r2, [r3, #60]
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 607              		.loc 1 654 17
 608 0036 7B68     		ldr	r3, [r7, #4]
 609 0038 0022     		movs	r2, #0
ARM GAS  /tmp/ccytgAn2.s 			page 23


 610 003a 83F83920 		strb	r2, [r3, #57]
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 611              		.loc 1 655 18
 612 003e 7B68     		ldr	r3, [r7, #4]
 613 0040 0022     		movs	r2, #0
 614 0042 83F83A20 		strb	r2, [r3, #58]
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlock */
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 615              		.loc 1 658 3
 616 0046 7B68     		ldr	r3, [r7, #4]
 617 0048 0022     		movs	r2, #0
 618 004a 83F83820 		strb	r2, [r3, #56]
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 619              		.loc 1 660 10
 620 004e 0023     		movs	r3, #0
 621              	.L19:
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 622              		.loc 1 661 1
 623 0050 1846     		mov	r0, r3
 624 0052 0837     		adds	r7, r7, #8
 625              	.LCFI23:
 626              		.cfi_def_cfa_offset 8
 627 0054 BD46     		mov	sp, r7
 628              	.LCFI24:
 629              		.cfi_def_cfa_register 13
 630              		@ sp needed
 631 0056 80BD     		pop	{r7, pc}
 632              		.cfi_endproc
 633              	.LFE134:
 635              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 636              		.align	1
 637              		.weak	HAL_UART_MspInit
 638              		.syntax unified
 639              		.thumb
 640              		.thumb_func
 641              		.fpu fpv4-sp-d16
 643              	HAL_UART_MspInit:
 644              	.LFB135:
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP Init.
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 645              		.loc 1 670 1
 646              		.cfi_startproc
 647              		@ args = 0, pretend = 0, frame = 8
 648              		@ frame_needed = 1, uses_anonymous_args = 0
 649              		@ link register save eliminated.
 650 0000 80B4     		push	{r7}
 651              	.LCFI25:
 652              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccytgAn2.s 			page 24


 653              		.cfi_offset 7, -4
 654 0002 83B0     		sub	sp, sp, #12
 655              	.LCFI26:
 656              		.cfi_def_cfa_offset 16
 657 0004 00AF     		add	r7, sp, #0
 658              	.LCFI27:
 659              		.cfi_def_cfa_register 7
 660 0006 7860     		str	r0, [r7, #4]
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspInit could be implemented in the user file
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 661              		.loc 1 676 1
 662 0008 00BF     		nop
 663 000a 0C37     		adds	r7, r7, #12
 664              	.LCFI28:
 665              		.cfi_def_cfa_offset 4
 666 000c BD46     		mov	sp, r7
 667              	.LCFI29:
 668              		.cfi_def_cfa_register 13
 669              		@ sp needed
 670 000e 5DF8047B 		ldr	r7, [sp], #4
 671              	.LCFI30:
 672              		.cfi_restore 7
 673              		.cfi_def_cfa_offset 0
 674 0012 7047     		bx	lr
 675              		.cfi_endproc
 676              	.LFE135:
 678              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 679              		.align	1
 680              		.weak	HAL_UART_MspDeInit
 681              		.syntax unified
 682              		.thumb
 683              		.thumb_func
 684              		.fpu fpv4-sp-d16
 686              	HAL_UART_MspDeInit:
 687              	.LFB136:
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP DeInit.
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 688              		.loc 1 685 1
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 8
 691              		@ frame_needed = 1, uses_anonymous_args = 0
 692              		@ link register save eliminated.
 693 0000 80B4     		push	{r7}
 694              	.LCFI31:
 695              		.cfi_def_cfa_offset 4
 696              		.cfi_offset 7, -4
ARM GAS  /tmp/ccytgAn2.s 			page 25


 697 0002 83B0     		sub	sp, sp, #12
 698              	.LCFI32:
 699              		.cfi_def_cfa_offset 16
 700 0004 00AF     		add	r7, sp, #0
 701              	.LCFI33:
 702              		.cfi_def_cfa_register 7
 703 0006 7860     		str	r0, [r7, #4]
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspDeInit could be implemented in the user file
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 704              		.loc 1 691 1
 705 0008 00BF     		nop
 706 000a 0C37     		adds	r7, r7, #12
 707              	.LCFI34:
 708              		.cfi_def_cfa_offset 4
 709 000c BD46     		mov	sp, r7
 710              	.LCFI35:
 711              		.cfi_def_cfa_register 13
 712              		@ sp needed
 713 000e 5DF8047B 		ldr	r7, [sp], #4
 714              	.LCFI36:
 715              		.cfi_restore 7
 716              		.cfi_def_cfa_offset 0
 717 0012 7047     		bx	lr
 718              		.cfi_endproc
 719              	.LFE136:
 721              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 722              		.align	1
 723              		.global	HAL_UART_Transmit
 724              		.syntax unified
 725              		.thumb
 726              		.thumb_func
 727              		.fpu fpv4-sp-d16
 729              	HAL_UART_Transmit:
 730              	.LFB137:
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Register a User UART Callback
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart uart handle
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
ARM GAS  /tmp/ccytgAn2.s 			page 26


 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (pCallback == NULL)
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process locked */
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
ARM GAS  /tmp/ccytgAn2.s 			page 27


 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Return error status */
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Release Lock */
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart uart handle
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
ARM GAS  /tmp/ccytgAn2.s 			page 28


 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process locked */
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
ARM GAS  /tmp/ccytgAn2.s 			page 29


 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Return error status */
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Release Lock */
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief UART Transmit and Receive functions
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
ARM GAS  /tmp/ccytgAn2.s 			page 30


 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### IO operation functions #####
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and Half duplex data transfers.
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) There are two modes of transfer:
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            after finishing transfer.
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            or DMA, these API's return the HAL status.
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The end of the data processing will be indicated through the
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            using DMA mode.
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            will be executed respectively at the end of the transmit or receive process
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Blocking mode API's are :
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive()
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Abort()
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         Errors are handled as follows :
ARM GAS  /tmp/ccytgAn2.s 			page 31


 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in blocking mode.
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 731              		.loc 1 1025 1
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 24
 734              		@ frame_needed = 1, uses_anonymous_args = 0
 735 0000 80B5     		push	{r7, lr}
 736              	.LCFI37:
 737              		.cfi_def_cfa_offset 8
 738              		.cfi_offset 7, -8
 739              		.cfi_offset 14, -4
 740 0002 88B0     		sub	sp, sp, #32
 741              	.LCFI38:
 742              		.cfi_def_cfa_offset 40
 743 0004 02AF     		add	r7, sp, #8
 744              	.LCFI39:
 745              		.cfi_def_cfa 7, 32
 746 0006 F860     		str	r0, [r7, #12]
 747 0008 B960     		str	r1, [r7, #8]
 748 000a 3B60     		str	r3, [r7]
 749 000c 1346     		mov	r3, r2	@ movhi
 750 000e FB80     		strh	r3, [r7, #6]	@ movhi
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *tmp;
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 751              		.loc 1 1027 12
 752 0010 0023     		movs	r3, #0
 753 0012 7B61     		str	r3, [r7, #20]
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
ARM GAS  /tmp/ccytgAn2.s 			page 32


1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 754              		.loc 1 1030 12
 755 0014 FB68     		ldr	r3, [r7, #12]
 756 0016 93F83930 		ldrb	r3, [r3, #57]
 757 001a DBB2     		uxtb	r3, r3
 758              		.loc 1 1030 6
 759 001c 202B     		cmp	r3, #32
 760 001e 40F08380 		bne	.L23
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 761              		.loc 1 1032 8
 762 0022 BB68     		ldr	r3, [r7, #8]
 763 0024 002B     		cmp	r3, #0
 764 0026 02D0     		beq	.L24
 765              		.loc 1 1032 25 discriminator 1
 766 0028 FB88     		ldrh	r3, [r7, #6]
 767 002a 002B     		cmp	r3, #0
 768 002c 01D1     		bne	.L25
 769              	.L24:
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 770              		.loc 1 1034 15
 771 002e 0123     		movs	r3, #1
 772 0030 7BE0     		b	.L26
 773              	.L25:
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 774              		.loc 1 1038 5
 775 0032 FB68     		ldr	r3, [r7, #12]
 776 0034 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 777 0038 012B     		cmp	r3, #1
 778 003a 01D1     		bne	.L27
 779              		.loc 1 1038 5 is_stmt 0 discriminator 1
 780 003c 0223     		movs	r3, #2
 781 003e 74E0     		b	.L26
 782              	.L27:
 783              		.loc 1 1038 5 discriminator 2
 784 0040 FB68     		ldr	r3, [r7, #12]
 785 0042 0122     		movs	r2, #1
 786 0044 83F83820 		strb	r2, [r3, #56]
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 787              		.loc 1 1040 22 is_stmt 1 discriminator 2
 788 0048 FB68     		ldr	r3, [r7, #12]
 789 004a 0022     		movs	r2, #0
 790 004c DA63     		str	r2, [r3, #60]
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 791              		.loc 1 1041 19 discriminator 2
 792 004e FB68     		ldr	r3, [r7, #12]
 793 0050 2122     		movs	r2, #33
 794 0052 83F83920 		strb	r2, [r3, #57]
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout managment */
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 795              		.loc 1 1044 17 discriminator 2
ARM GAS  /tmp/ccytgAn2.s 			page 33


 796 0056 FFF7FEFF 		bl	HAL_GetTick
 797 005a 7861     		str	r0, [r7, #20]
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 798              		.loc 1 1046 23 discriminator 2
 799 005c FB68     		ldr	r3, [r7, #12]
 800 005e FA88     		ldrh	r2, [r7, #6]	@ movhi
 801 0060 9A84     		strh	r2, [r3, #36]	@ movhi
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 802              		.loc 1 1047 24 discriminator 2
 803 0062 FB68     		ldr	r3, [r7, #12]
 804 0064 FA88     		ldrh	r2, [r7, #6]	@ movhi
 805 0066 DA84     		strh	r2, [r3, #38]	@ movhi
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 806              		.loc 1 1050 5 discriminator 2
 807 0068 FB68     		ldr	r3, [r7, #12]
 808 006a 0022     		movs	r2, #0
 809 006c 83F83820 		strb	r2, [r3, #56]
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
 810              		.loc 1 1052 11 discriminator 2
 811 0070 42E0     		b	.L28
 812              	.L34:
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount--;
 813              		.loc 1 1054 12
 814 0072 FB68     		ldr	r3, [r7, #12]
 815 0074 DB8C     		ldrh	r3, [r3, #38]	@ movhi
 816 0076 9BB2     		uxth	r3, r3
 817              		.loc 1 1054 25
 818 0078 013B     		subs	r3, r3, #1
 819 007a 9AB2     		uxth	r2, r3
 820 007c FB68     		ldr	r3, [r7, #12]
 821 007e DA84     		strh	r2, [r3, #38]	@ movhi
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 822              		.loc 1 1055 22
 823 0080 FB68     		ldr	r3, [r7, #12]
 824 0082 9B68     		ldr	r3, [r3, #8]
 825              		.loc 1 1055 10
 826 0084 B3F5805F 		cmp	r3, #4096
 827 0088 22D1     		bne	.L29
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 828              		.loc 1 1057 13
 829 008a 3B68     		ldr	r3, [r7]
 830 008c 0093     		str	r3, [sp]
 831 008e 7B69     		ldr	r3, [r7, #20]
 832 0090 0022     		movs	r2, #0
 833 0092 8021     		movs	r1, #128
 834 0094 F868     		ldr	r0, [r7, #12]
 835 0096 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 836 009a 0346     		mov	r3, r0
 837              		.loc 1 1057 12
 838 009c 002B     		cmp	r3, #0
 839 009e 01D0     		beq	.L30
ARM GAS  /tmp/ccytgAn2.s 			page 34


1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 840              		.loc 1 1059 18
 841 00a0 0323     		movs	r3, #3
 842 00a2 42E0     		b	.L26
 843              	.L30:
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         tmp = (uint16_t *) pData;
 844              		.loc 1 1061 13
 845 00a4 BB68     		ldr	r3, [r7, #8]
 846 00a6 3B61     		str	r3, [r7, #16]
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 847              		.loc 1 1062 32
 848 00a8 3B69     		ldr	r3, [r7, #16]
 849 00aa 1B88     		ldrh	r3, [r3]
 850              		.loc 1 1062 37
 851 00ac 1A46     		mov	r2, r3
 852              		.loc 1 1062 14
 853 00ae FB68     		ldr	r3, [r7, #12]
 854 00b0 1B68     		ldr	r3, [r3]
 855              		.loc 1 1062 37
 856 00b2 C2F30802 		ubfx	r2, r2, #0, #9
 857              		.loc 1 1062 29
 858 00b6 5A60     		str	r2, [r3, #4]
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (huart->Init.Parity == UART_PARITY_NONE)
 859              		.loc 1 1063 24
 860 00b8 FB68     		ldr	r3, [r7, #12]
 861 00ba 1B69     		ldr	r3, [r3, #16]
 862              		.loc 1 1063 12
 863 00bc 002B     		cmp	r3, #0
 864 00be 03D1     		bne	.L31
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData += 2U;
 865              		.loc 1 1065 17
 866 00c0 BB68     		ldr	r3, [r7, #8]
 867 00c2 0233     		adds	r3, r3, #2
 868 00c4 BB60     		str	r3, [r7, #8]
 869 00c6 17E0     		b	.L28
 870              	.L31:
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData += 1U;
 871              		.loc 1 1069 17
 872 00c8 BB68     		ldr	r3, [r7, #8]
 873 00ca 0133     		adds	r3, r3, #1
 874 00cc BB60     		str	r3, [r7, #8]
 875 00ce 13E0     		b	.L28
 876              	.L29:
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 877              		.loc 1 1074 13
 878 00d0 3B68     		ldr	r3, [r7]
 879 00d2 0093     		str	r3, [sp]
ARM GAS  /tmp/ccytgAn2.s 			page 35


 880 00d4 7B69     		ldr	r3, [r7, #20]
 881 00d6 0022     		movs	r2, #0
 882 00d8 8021     		movs	r1, #128
 883 00da F868     		ldr	r0, [r7, #12]
 884 00dc FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 885 00e0 0346     		mov	r3, r0
 886              		.loc 1 1074 12
 887 00e2 002B     		cmp	r3, #0
 888 00e4 01D0     		beq	.L33
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 889              		.loc 1 1076 18
 890 00e6 0323     		movs	r3, #3
 891 00e8 1FE0     		b	.L26
 892              	.L33:
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 893              		.loc 1 1078 38
 894 00ea BB68     		ldr	r3, [r7, #8]
 895 00ec 5A1C     		adds	r2, r3, #1
 896 00ee BA60     		str	r2, [r7, #8]
 897              		.loc 1 1078 32
 898 00f0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 899              		.loc 1 1078 14
 900 00f2 FB68     		ldr	r3, [r7, #12]
 901 00f4 1B68     		ldr	r3, [r3]
 902              		.loc 1 1078 29
 903 00f6 5A60     		str	r2, [r3, #4]
 904              	.L28:
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 905              		.loc 1 1052 17
 906 00f8 FB68     		ldr	r3, [r7, #12]
 907 00fa DB8C     		ldrh	r3, [r3, #38]	@ movhi
 908 00fc 9BB2     		uxth	r3, r3
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 909              		.loc 1 1052 11
 910 00fe 002B     		cmp	r3, #0
 911 0100 B7D1     		bne	.L34
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 912              		.loc 1 1082 9
 913 0102 3B68     		ldr	r3, [r7]
 914 0104 0093     		str	r3, [sp]
 915 0106 7B69     		ldr	r3, [r7, #20]
 916 0108 0022     		movs	r2, #0
 917 010a 4021     		movs	r1, #64
 918 010c F868     		ldr	r0, [r7, #12]
 919 010e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 920 0112 0346     		mov	r3, r0
 921              		.loc 1 1082 8
 922 0114 002B     		cmp	r3, #0
 923 0116 01D0     		beq	.L35
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_TIMEOUT;
 924              		.loc 1 1084 14
ARM GAS  /tmp/ccytgAn2.s 			page 36


 925 0118 0323     		movs	r3, #3
 926 011a 06E0     		b	.L26
 927              	.L35:
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 928              		.loc 1 1088 19
 929 011c FB68     		ldr	r3, [r7, #12]
 930 011e 2022     		movs	r2, #32
 931 0120 83F83920 		strb	r2, [r3, #57]
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 932              		.loc 1 1090 12
 933 0124 0023     		movs	r3, #0
 934 0126 00E0     		b	.L26
 935              	.L23:
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 936              		.loc 1 1094 12
 937 0128 0223     		movs	r3, #2
 938              	.L26:
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 939              		.loc 1 1096 1
 940 012a 1846     		mov	r0, r3
 941 012c 1837     		adds	r7, r7, #24
 942              	.LCFI40:
 943              		.cfi_def_cfa_offset 8
 944 012e BD46     		mov	sp, r7
 945              	.LCFI41:
 946              		.cfi_def_cfa_register 13
 947              		@ sp needed
 948 0130 80BD     		pop	{r7, pc}
 949              		.cfi_endproc
 950              	.LFE137:
 952              		.section	.text.HAL_UART_Receive,"ax",%progbits
 953              		.align	1
 954              		.global	HAL_UART_Receive
 955              		.syntax unified
 956              		.thumb
 957              		.thumb_func
 958              		.fpu fpv4-sp-d16
 960              	HAL_UART_Receive:
 961              	.LFB138:
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in blocking mode.
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
ARM GAS  /tmp/ccytgAn2.s 			page 37


1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 962              		.loc 1 1111 1
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 24
 965              		@ frame_needed = 1, uses_anonymous_args = 0
 966 0000 80B5     		push	{r7, lr}
 967              	.LCFI42:
 968              		.cfi_def_cfa_offset 8
 969              		.cfi_offset 7, -8
 970              		.cfi_offset 14, -4
 971 0002 88B0     		sub	sp, sp, #32
 972              	.LCFI43:
 973              		.cfi_def_cfa_offset 40
 974 0004 02AF     		add	r7, sp, #8
 975              	.LCFI44:
 976              		.cfi_def_cfa 7, 32
 977 0006 F860     		str	r0, [r7, #12]
 978 0008 B960     		str	r1, [r7, #8]
 979 000a 3B60     		str	r3, [r7]
 980 000c 1346     		mov	r3, r2	@ movhi
 981 000e FB80     		strh	r3, [r7, #6]	@ movhi
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *tmp;
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 982              		.loc 1 1113 12
 983 0010 0023     		movs	r3, #0
 984 0012 7B61     		str	r3, [r7, #20]
1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 985              		.loc 1 1116 12
 986 0014 FB68     		ldr	r3, [r7, #12]
 987 0016 93F83A30 		ldrb	r3, [r3, #58]
 988 001a DBB2     		uxtb	r3, r3
 989              		.loc 1 1116 6
 990 001c 202B     		cmp	r3, #32
 991 001e 40F09080 		bne	.L37
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 992              		.loc 1 1118 8
 993 0022 BB68     		ldr	r3, [r7, #8]
 994 0024 002B     		cmp	r3, #0
 995 0026 02D0     		beq	.L38
 996              		.loc 1 1118 25 discriminator 1
 997 0028 FB88     		ldrh	r3, [r7, #6]
 998 002a 002B     		cmp	r3, #0
 999 002c 01D1     		bne	.L39
 1000              	.L38:
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 1001              		.loc 1 1120 15
 1002 002e 0123     		movs	r3, #1
 1003 0030 88E0     		b	.L40
 1004              	.L39:
ARM GAS  /tmp/ccytgAn2.s 			page 38


1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1005              		.loc 1 1124 5
 1006 0032 FB68     		ldr	r3, [r7, #12]
 1007 0034 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1008 0038 012B     		cmp	r3, #1
 1009 003a 01D1     		bne	.L41
 1010              		.loc 1 1124 5 is_stmt 0 discriminator 1
 1011 003c 0223     		movs	r3, #2
 1012 003e 81E0     		b	.L40
 1013              	.L41:
 1014              		.loc 1 1124 5 discriminator 2
 1015 0040 FB68     		ldr	r3, [r7, #12]
 1016 0042 0122     		movs	r2, #1
 1017 0044 83F83820 		strb	r2, [r3, #56]
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1018              		.loc 1 1126 22 is_stmt 1 discriminator 2
 1019 0048 FB68     		ldr	r3, [r7, #12]
 1020 004a 0022     		movs	r2, #0
 1021 004c DA63     		str	r2, [r3, #60]
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1022              		.loc 1 1127 20 discriminator 2
 1023 004e FB68     		ldr	r3, [r7, #12]
 1024 0050 2222     		movs	r2, #34
 1025 0052 83F83A20 		strb	r2, [r3, #58]
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout managment */
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 1026              		.loc 1 1130 17 discriminator 2
 1027 0056 FFF7FEFF 		bl	HAL_GetTick
 1028 005a 7861     		str	r0, [r7, #20]
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1029              		.loc 1 1132 23 discriminator 2
 1030 005c FB68     		ldr	r3, [r7, #12]
 1031 005e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1032 0060 9A85     		strh	r2, [r3, #44]	@ movhi
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1033              		.loc 1 1133 24 discriminator 2
 1034 0062 FB68     		ldr	r3, [r7, #12]
 1035 0064 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1036 0066 DA85     		strh	r2, [r3, #46]	@ movhi
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1037              		.loc 1 1136 5 discriminator 2
 1038 0068 FB68     		ldr	r3, [r7, #12]
 1039 006a 0022     		movs	r2, #0
 1040 006c 83F83820 		strb	r2, [r3, #56]
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check the remain data to be received */
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
 1041              		.loc 1 1139 11 discriminator 2
 1042 0070 5CE0     		b	.L42
ARM GAS  /tmp/ccytgAn2.s 			page 39


 1043              	.L49:
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount--;
 1044              		.loc 1 1141 12
 1045 0072 FB68     		ldr	r3, [r7, #12]
 1046 0074 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 1047 0076 9BB2     		uxth	r3, r3
 1048              		.loc 1 1141 25
 1049 0078 013B     		subs	r3, r3, #1
 1050 007a 9AB2     		uxth	r2, r3
 1051 007c FB68     		ldr	r3, [r7, #12]
 1052 007e DA85     		strh	r2, [r3, #46]	@ movhi
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 1053              		.loc 1 1142 22
 1054 0080 FB68     		ldr	r3, [r7, #12]
 1055 0082 9B68     		ldr	r3, [r3, #8]
 1056              		.loc 1 1142 10
 1057 0084 B3F5805F 		cmp	r3, #4096
 1058 0088 2BD1     		bne	.L43
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK
 1059              		.loc 1 1144 13
 1060 008a 3B68     		ldr	r3, [r7]
 1061 008c 0093     		str	r3, [sp]
 1062 008e 7B69     		ldr	r3, [r7, #20]
 1063 0090 0022     		movs	r2, #0
 1064 0092 2021     		movs	r1, #32
 1065 0094 F868     		ldr	r0, [r7, #12]
 1066 0096 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1067 009a 0346     		mov	r3, r0
 1068              		.loc 1 1144 12
 1069 009c 002B     		cmp	r3, #0
 1070 009e 01D0     		beq	.L44
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 1071              		.loc 1 1146 18
 1072 00a0 0323     		movs	r3, #3
 1073 00a2 4FE0     		b	.L40
 1074              	.L44:
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         tmp = (uint16_t *) pData;
 1075              		.loc 1 1148 13
 1076 00a4 BB68     		ldr	r3, [r7, #8]
 1077 00a6 3B61     		str	r3, [r7, #16]
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (huart->Init.Parity == UART_PARITY_NONE)
 1078              		.loc 1 1149 24
 1079 00a8 FB68     		ldr	r3, [r7, #12]
 1080 00aa 1B69     		ldr	r3, [r3, #16]
 1081              		.loc 1 1149 12
 1082 00ac 002B     		cmp	r3, #0
 1083 00ae 0CD1     		bne	.L45
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 1084              		.loc 1 1151 34
 1085 00b0 FB68     		ldr	r3, [r7, #12]
 1086 00b2 1B68     		ldr	r3, [r3]
 1087              		.loc 1 1151 44
ARM GAS  /tmp/ccytgAn2.s 			page 40


 1088 00b4 5B68     		ldr	r3, [r3, #4]
 1089              		.loc 1 1151 18
 1090 00b6 9BB2     		uxth	r3, r3
 1091 00b8 C3F30803 		ubfx	r3, r3, #0, #9
 1092 00bc 9AB2     		uxth	r2, r3
 1093              		.loc 1 1151 16
 1094 00be 3B69     		ldr	r3, [r7, #16]
 1095 00c0 1A80     		strh	r2, [r3]	@ movhi
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData += 2U;
 1096              		.loc 1 1152 17
 1097 00c2 BB68     		ldr	r3, [r7, #8]
 1098 00c4 0233     		adds	r3, r3, #2
 1099 00c6 BB60     		str	r3, [r7, #8]
 1100 00c8 30E0     		b	.L42
 1101              	.L45:
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 1102              		.loc 1 1156 34
 1103 00ca FB68     		ldr	r3, [r7, #12]
 1104 00cc 1B68     		ldr	r3, [r3]
 1105              		.loc 1 1156 44
 1106 00ce 5B68     		ldr	r3, [r3, #4]
 1107              		.loc 1 1156 18
 1108 00d0 9BB2     		uxth	r3, r3
 1109 00d2 DBB2     		uxtb	r3, r3
 1110 00d4 9AB2     		uxth	r2, r3
 1111              		.loc 1 1156 16
 1112 00d6 3B69     		ldr	r3, [r7, #16]
 1113 00d8 1A80     		strh	r2, [r3]	@ movhi
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData += 1U;
 1114              		.loc 1 1157 17
 1115 00da BB68     		ldr	r3, [r7, #8]
 1116 00dc 0133     		adds	r3, r3, #1
 1117 00de BB60     		str	r3, [r7, #8]
 1118 00e0 24E0     		b	.L42
 1119              	.L43:
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK
 1120              		.loc 1 1163 13
 1121 00e2 3B68     		ldr	r3, [r7]
 1122 00e4 0093     		str	r3, [sp]
 1123 00e6 7B69     		ldr	r3, [r7, #20]
 1124 00e8 0022     		movs	r2, #0
 1125 00ea 2021     		movs	r1, #32
 1126 00ec F868     		ldr	r0, [r7, #12]
 1127 00ee FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1128 00f2 0346     		mov	r3, r0
 1129              		.loc 1 1163 12
 1130 00f4 002B     		cmp	r3, #0
 1131 00f6 01D0     		beq	.L47
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
ARM GAS  /tmp/ccytgAn2.s 			page 41


1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 1132              		.loc 1 1165 18
 1133 00f8 0323     		movs	r3, #3
 1134 00fa 23E0     		b	.L40
 1135              	.L47:
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (huart->Init.Parity == UART_PARITY_NONE)
 1136              		.loc 1 1167 24
 1137 00fc FB68     		ldr	r3, [r7, #12]
 1138 00fe 1B69     		ldr	r3, [r3, #16]
 1139              		.loc 1 1167 12
 1140 0100 002B     		cmp	r3, #0
 1141 0102 08D1     		bne	.L48
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 1142              		.loc 1 1169 37
 1143 0104 FB68     		ldr	r3, [r7, #12]
 1144 0106 1B68     		ldr	r3, [r3]
 1145              		.loc 1 1169 47
 1146 0108 5968     		ldr	r1, [r3, #4]
 1147              		.loc 1 1169 17
 1148 010a BB68     		ldr	r3, [r7, #8]
 1149 010c 5A1C     		adds	r2, r3, #1
 1150 010e BA60     		str	r2, [r7, #8]
 1151              		.loc 1 1169 22
 1152 0110 CAB2     		uxtb	r2, r1
 1153              		.loc 1 1169 20
 1154 0112 1A70     		strb	r2, [r3]
 1155 0114 0AE0     		b	.L42
 1156              	.L48:
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 1157              		.loc 1 1173 37
 1158 0116 FB68     		ldr	r3, [r7, #12]
 1159 0118 1B68     		ldr	r3, [r3]
 1160              		.loc 1 1173 47
 1161 011a 5B68     		ldr	r3, [r3, #4]
 1162              		.loc 1 1173 22
 1163 011c DAB2     		uxtb	r2, r3
 1164              		.loc 1 1173 17
 1165 011e BB68     		ldr	r3, [r7, #8]
 1166 0120 591C     		adds	r1, r3, #1
 1167 0122 B960     		str	r1, [r7, #8]
 1168              		.loc 1 1173 22
 1169 0124 02F07F02 		and	r2, r2, #127
 1170 0128 D2B2     		uxtb	r2, r2
 1171              		.loc 1 1173 20
 1172 012a 1A70     		strb	r2, [r3]
 1173              	.L42:
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1174              		.loc 1 1139 17
 1175 012c FB68     		ldr	r3, [r7, #12]
 1176 012e DB8D     		ldrh	r3, [r3, #46]	@ movhi
 1177 0130 9BB2     		uxth	r3, r3
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
ARM GAS  /tmp/ccytgAn2.s 			page 42


 1178              		.loc 1 1139 11
 1179 0132 002B     		cmp	r3, #0
 1180 0134 9DD1     		bne	.L49
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1181              		.loc 1 1180 20
 1182 0136 FB68     		ldr	r3, [r7, #12]
 1183 0138 2022     		movs	r2, #32
 1184 013a 83F83A20 		strb	r2, [r3, #58]
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1185              		.loc 1 1182 12
 1186 013e 0023     		movs	r3, #0
 1187 0140 00E0     		b	.L40
 1188              	.L37:
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1189              		.loc 1 1186 12
 1190 0142 0223     		movs	r3, #2
 1191              	.L40:
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1192              		.loc 1 1188 1
 1193 0144 1846     		mov	r0, r3
 1194 0146 1837     		adds	r7, r7, #24
 1195              	.LCFI45:
 1196              		.cfi_def_cfa_offset 8
 1197 0148 BD46     		mov	sp, r7
 1198              	.LCFI46:
 1199              		.cfi_def_cfa_register 13
 1200              		@ sp needed
 1201 014a 80BD     		pop	{r7, pc}
 1202              		.cfi_endproc
 1203              	.LFE138:
 1205              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1206              		.align	1
 1207              		.global	HAL_UART_Transmit_IT
 1208              		.syntax unified
 1209              		.thumb
 1210              		.thumb_func
 1211              		.fpu fpv4-sp-d16
 1213              	HAL_UART_Transmit_IT:
 1214              	.LFB139:
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
ARM GAS  /tmp/ccytgAn2.s 			page 43


1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1215              		.loc 1 1202 1
 1216              		.cfi_startproc
 1217              		@ args = 0, pretend = 0, frame = 16
 1218              		@ frame_needed = 1, uses_anonymous_args = 0
 1219              		@ link register save eliminated.
 1220 0000 80B4     		push	{r7}
 1221              	.LCFI47:
 1222              		.cfi_def_cfa_offset 4
 1223              		.cfi_offset 7, -4
 1224 0002 85B0     		sub	sp, sp, #20
 1225              	.LCFI48:
 1226              		.cfi_def_cfa_offset 24
 1227 0004 00AF     		add	r7, sp, #0
 1228              	.LCFI49:
 1229              		.cfi_def_cfa_register 7
 1230 0006 F860     		str	r0, [r7, #12]
 1231 0008 B960     		str	r1, [r7, #8]
 1232 000a 1346     		mov	r3, r2
 1233 000c FB80     		strh	r3, [r7, #6]	@ movhi
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1234              		.loc 1 1204 12
 1235 000e FB68     		ldr	r3, [r7, #12]
 1236 0010 93F83930 		ldrb	r3, [r3, #57]
 1237 0014 DBB2     		uxtb	r3, r3
 1238              		.loc 1 1204 6
 1239 0016 202B     		cmp	r3, #32
 1240 0018 30D1     		bne	.L51
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1241              		.loc 1 1206 8
 1242 001a BB68     		ldr	r3, [r7, #8]
 1243 001c 002B     		cmp	r3, #0
 1244 001e 02D0     		beq	.L52
 1245              		.loc 1 1206 25 discriminator 1
 1246 0020 FB88     		ldrh	r3, [r7, #6]
 1247 0022 002B     		cmp	r3, #0
 1248 0024 01D1     		bne	.L53
 1249              	.L52:
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1250              		.loc 1 1208 14
 1251 0026 0123     		movs	r3, #1
 1252 0028 29E0     		b	.L54
 1253              	.L53:
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1254              		.loc 1 1212 5
ARM GAS  /tmp/ccytgAn2.s 			page 44


 1255 002a FB68     		ldr	r3, [r7, #12]
 1256 002c 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1257 0030 012B     		cmp	r3, #1
 1258 0032 01D1     		bne	.L55
 1259              		.loc 1 1212 5 is_stmt 0 discriminator 1
 1260 0034 0223     		movs	r3, #2
 1261 0036 22E0     		b	.L54
 1262              	.L55:
 1263              		.loc 1 1212 5 discriminator 2
 1264 0038 FB68     		ldr	r3, [r7, #12]
 1265 003a 0122     		movs	r2, #1
 1266 003c 83F83820 		strb	r2, [r3, #56]
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1267              		.loc 1 1214 23 is_stmt 1 discriminator 2
 1268 0040 FB68     		ldr	r3, [r7, #12]
 1269 0042 BA68     		ldr	r2, [r7, #8]
 1270 0044 1A62     		str	r2, [r3, #32]
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1271              		.loc 1 1215 23 discriminator 2
 1272 0046 FB68     		ldr	r3, [r7, #12]
 1273 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1274 004a 9A84     		strh	r2, [r3, #36]	@ movhi
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1275              		.loc 1 1216 24 discriminator 2
 1276 004c FB68     		ldr	r3, [r7, #12]
 1277 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1278 0050 DA84     		strh	r2, [r3, #38]	@ movhi
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1279              		.loc 1 1218 22 discriminator 2
 1280 0052 FB68     		ldr	r3, [r7, #12]
 1281 0054 0022     		movs	r2, #0
 1282 0056 DA63     		str	r2, [r3, #60]
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1283              		.loc 1 1219 19 discriminator 2
 1284 0058 FB68     		ldr	r3, [r7, #12]
 1285 005a 2122     		movs	r2, #33
 1286 005c 83F83920 		strb	r2, [r3, #57]
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1287              		.loc 1 1222 5 discriminator 2
 1288 0060 FB68     		ldr	r3, [r7, #12]
 1289 0062 0022     		movs	r2, #0
 1290 0064 83F83820 		strb	r2, [r3, #56]
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit data register empty Interrupt */
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 1291              		.loc 1 1225 5 discriminator 2
 1292 0068 FB68     		ldr	r3, [r7, #12]
 1293 006a 1B68     		ldr	r3, [r3]
 1294 006c DA68     		ldr	r2, [r3, #12]
 1295 006e FB68     		ldr	r3, [r7, #12]
 1296 0070 1B68     		ldr	r3, [r3]
 1297 0072 42F08002 		orr	r2, r2, #128
 1298 0076 DA60     		str	r2, [r3, #12]
ARM GAS  /tmp/ccytgAn2.s 			page 45


1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1299              		.loc 1 1227 12 discriminator 2
 1300 0078 0023     		movs	r3, #0
 1301 007a 00E0     		b	.L54
 1302              	.L51:
1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1303              		.loc 1 1231 12
 1304 007c 0223     		movs	r3, #2
 1305              	.L54:
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1306              		.loc 1 1233 1
 1307 007e 1846     		mov	r0, r3
 1308 0080 1437     		adds	r7, r7, #20
 1309              	.LCFI50:
 1310              		.cfi_def_cfa_offset 4
 1311 0082 BD46     		mov	sp, r7
 1312              	.LCFI51:
 1313              		.cfi_def_cfa_register 13
 1314              		@ sp needed
 1315 0084 5DF8047B 		ldr	r7, [sp], #4
 1316              	.LCFI52:
 1317              		.cfi_restore 7
 1318              		.cfi_def_cfa_offset 0
 1319 0088 7047     		bx	lr
 1320              		.cfi_endproc
 1321              	.LFE139:
 1323              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1324              		.align	1
 1325              		.global	HAL_UART_Receive_IT
 1326              		.syntax unified
 1327              		.thumb
 1328              		.thumb_func
 1329              		.fpu fpv4-sp-d16
 1331              	HAL_UART_Receive_IT:
 1332              	.LFB140:
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode.
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1333              		.loc 1 1247 1
 1334              		.cfi_startproc
 1335              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/ccytgAn2.s 			page 46


 1336              		@ frame_needed = 1, uses_anonymous_args = 0
 1337              		@ link register save eliminated.
 1338 0000 80B4     		push	{r7}
 1339              	.LCFI53:
 1340              		.cfi_def_cfa_offset 4
 1341              		.cfi_offset 7, -4
 1342 0002 85B0     		sub	sp, sp, #20
 1343              	.LCFI54:
 1344              		.cfi_def_cfa_offset 24
 1345 0004 00AF     		add	r7, sp, #0
 1346              	.LCFI55:
 1347              		.cfi_def_cfa_register 7
 1348 0006 F860     		str	r0, [r7, #12]
 1349 0008 B960     		str	r1, [r7, #8]
 1350 000a 1346     		mov	r3, r2
 1351 000c FB80     		strh	r3, [r7, #6]	@ movhi
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1352              		.loc 1 1249 12
 1353 000e FB68     		ldr	r3, [r7, #12]
 1354 0010 93F83A30 		ldrb	r3, [r3, #58]
 1355 0014 DBB2     		uxtb	r3, r3
 1356              		.loc 1 1249 6
 1357 0016 202B     		cmp	r3, #32
 1358 0018 40D1     		bne	.L57
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1359              		.loc 1 1251 8
 1360 001a BB68     		ldr	r3, [r7, #8]
 1361 001c 002B     		cmp	r3, #0
 1362 001e 02D0     		beq	.L58
 1363              		.loc 1 1251 25 discriminator 1
 1364 0020 FB88     		ldrh	r3, [r7, #6]
 1365 0022 002B     		cmp	r3, #0
 1366 0024 01D1     		bne	.L59
 1367              	.L58:
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1368              		.loc 1 1253 14
 1369 0026 0123     		movs	r3, #1
 1370 0028 39E0     		b	.L60
 1371              	.L59:
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1372              		.loc 1 1257 5
 1373 002a FB68     		ldr	r3, [r7, #12]
 1374 002c 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1375 0030 012B     		cmp	r3, #1
 1376 0032 01D1     		bne	.L61
 1377              		.loc 1 1257 5 is_stmt 0 discriminator 1
 1378 0034 0223     		movs	r3, #2
 1379 0036 32E0     		b	.L60
 1380              	.L61:
 1381              		.loc 1 1257 5 discriminator 2
 1382 0038 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccytgAn2.s 			page 47


 1383 003a 0122     		movs	r2, #1
 1384 003c 83F83820 		strb	r2, [r3, #56]
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1385              		.loc 1 1259 23 is_stmt 1 discriminator 2
 1386 0040 FB68     		ldr	r3, [r7, #12]
 1387 0042 BA68     		ldr	r2, [r7, #8]
 1388 0044 9A62     		str	r2, [r3, #40]
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1389              		.loc 1 1260 23 discriminator 2
 1390 0046 FB68     		ldr	r3, [r7, #12]
 1391 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1392 004a 9A85     		strh	r2, [r3, #44]	@ movhi
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1393              		.loc 1 1261 24 discriminator 2
 1394 004c FB68     		ldr	r3, [r7, #12]
 1395 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1396 0050 DA85     		strh	r2, [r3, #46]	@ movhi
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1397              		.loc 1 1263 22 discriminator 2
 1398 0052 FB68     		ldr	r3, [r7, #12]
 1399 0054 0022     		movs	r2, #0
 1400 0056 DA63     		str	r2, [r3, #60]
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1401              		.loc 1 1264 20 discriminator 2
 1402 0058 FB68     		ldr	r3, [r7, #12]
 1403 005a 2222     		movs	r2, #34
 1404 005c 83F83A20 		strb	r2, [r3, #58]
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1405              		.loc 1 1267 5 discriminator 2
 1406 0060 FB68     		ldr	r3, [r7, #12]
 1407 0062 0022     		movs	r2, #0
 1408 0064 83F83820 		strb	r2, [r3, #56]
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 1409              		.loc 1 1270 5 discriminator 2
 1410 0068 FB68     		ldr	r3, [r7, #12]
 1411 006a 1B68     		ldr	r3, [r3]
 1412 006c DA68     		ldr	r2, [r3, #12]
 1413 006e FB68     		ldr	r3, [r7, #12]
 1414 0070 1B68     		ldr	r3, [r3]
 1415 0072 42F48072 		orr	r2, r2, #256
 1416 0076 DA60     		str	r2, [r3, #12]
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
 1417              		.loc 1 1273 5 discriminator 2
 1418 0078 FB68     		ldr	r3, [r7, #12]
 1419 007a 1B68     		ldr	r3, [r3]
 1420 007c 5A69     		ldr	r2, [r3, #20]
 1421 007e FB68     		ldr	r3, [r7, #12]
 1422 0080 1B68     		ldr	r3, [r3]
 1423 0082 42F00102 		orr	r2, r2, #1
ARM GAS  /tmp/ccytgAn2.s 			page 48


 1424 0086 5A61     		str	r2, [r3, #20]
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Data Register not empty Interrupt */
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
 1425              		.loc 1 1276 5 discriminator 2
 1426 0088 FB68     		ldr	r3, [r7, #12]
 1427 008a 1B68     		ldr	r3, [r3]
 1428 008c DA68     		ldr	r2, [r3, #12]
 1429 008e FB68     		ldr	r3, [r7, #12]
 1430 0090 1B68     		ldr	r3, [r3]
 1431 0092 42F02002 		orr	r2, r2, #32
 1432 0096 DA60     		str	r2, [r3, #12]
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1433              		.loc 1 1278 12 discriminator 2
 1434 0098 0023     		movs	r3, #0
 1435 009a 00E0     		b	.L60
 1436              	.L57:
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1437              		.loc 1 1282 12
 1438 009c 0223     		movs	r3, #2
 1439              	.L60:
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1440              		.loc 1 1284 1
 1441 009e 1846     		mov	r0, r3
 1442 00a0 1437     		adds	r7, r7, #20
 1443              	.LCFI56:
 1444              		.cfi_def_cfa_offset 4
 1445 00a2 BD46     		mov	sp, r7
 1446              	.LCFI57:
 1447              		.cfi_def_cfa_register 13
 1448              		@ sp needed
 1449 00a4 5DF8047B 		ldr	r7, [sp], #4
 1450              	.LCFI58:
 1451              		.cfi_restore 7
 1452              		.cfi_def_cfa_offset 0
 1453 00a8 7047     		bx	lr
 1454              		.cfi_endproc
 1455              	.LFE140:
 1457              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1458              		.align	1
 1459              		.global	HAL_UART_Transmit_DMA
 1460              		.syntax unified
 1461              		.thumb
 1462              		.thumb_func
 1463              		.fpu fpv4-sp-d16
 1465              	HAL_UART_Transmit_DMA:
 1466              	.LFB141:
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in DMA mode.
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
ARM GAS  /tmp/ccytgAn2.s 			page 49


1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1467              		.loc 1 1298 1
 1468              		.cfi_startproc
 1469              		@ args = 0, pretend = 0, frame = 24
 1470              		@ frame_needed = 1, uses_anonymous_args = 0
 1471 0000 80B5     		push	{r7, lr}
 1472              	.LCFI59:
 1473              		.cfi_def_cfa_offset 8
 1474              		.cfi_offset 7, -8
 1475              		.cfi_offset 14, -4
 1476 0002 86B0     		sub	sp, sp, #24
 1477              	.LCFI60:
 1478              		.cfi_def_cfa_offset 32
 1479 0004 00AF     		add	r7, sp, #0
 1480              	.LCFI61:
 1481              		.cfi_def_cfa_register 7
 1482 0006 F860     		str	r0, [r7, #12]
 1483 0008 B960     		str	r1, [r7, #8]
 1484 000a 1346     		mov	r3, r2
 1485 000c FB80     		strh	r3, [r7, #6]	@ movhi
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1486              		.loc 1 1302 12
 1487 000e FB68     		ldr	r3, [r7, #12]
 1488 0010 93F83930 		ldrb	r3, [r3, #57]
 1489 0014 DBB2     		uxtb	r3, r3
 1490              		.loc 1 1302 6
 1491 0016 202B     		cmp	r3, #32
 1492 0018 53D1     		bne	.L63
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1493              		.loc 1 1304 16
 1494 001a BB68     		ldr	r3, [r7, #8]
 1495              		.loc 1 1304 8
 1496 001c 002B     		cmp	r3, #0
 1497 001e 02D0     		beq	.L64
 1498              		.loc 1 1304 25 discriminator 1
 1499 0020 FB88     		ldrh	r3, [r7, #6]
 1500 0022 002B     		cmp	r3, #0
 1501 0024 01D1     		bne	.L65
 1502              	.L64:
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1503              		.loc 1 1306 14
 1504 0026 0123     		movs	r3, #1
 1505 0028 4CE0     		b	.L66
 1506              	.L65:
ARM GAS  /tmp/ccytgAn2.s 			page 50


1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1507              		.loc 1 1310 5
 1508 002a FB68     		ldr	r3, [r7, #12]
 1509 002c 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1510 0030 012B     		cmp	r3, #1
 1511 0032 01D1     		bne	.L67
 1512              		.loc 1 1310 5 is_stmt 0 discriminator 1
 1513 0034 0223     		movs	r3, #2
 1514 0036 45E0     		b	.L66
 1515              	.L67:
 1516              		.loc 1 1310 5 discriminator 2
 1517 0038 FB68     		ldr	r3, [r7, #12]
 1518 003a 0122     		movs	r2, #1
 1519 003c 83F83820 		strb	r2, [r3, #56]
1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1520              		.loc 1 1312 23 is_stmt 1 discriminator 2
 1521 0040 BA68     		ldr	r2, [r7, #8]
 1522 0042 FB68     		ldr	r3, [r7, #12]
 1523 0044 1A62     		str	r2, [r3, #32]
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1524              		.loc 1 1313 23 discriminator 2
 1525 0046 FB68     		ldr	r3, [r7, #12]
 1526 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1527 004a 9A84     		strh	r2, [r3, #36]	@ movhi
1314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1528              		.loc 1 1314 24 discriminator 2
 1529 004c FB68     		ldr	r3, [r7, #12]
 1530 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1531 0050 DA84     		strh	r2, [r3, #38]	@ movhi
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1532              		.loc 1 1316 22 discriminator 2
 1533 0052 FB68     		ldr	r3, [r7, #12]
 1534 0054 0022     		movs	r2, #0
 1535 0056 DA63     		str	r2, [r3, #60]
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1536              		.loc 1 1317 19 discriminator 2
 1537 0058 FB68     		ldr	r3, [r7, #12]
 1538 005a 2122     		movs	r2, #33
 1539 005c 83F83920 		strb	r2, [r3, #57]
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 1540              		.loc 1 1320 10 discriminator 2
 1541 0060 FB68     		ldr	r3, [r7, #12]
 1542 0062 1B6B     		ldr	r3, [r3, #48]
 1543              		.loc 1 1320 37 discriminator 2
 1544 0064 194A     		ldr	r2, .L68
 1545 0066 DA63     		str	r2, [r3, #60]
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 1546              		.loc 1 1323 10 discriminator 2
ARM GAS  /tmp/ccytgAn2.s 			page 51


 1547 0068 FB68     		ldr	r3, [r7, #12]
 1548 006a 1B6B     		ldr	r3, [r3, #48]
 1549              		.loc 1 1323 41 discriminator 2
 1550 006c 184A     		ldr	r2, .L68+4
 1551 006e 1A64     		str	r2, [r3, #64]
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 1552              		.loc 1 1326 10 discriminator 2
 1553 0070 FB68     		ldr	r3, [r7, #12]
 1554 0072 1B6B     		ldr	r3, [r3, #48]
 1555              		.loc 1 1326 38 discriminator 2
 1556 0074 174A     		ldr	r2, .L68+8
 1557 0076 DA64     		str	r2, [r3, #76]
1327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA abort callback */
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 1558              		.loc 1 1329 10 discriminator 2
 1559 0078 FB68     		ldr	r3, [r7, #12]
 1560 007a 1B6B     		ldr	r3, [r3, #48]
 1561              		.loc 1 1329 38 discriminator 2
 1562 007c 0022     		movs	r2, #0
 1563 007e 1A65     		str	r2, [r3, #80]
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART transmit DMA stream */
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (uint32_t *)&pData;
 1564              		.loc 1 1332 9 discriminator 2
 1565 0080 07F10803 		add	r3, r7, #8
 1566 0084 7B61     		str	r3, [r7, #20]
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t *)tmp, (uint32_t)&huart->Instance->DR, Size);
 1567              		.loc 1 1333 5 discriminator 2
 1568 0086 FB68     		ldr	r3, [r7, #12]
 1569 0088 186B     		ldr	r0, [r3, #48]
 1570 008a 7B69     		ldr	r3, [r7, #20]
 1571 008c 1968     		ldr	r1, [r3]
 1572              		.loc 1 1333 71 discriminator 2
 1573 008e FB68     		ldr	r3, [r7, #12]
 1574 0090 1B68     		ldr	r3, [r3]
 1575              		.loc 1 1333 65 discriminator 2
 1576 0092 0433     		adds	r3, r3, #4
 1577              		.loc 1 1333 5 discriminator 2
 1578 0094 1A46     		mov	r2, r3
 1579 0096 FB88     		ldrh	r3, [r7, #6]
 1580 0098 FFF7FEFF 		bl	HAL_DMA_Start_IT
1334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
 1581              		.loc 1 1336 5 discriminator 2
 1582 009c FB68     		ldr	r3, [r7, #12]
 1583 009e 1B68     		ldr	r3, [r3]
 1584 00a0 6FF04002 		mvn	r2, #64
 1585 00a4 1A60     		str	r2, [r3]
1337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1586              		.loc 1 1339 5 discriminator 2
 1587 00a6 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccytgAn2.s 			page 52


 1588 00a8 0022     		movs	r2, #0
 1589 00aa 83F83820 		strb	r2, [r3, #56]
1340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1590              		.loc 1 1343 5 discriminator 2
 1591 00ae FB68     		ldr	r3, [r7, #12]
 1592 00b0 1B68     		ldr	r3, [r3]
 1593 00b2 5A69     		ldr	r2, [r3, #20]
 1594 00b4 FB68     		ldr	r3, [r7, #12]
 1595 00b6 1B68     		ldr	r3, [r3]
 1596 00b8 42F08002 		orr	r2, r2, #128
 1597 00bc 5A61     		str	r2, [r3, #20]
1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1598              		.loc 1 1345 12 discriminator 2
 1599 00be 0023     		movs	r3, #0
 1600 00c0 00E0     		b	.L66
 1601              	.L63:
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1602              		.loc 1 1349 12
 1603 00c2 0223     		movs	r3, #2
 1604              	.L66:
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1605              		.loc 1 1351 1
 1606 00c4 1846     		mov	r0, r3
 1607 00c6 1837     		adds	r7, r7, #24
 1608              	.LCFI62:
 1609              		.cfi_def_cfa_offset 8
 1610 00c8 BD46     		mov	sp, r7
 1611              	.LCFI63:
 1612              		.cfi_def_cfa_register 13
 1613              		@ sp needed
 1614 00ca 80BD     		pop	{r7, pc}
 1615              	.L69:
 1616              		.align	2
 1617              	.L68:
 1618 00cc 00000000 		.word	UART_DMATransmitCplt
 1619 00d0 00000000 		.word	UART_DMATxHalfCplt
 1620 00d4 00000000 		.word	UART_DMAError
 1621              		.cfi_endproc
 1622              	.LFE141:
 1624              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1625              		.align	1
 1626              		.global	HAL_UART_Receive_DMA
 1627              		.syntax unified
 1628              		.thumb
 1629              		.thumb_func
 1630              		.fpu fpv4-sp-d16
 1632              	HAL_UART_Receive_DMA:
 1633              	.LFB142:
1352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccytgAn2.s 			page 53


1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in DMA mode.
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1) the received data contains the parity bit.
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1634              		.loc 1 1366 1
 1635              		.cfi_startproc
 1636              		@ args = 0, pretend = 0, frame = 24
 1637              		@ frame_needed = 1, uses_anonymous_args = 0
 1638 0000 80B5     		push	{r7, lr}
 1639              	.LCFI64:
 1640              		.cfi_def_cfa_offset 8
 1641              		.cfi_offset 7, -8
 1642              		.cfi_offset 14, -4
 1643 0002 86B0     		sub	sp, sp, #24
 1644              	.LCFI65:
 1645              		.cfi_def_cfa_offset 32
 1646 0004 00AF     		add	r7, sp, #0
 1647              	.LCFI66:
 1648              		.cfi_def_cfa_register 7
 1649 0006 F860     		str	r0, [r7, #12]
 1650 0008 B960     		str	r1, [r7, #8]
 1651 000a 1346     		mov	r3, r2
 1652 000c FB80     		strh	r3, [r7, #6]	@ movhi
1367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1653              		.loc 1 1370 12
 1654 000e FB68     		ldr	r3, [r7, #12]
 1655 0010 93F83A30 		ldrb	r3, [r3, #58]
 1656 0014 DBB2     		uxtb	r3, r3
 1657              		.loc 1 1370 6
 1658 0016 202B     		cmp	r3, #32
 1659 0018 66D1     		bne	.L71
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1660              		.loc 1 1372 16
 1661 001a BB68     		ldr	r3, [r7, #8]
 1662              		.loc 1 1372 8
 1663 001c 002B     		cmp	r3, #0
 1664 001e 02D0     		beq	.L72
 1665              		.loc 1 1372 25 discriminator 1
 1666 0020 FB88     		ldrh	r3, [r7, #6]
 1667 0022 002B     		cmp	r3, #0
 1668 0024 01D1     		bne	.L73
 1669              	.L72:
1373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
ARM GAS  /tmp/ccytgAn2.s 			page 54


1374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1670              		.loc 1 1374 14
 1671 0026 0123     		movs	r3, #1
 1672 0028 5FE0     		b	.L74
 1673              	.L73:
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1674              		.loc 1 1378 5
 1675 002a FB68     		ldr	r3, [r7, #12]
 1676 002c 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1677 0030 012B     		cmp	r3, #1
 1678 0032 01D1     		bne	.L75
 1679              		.loc 1 1378 5 is_stmt 0 discriminator 1
 1680 0034 0223     		movs	r3, #2
 1681 0036 58E0     		b	.L74
 1682              	.L75:
 1683              		.loc 1 1378 5 discriminator 2
 1684 0038 FB68     		ldr	r3, [r7, #12]
 1685 003a 0122     		movs	r2, #1
 1686 003c 83F83820 		strb	r2, [r3, #56]
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1687              		.loc 1 1380 23 is_stmt 1 discriminator 2
 1688 0040 BA68     		ldr	r2, [r7, #8]
 1689 0042 FB68     		ldr	r3, [r7, #12]
 1690 0044 9A62     		str	r2, [r3, #40]
1381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1691              		.loc 1 1381 23 discriminator 2
 1692 0046 FB68     		ldr	r3, [r7, #12]
 1693 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1694 004a 9A85     		strh	r2, [r3, #44]	@ movhi
1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1695              		.loc 1 1383 22 discriminator 2
 1696 004c FB68     		ldr	r3, [r7, #12]
 1697 004e 0022     		movs	r2, #0
 1698 0050 DA63     		str	r2, [r3, #60]
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1699              		.loc 1 1384 20 discriminator 2
 1700 0052 FB68     		ldr	r3, [r7, #12]
 1701 0054 2222     		movs	r2, #34
 1702 0056 83F83A20 		strb	r2, [r3, #58]
1385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 1703              		.loc 1 1387 10 discriminator 2
 1704 005a FB68     		ldr	r3, [r7, #12]
 1705 005c 5B6B     		ldr	r3, [r3, #52]
 1706              		.loc 1 1387 37 discriminator 2
 1707 005e 254A     		ldr	r2, .L76
 1708 0060 DA63     		str	r2, [r3, #60]
1388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 1709              		.loc 1 1390 10 discriminator 2
ARM GAS  /tmp/ccytgAn2.s 			page 55


 1710 0062 FB68     		ldr	r3, [r7, #12]
 1711 0064 5B6B     		ldr	r3, [r3, #52]
 1712              		.loc 1 1390 41 discriminator 2
 1713 0066 244A     		ldr	r2, .L76+4
 1714 0068 1A64     		str	r2, [r3, #64]
1391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
1393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
 1715              		.loc 1 1393 10 discriminator 2
 1716 006a FB68     		ldr	r3, [r7, #12]
 1717 006c 5B6B     		ldr	r3, [r3, #52]
 1718              		.loc 1 1393 38 discriminator 2
 1719 006e 234A     		ldr	r2, .L76+8
 1720 0070 DA64     		str	r2, [r3, #76]
1394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA abort callback */
1396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
 1721              		.loc 1 1396 10 discriminator 2
 1722 0072 FB68     		ldr	r3, [r7, #12]
 1723 0074 5B6B     		ldr	r3, [r3, #52]
 1724              		.loc 1 1396 38 discriminator 2
 1725 0076 0022     		movs	r2, #0
 1726 0078 1A65     		str	r2, [r3, #80]
1397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA stream */
1399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (uint32_t *)&pData;
 1727              		.loc 1 1399 9 discriminator 2
 1728 007a 07F10803 		add	r3, r7, #8
 1729 007e 7B61     		str	r3, [r7, #20]
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t *)tmp, Size);
 1730              		.loc 1 1400 5 discriminator 2
 1731 0080 FB68     		ldr	r3, [r7, #12]
 1732 0082 586B     		ldr	r0, [r3, #52]
 1733              		.loc 1 1400 53 discriminator 2
 1734 0084 FB68     		ldr	r3, [r7, #12]
 1735 0086 1B68     		ldr	r3, [r3]
 1736              		.loc 1 1400 47 discriminator 2
 1737 0088 0433     		adds	r3, r3, #4
 1738              		.loc 1 1400 5 discriminator 2
 1739 008a 1946     		mov	r1, r3
 1740 008c 7B69     		ldr	r3, [r7, #20]
 1741 008e 1A68     		ldr	r2, [r3]
 1742 0090 FB88     		ldrh	r3, [r7, #6]
 1743 0092 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1744              	.LBB2:
1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the sec
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
 1745              		.loc 1 1403 5 discriminator 2
 1746 0096 0023     		movs	r3, #0
 1747 0098 3B61     		str	r3, [r7, #16]
 1748 009a FB68     		ldr	r3, [r7, #12]
 1749 009c 1B68     		ldr	r3, [r3]
 1750 009e 1B68     		ldr	r3, [r3]
 1751 00a0 3B61     		str	r3, [r7, #16]
 1752 00a2 FB68     		ldr	r3, [r7, #12]
 1753 00a4 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccytgAn2.s 			page 56


 1754 00a6 5B68     		ldr	r3, [r3, #4]
 1755 00a8 3B61     		str	r3, [r7, #16]
 1756 00aa 3B69     		ldr	r3, [r7, #16]
 1757              	.LBE2:
1404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1758              		.loc 1 1406 5 discriminator 2
 1759 00ac FB68     		ldr	r3, [r7, #12]
 1760 00ae 0022     		movs	r2, #0
 1761 00b0 83F83820 		strb	r2, [r3, #56]
1407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1762              		.loc 1 1409 5 discriminator 2
 1763 00b4 FB68     		ldr	r3, [r7, #12]
 1764 00b6 1B68     		ldr	r3, [r3]
 1765 00b8 DA68     		ldr	r2, [r3, #12]
 1766 00ba FB68     		ldr	r3, [r7, #12]
 1767 00bc 1B68     		ldr	r3, [r3]
 1768 00be 42F48072 		orr	r2, r2, #256
 1769 00c2 DA60     		str	r2, [r3, #12]
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1770              		.loc 1 1412 5 discriminator 2
 1771 00c4 FB68     		ldr	r3, [r7, #12]
 1772 00c6 1B68     		ldr	r3, [r3]
 1773 00c8 5A69     		ldr	r2, [r3, #20]
 1774 00ca FB68     		ldr	r3, [r7, #12]
 1775 00cc 1B68     		ldr	r3, [r3]
 1776 00ce 42F00102 		orr	r2, r2, #1
 1777 00d2 5A61     		str	r2, [r3, #20]
1413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in the UART CR3 register */
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1778              		.loc 1 1416 5 discriminator 2
 1779 00d4 FB68     		ldr	r3, [r7, #12]
 1780 00d6 1B68     		ldr	r3, [r3]
 1781 00d8 5A69     		ldr	r2, [r3, #20]
 1782 00da FB68     		ldr	r3, [r7, #12]
 1783 00dc 1B68     		ldr	r3, [r3]
 1784 00de 42F04002 		orr	r2, r2, #64
 1785 00e2 5A61     		str	r2, [r3, #20]
1417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1786              		.loc 1 1418 12 discriminator 2
 1787 00e4 0023     		movs	r3, #0
 1788 00e6 00E0     		b	.L74
 1789              	.L71:
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1790              		.loc 1 1422 12
 1791 00e8 0223     		movs	r3, #2
ARM GAS  /tmp/ccytgAn2.s 			page 57


 1792              	.L74:
1423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1793              		.loc 1 1424 1
 1794 00ea 1846     		mov	r0, r3
 1795 00ec 1837     		adds	r7, r7, #24
 1796              	.LCFI67:
 1797              		.cfi_def_cfa_offset 8
 1798 00ee BD46     		mov	sp, r7
 1799              	.LCFI68:
 1800              		.cfi_def_cfa_register 13
 1801              		@ sp needed
 1802 00f0 80BD     		pop	{r7, pc}
 1803              	.L77:
 1804 00f2 00BF     		.align	2
 1805              	.L76:
 1806 00f4 00000000 		.word	UART_DMAReceiveCplt
 1807 00f8 00000000 		.word	UART_DMARxHalfCplt
 1808 00fc 00000000 		.word	UART_DMAError
 1809              		.cfi_endproc
 1810              	.LFE142:
 1812              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1813              		.align	1
 1814              		.global	HAL_UART_DMAPause
 1815              		.syntax unified
 1816              		.thumb
 1817              		.thumb_func
 1818              		.fpu fpv4-sp-d16
 1820              	HAL_UART_DMAPause:
 1821              	.LFB143:
1425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
1428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1822              		.loc 1 1433 1
 1823              		.cfi_startproc
 1824              		@ args = 0, pretend = 0, frame = 16
 1825              		@ frame_needed = 1, uses_anonymous_args = 0
 1826              		@ link register save eliminated.
 1827 0000 80B4     		push	{r7}
 1828              	.LCFI69:
 1829              		.cfi_def_cfa_offset 4
 1830              		.cfi_offset 7, -4
 1831 0002 85B0     		sub	sp, sp, #20
 1832              	.LCFI70:
 1833              		.cfi_def_cfa_offset 24
 1834 0004 00AF     		add	r7, sp, #0
 1835              	.LCFI71:
 1836              		.cfi_def_cfa_register 7
 1837 0006 7860     		str	r0, [r7, #4]
1434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 1838              		.loc 1 1434 12
ARM GAS  /tmp/ccytgAn2.s 			page 58


 1839 0008 0023     		movs	r3, #0
 1840 000a FB60     		str	r3, [r7, #12]
1435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 1841              		.loc 1 1437 3
 1842 000c 7B68     		ldr	r3, [r7, #4]
 1843 000e 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1844 0012 012B     		cmp	r3, #1
 1845 0014 01D1     		bne	.L79
 1846              		.loc 1 1437 3 is_stmt 0 discriminator 1
 1847 0016 0223     		movs	r3, #2
 1848 0018 50E0     		b	.L80
 1849              	.L79:
 1850              		.loc 1 1437 3 discriminator 2
 1851 001a 7B68     		ldr	r3, [r7, #4]
 1852 001c 0122     		movs	r2, #1
 1853 001e 83F83820 		strb	r2, [r3, #56]
1438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 1854              		.loc 1 1439 16 is_stmt 1 discriminator 2
 1855 0022 7B68     		ldr	r3, [r7, #4]
 1856 0024 1B68     		ldr	r3, [r3]
 1857 0026 5B69     		ldr	r3, [r3, #20]
 1858 0028 03F08003 		and	r3, r3, #128
 1859 002c 802B     		cmp	r3, #128
 1860 002e 0CBF     		ite	eq
 1861 0030 0123     		moveq	r3, #1
 1862 0032 0023     		movne	r3, #0
 1863 0034 DBB2     		uxtb	r3, r3
 1864              		.loc 1 1439 14 discriminator 2
 1865 0036 FB60     		str	r3, [r7, #12]
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1866              		.loc 1 1440 13 discriminator 2
 1867 0038 7B68     		ldr	r3, [r7, #4]
 1868 003a 93F83930 		ldrb	r3, [r3, #57]
 1869 003e DBB2     		uxtb	r3, r3
 1870              		.loc 1 1440 6 discriminator 2
 1871 0040 212B     		cmp	r3, #33
 1872 0042 0AD1     		bne	.L81
 1873              		.loc 1 1440 49 discriminator 1
 1874 0044 FB68     		ldr	r3, [r7, #12]
 1875 0046 002B     		cmp	r3, #0
 1876 0048 07D0     		beq	.L81
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1877              		.loc 1 1443 5
 1878 004a 7B68     		ldr	r3, [r7, #4]
 1879 004c 1B68     		ldr	r3, [r3]
 1880 004e 5A69     		ldr	r2, [r3, #20]
 1881 0050 7B68     		ldr	r3, [r7, #4]
 1882 0052 1B68     		ldr	r3, [r3]
 1883 0054 22F08002 		bic	r2, r2, #128
 1884 0058 5A61     		str	r2, [r3, #20]
 1885              	.L81:
1444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  /tmp/ccytgAn2.s 			page 59


1445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 1886              		.loc 1 1446 16
 1887 005a 7B68     		ldr	r3, [r7, #4]
 1888 005c 1B68     		ldr	r3, [r3]
 1889 005e 5B69     		ldr	r3, [r3, #20]
 1890 0060 03F04003 		and	r3, r3, #64
 1891 0064 402B     		cmp	r3, #64
 1892 0066 0CBF     		ite	eq
 1893 0068 0123     		moveq	r3, #1
 1894 006a 0023     		movne	r3, #0
 1895 006c DBB2     		uxtb	r3, r3
 1896              		.loc 1 1446 14
 1897 006e FB60     		str	r3, [r7, #12]
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 1898              		.loc 1 1447 13
 1899 0070 7B68     		ldr	r3, [r7, #4]
 1900 0072 93F83A30 		ldrb	r3, [r3, #58]
 1901 0076 DBB2     		uxtb	r3, r3
 1902              		.loc 1 1447 6
 1903 0078 222B     		cmp	r3, #34
 1904 007a 1AD1     		bne	.L82
 1905              		.loc 1 1447 50 discriminator 1
 1906 007c FB68     		ldr	r3, [r7, #12]
 1907 007e 002B     		cmp	r3, #0
 1908 0080 17D0     		beq	.L82
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1909              		.loc 1 1450 5
 1910 0082 7B68     		ldr	r3, [r7, #4]
 1911 0084 1B68     		ldr	r3, [r3]
 1912 0086 DA68     		ldr	r2, [r3, #12]
 1913 0088 7B68     		ldr	r3, [r7, #4]
 1914 008a 1B68     		ldr	r3, [r3]
 1915 008c 22F48072 		bic	r2, r2, #256
 1916 0090 DA60     		str	r2, [r3, #12]
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1917              		.loc 1 1451 5
 1918 0092 7B68     		ldr	r3, [r7, #4]
 1919 0094 1B68     		ldr	r3, [r3]
 1920 0096 5A69     		ldr	r2, [r3, #20]
 1921 0098 7B68     		ldr	r3, [r7, #4]
 1922 009a 1B68     		ldr	r3, [r3]
 1923 009c 22F00102 		bic	r2, r2, #1
 1924 00a0 5A61     		str	r2, [r3, #20]
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1925              		.loc 1 1454 5
 1926 00a2 7B68     		ldr	r3, [r7, #4]
 1927 00a4 1B68     		ldr	r3, [r3]
 1928 00a6 5A69     		ldr	r2, [r3, #20]
 1929 00a8 7B68     		ldr	r3, [r7, #4]
 1930 00aa 1B68     		ldr	r3, [r3]
 1931 00ac 22F04002 		bic	r2, r2, #64
 1932 00b0 5A61     		str	r2, [r3, #20]
ARM GAS  /tmp/ccytgAn2.s 			page 60


 1933              	.L82:
1455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 1934              		.loc 1 1458 3
 1935 00b2 7B68     		ldr	r3, [r7, #4]
 1936 00b4 0022     		movs	r2, #0
 1937 00b6 83F83820 		strb	r2, [r3, #56]
1459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 1938              		.loc 1 1460 10
 1939 00ba 0023     		movs	r3, #0
 1940              	.L80:
1461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1941              		.loc 1 1461 1
 1942 00bc 1846     		mov	r0, r3
 1943 00be 1437     		adds	r7, r7, #20
 1944              	.LCFI72:
 1945              		.cfi_def_cfa_offset 4
 1946 00c0 BD46     		mov	sp, r7
 1947              	.LCFI73:
 1948              		.cfi_def_cfa_register 13
 1949              		@ sp needed
 1950 00c2 5DF8047B 		ldr	r7, [sp], #4
 1951              	.LCFI74:
 1952              		.cfi_restore 7
 1953              		.cfi_def_cfa_offset 0
 1954 00c6 7047     		bx	lr
 1955              		.cfi_endproc
 1956              	.LFE143:
 1958              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1959              		.align	1
 1960              		.global	HAL_UART_DMAResume
 1961              		.syntax unified
 1962              		.thumb
 1963              		.thumb_func
 1964              		.fpu fpv4-sp-d16
 1966              	HAL_UART_DMAResume:
 1967              	.LFB144:
1462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1968              		.loc 1 1470 1
 1969              		.cfi_startproc
 1970              		@ args = 0, pretend = 0, frame = 16
 1971              		@ frame_needed = 1, uses_anonymous_args = 0
 1972              		@ link register save eliminated.
 1973 0000 80B4     		push	{r7}
 1974              	.LCFI75:
 1975              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccytgAn2.s 			page 61


 1976              		.cfi_offset 7, -4
 1977 0002 85B0     		sub	sp, sp, #20
 1978              	.LCFI76:
 1979              		.cfi_def_cfa_offset 24
 1980 0004 00AF     		add	r7, sp, #0
 1981              	.LCFI77:
 1982              		.cfi_def_cfa_register 7
 1983 0006 7860     		str	r0, [r7, #4]
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 1984              		.loc 1 1472 3
 1985 0008 7B68     		ldr	r3, [r7, #4]
 1986 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1987 000e 012B     		cmp	r3, #1
 1988 0010 01D1     		bne	.L84
 1989              		.loc 1 1472 3 is_stmt 0 discriminator 1
 1990 0012 0223     		movs	r3, #2
 1991 0014 3FE0     		b	.L85
 1992              	.L84:
 1993              		.loc 1 1472 3 discriminator 2
 1994 0016 7B68     		ldr	r3, [r7, #4]
 1995 0018 0122     		movs	r2, #1
 1996 001a 83F83820 		strb	r2, [r3, #56]
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 1997              		.loc 1 1474 12 is_stmt 1 discriminator 2
 1998 001e 7B68     		ldr	r3, [r7, #4]
 1999 0020 93F83930 		ldrb	r3, [r3, #57]
 2000 0024 DBB2     		uxtb	r3, r3
 2001              		.loc 1 1474 6 discriminator 2
 2002 0026 212B     		cmp	r3, #33
 2003 0028 07D1     		bne	.L86
1475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2004              		.loc 1 1477 5
 2005 002a 7B68     		ldr	r3, [r7, #4]
 2006 002c 1B68     		ldr	r3, [r3]
 2007 002e 5A69     		ldr	r2, [r3, #20]
 2008 0030 7B68     		ldr	r3, [r7, #4]
 2009 0032 1B68     		ldr	r3, [r3]
 2010 0034 42F08002 		orr	r2, r2, #128
 2011 0038 5A61     		str	r2, [r3, #20]
 2012              	.L86:
1478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2013              		.loc 1 1480 12
 2014 003a 7B68     		ldr	r3, [r7, #4]
 2015 003c 93F83A30 		ldrb	r3, [r3, #58]
 2016 0040 DBB2     		uxtb	r3, r3
 2017              		.loc 1 1480 6
 2018 0042 222B     		cmp	r3, #34
 2019 0044 22D1     		bne	.L87
 2020              	.LBB3:
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
ARM GAS  /tmp/ccytgAn2.s 			page 62


1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
 2021              		.loc 1 1483 5
 2022 0046 0023     		movs	r3, #0
 2023 0048 FB60     		str	r3, [r7, #12]
 2024 004a 7B68     		ldr	r3, [r7, #4]
 2025 004c 1B68     		ldr	r3, [r3]
 2026 004e 1B68     		ldr	r3, [r3]
 2027 0050 FB60     		str	r3, [r7, #12]
 2028 0052 7B68     		ldr	r3, [r7, #4]
 2029 0054 1B68     		ldr	r3, [r3]
 2030 0056 5B68     		ldr	r3, [r3, #4]
 2031 0058 FB60     		str	r3, [r7, #12]
 2032 005a FB68     		ldr	r3, [r7, #12]
 2033              	.LBE3:
1484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2034              		.loc 1 1486 5
 2035 005c 7B68     		ldr	r3, [r7, #4]
 2036 005e 1B68     		ldr	r3, [r3]
 2037 0060 DA68     		ldr	r2, [r3, #12]
 2038 0062 7B68     		ldr	r3, [r7, #4]
 2039 0064 1B68     		ldr	r3, [r3]
 2040 0066 42F48072 		orr	r2, r2, #256
 2041 006a DA60     		str	r2, [r3, #12]
1487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2042              		.loc 1 1487 5
 2043 006c 7B68     		ldr	r3, [r7, #4]
 2044 006e 1B68     		ldr	r3, [r3]
 2045 0070 5A69     		ldr	r2, [r3, #20]
 2046 0072 7B68     		ldr	r3, [r7, #4]
 2047 0074 1B68     		ldr	r3, [r3]
 2048 0076 42F00102 		orr	r2, r2, #1
 2049 007a 5A61     		str	r2, [r3, #20]
1488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2050              		.loc 1 1490 5
 2051 007c 7B68     		ldr	r3, [r7, #4]
 2052 007e 1B68     		ldr	r3, [r3]
 2053 0080 5A69     		ldr	r2, [r3, #20]
 2054 0082 7B68     		ldr	r3, [r7, #4]
 2055 0084 1B68     		ldr	r3, [r3]
 2056 0086 42F04002 		orr	r2, r2, #64
 2057 008a 5A61     		str	r2, [r3, #20]
 2058              	.L87:
1491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2059              		.loc 1 1494 3
 2060 008c 7B68     		ldr	r3, [r7, #4]
 2061 008e 0022     		movs	r2, #0
 2062 0090 83F83820 		strb	r2, [r3, #56]
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2063              		.loc 1 1496 10
ARM GAS  /tmp/ccytgAn2.s 			page 63


 2064 0094 0023     		movs	r3, #0
 2065              	.L85:
1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2066              		.loc 1 1497 1
 2067 0096 1846     		mov	r0, r3
 2068 0098 1437     		adds	r7, r7, #20
 2069              	.LCFI78:
 2070              		.cfi_def_cfa_offset 4
 2071 009a BD46     		mov	sp, r7
 2072              	.LCFI79:
 2073              		.cfi_def_cfa_register 13
 2074              		@ sp needed
 2075 009c 5DF8047B 		ldr	r7, [sp], #4
 2076              	.LCFI80:
 2077              		.cfi_restore 7
 2078              		.cfi_def_cfa_offset 0
 2079 00a0 7047     		bx	lr
 2080              		.cfi_endproc
 2081              	.LFE144:
 2083              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2084              		.align	1
 2085              		.global	HAL_UART_DMAStop
 2086              		.syntax unified
 2087              		.thumb
 2088              		.thumb_func
 2089              		.fpu fpv4-sp-d16
 2091              	HAL_UART_DMAStop:
 2092              	.LFB145:
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2093              		.loc 1 1506 1
 2094              		.cfi_startproc
 2095              		@ args = 0, pretend = 0, frame = 16
 2096              		@ frame_needed = 1, uses_anonymous_args = 0
 2097 0000 80B5     		push	{r7, lr}
 2098              	.LCFI81:
 2099              		.cfi_def_cfa_offset 8
 2100              		.cfi_offset 7, -8
 2101              		.cfi_offset 14, -4
 2102 0002 84B0     		sub	sp, sp, #16
 2103              	.LCFI82:
 2104              		.cfi_def_cfa_offset 24
 2105 0004 00AF     		add	r7, sp, #0
 2106              	.LCFI83:
 2107              		.cfi_def_cfa_register 7
 2108 0006 7860     		str	r0, [r7, #4]
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2109              		.loc 1 1507 12
 2110 0008 0023     		movs	r3, #0
 2111 000a FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccytgAn2.s 			page 64


1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      and the correspond call back is executed HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      */
1513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 2112              		.loc 1 1515 16
 2113 000c 7B68     		ldr	r3, [r7, #4]
 2114 000e 1B68     		ldr	r3, [r3]
 2115 0010 5B69     		ldr	r3, [r3, #20]
 2116 0012 03F08003 		and	r3, r3, #128
 2117 0016 802B     		cmp	r3, #128
 2118 0018 0CBF     		ite	eq
 2119 001a 0123     		moveq	r3, #1
 2120 001c 0023     		movne	r3, #0
 2121 001e DBB2     		uxtb	r3, r3
 2122              		.loc 1 1515 14
 2123 0020 FB60     		str	r3, [r7, #12]
1516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2124              		.loc 1 1516 13
 2125 0022 7B68     		ldr	r3, [r7, #4]
 2126 0024 93F83930 		ldrb	r3, [r3, #57]
 2127 0028 DBB2     		uxtb	r3, r3
 2128              		.loc 1 1516 6
 2129 002a 212B     		cmp	r3, #33
 2130 002c 16D1     		bne	.L89
 2131              		.loc 1 1516 49 discriminator 1
 2132 002e FB68     		ldr	r3, [r7, #12]
 2133 0030 002B     		cmp	r3, #0
 2134 0032 13D0     		beq	.L89
1517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2135              		.loc 1 1518 5
 2136 0034 7B68     		ldr	r3, [r7, #4]
 2137 0036 1B68     		ldr	r3, [r3]
 2138 0038 5A69     		ldr	r2, [r3, #20]
 2139 003a 7B68     		ldr	r3, [r7, #4]
 2140 003c 1B68     		ldr	r3, [r3]
 2141 003e 22F08002 		bic	r2, r2, #128
 2142 0042 5A61     		str	r2, [r3, #20]
1519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream */
1521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2143              		.loc 1 1521 14
 2144 0044 7B68     		ldr	r3, [r7, #4]
 2145 0046 1B6B     		ldr	r3, [r3, #48]
 2146              		.loc 1 1521 8
 2147 0048 002B     		cmp	r3, #0
 2148 004a 04D0     		beq	.L90
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
 2149              		.loc 1 1523 7
 2150 004c 7B68     		ldr	r3, [r7, #4]
 2151 004e 1B6B     		ldr	r3, [r3, #48]
 2152 0050 1846     		mov	r0, r3
ARM GAS  /tmp/ccytgAn2.s 			page 65


 2153 0052 FFF7FEFF 		bl	HAL_DMA_Abort
 2154              	.L90:
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2155              		.loc 1 1525 5
 2156 0056 7868     		ldr	r0, [r7, #4]
 2157 0058 FFF7FEFF 		bl	UART_EndTxTransfer
 2158              	.L89:
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 2159              		.loc 1 1529 16
 2160 005c 7B68     		ldr	r3, [r7, #4]
 2161 005e 1B68     		ldr	r3, [r3]
 2162 0060 5B69     		ldr	r3, [r3, #20]
 2163 0062 03F04003 		and	r3, r3, #64
 2164 0066 402B     		cmp	r3, #64
 2165 0068 0CBF     		ite	eq
 2166 006a 0123     		moveq	r3, #1
 2167 006c 0023     		movne	r3, #0
 2168 006e DBB2     		uxtb	r3, r3
 2169              		.loc 1 1529 14
 2170 0070 FB60     		str	r3, [r7, #12]
1530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2171              		.loc 1 1530 13
 2172 0072 7B68     		ldr	r3, [r7, #4]
 2173 0074 93F83A30 		ldrb	r3, [r3, #58]
 2174 0078 DBB2     		uxtb	r3, r3
 2175              		.loc 1 1530 6
 2176 007a 222B     		cmp	r3, #34
 2177 007c 16D1     		bne	.L91
 2178              		.loc 1 1530 50 discriminator 1
 2179 007e FB68     		ldr	r3, [r7, #12]
 2180 0080 002B     		cmp	r3, #0
 2181 0082 13D0     		beq	.L91
1531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2182              		.loc 1 1532 5
 2183 0084 7B68     		ldr	r3, [r7, #4]
 2184 0086 1B68     		ldr	r3, [r3]
 2185 0088 5A69     		ldr	r2, [r3, #20]
 2186 008a 7B68     		ldr	r3, [r7, #4]
 2187 008c 1B68     		ldr	r3, [r3]
 2188 008e 22F04002 		bic	r2, r2, #64
 2189 0092 5A61     		str	r2, [r3, #20]
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream */
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2190              		.loc 1 1535 14
 2191 0094 7B68     		ldr	r3, [r7, #4]
 2192 0096 5B6B     		ldr	r3, [r3, #52]
 2193              		.loc 1 1535 8
 2194 0098 002B     		cmp	r3, #0
 2195 009a 04D0     		beq	.L92
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
ARM GAS  /tmp/ccytgAn2.s 			page 66


 2196              		.loc 1 1537 7
 2197 009c 7B68     		ldr	r3, [r7, #4]
 2198 009e 5B6B     		ldr	r3, [r3, #52]
 2199 00a0 1846     		mov	r0, r3
 2200 00a2 FFF7FEFF 		bl	HAL_DMA_Abort
 2201              	.L92:
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2202              		.loc 1 1539 5
 2203 00a6 7868     		ldr	r0, [r7, #4]
 2204 00a8 FFF7FEFF 		bl	UART_EndRxTransfer
 2205              	.L91:
1540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2206              		.loc 1 1542 10
 2207 00ac 0023     		movs	r3, #0
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2208              		.loc 1 1543 1
 2209 00ae 1846     		mov	r0, r3
 2210 00b0 1037     		adds	r7, r7, #16
 2211              	.LCFI84:
 2212              		.cfi_def_cfa_offset 8
 2213 00b2 BD46     		mov	sp, r7
 2214              	.LCFI85:
 2215              		.cfi_def_cfa_register 13
 2216              		@ sp needed
 2217 00b4 80BD     		pop	{r7, pc}
 2218              		.cfi_endproc
 2219              	.LFE145:
 2221              		.section	.text.HAL_UART_Abort,"ax",%progbits
 2222              		.align	1
 2223              		.global	HAL_UART_Abort
 2224              		.syntax unified
 2225              		.thumb
 2226              		.thumb_func
 2227              		.fpu fpv4-sp-d16
 2229              	HAL_UART_Abort:
 2230              	.LFB146:
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2231              		.loc 1 1558 1
 2232              		.cfi_startproc
 2233              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccytgAn2.s 			page 67


 2234              		@ frame_needed = 1, uses_anonymous_args = 0
 2235 0000 80B5     		push	{r7, lr}
 2236              	.LCFI86:
 2237              		.cfi_def_cfa_offset 8
 2238              		.cfi_offset 7, -8
 2239              		.cfi_offset 14, -4
 2240 0002 82B0     		sub	sp, sp, #8
 2241              	.LCFI87:
 2242              		.cfi_def_cfa_offset 16
 2243 0004 00AF     		add	r7, sp, #0
 2244              	.LCFI88:
 2245              		.cfi_def_cfa_register 7
 2246 0006 7860     		str	r0, [r7, #4]
1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
 2247              		.loc 1 1560 3
 2248 0008 7B68     		ldr	r3, [r7, #4]
 2249 000a 1B68     		ldr	r3, [r3]
 2250 000c DA68     		ldr	r2, [r3, #12]
 2251 000e 7B68     		ldr	r3, [r7, #4]
 2252 0010 1B68     		ldr	r3, [r3]
 2253 0012 22F4F072 		bic	r2, r2, #480
 2254 0016 DA60     		str	r2, [r3, #12]
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2255              		.loc 1 1561 3
 2256 0018 7B68     		ldr	r3, [r7, #4]
 2257 001a 1B68     		ldr	r3, [r3]
 2258 001c 5A69     		ldr	r2, [r3, #20]
 2259 001e 7B68     		ldr	r3, [r7, #4]
 2260 0020 1B68     		ldr	r3, [r3]
 2261 0022 22F00102 		bic	r2, r2, #1
 2262 0026 5A61     		str	r2, [r3, #20]
1562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2263              		.loc 1 1564 7
 2264 0028 7B68     		ldr	r3, [r7, #4]
 2265 002a 1B68     		ldr	r3, [r3]
 2266 002c 5B69     		ldr	r3, [r3, #20]
 2267 002e 03F08003 		and	r3, r3, #128
 2268              		.loc 1 1564 6
 2269 0032 802B     		cmp	r3, #128
 2270 0034 24D1     		bne	.L95
1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2271              		.loc 1 1566 5
 2272 0036 7B68     		ldr	r3, [r7, #4]
 2273 0038 1B68     		ldr	r3, [r3]
 2274 003a 5A69     		ldr	r2, [r3, #20]
 2275 003c 7B68     		ldr	r3, [r7, #4]
 2276 003e 1B68     		ldr	r3, [r3]
 2277 0040 22F08002 		bic	r2, r2, #128
 2278 0044 5A61     		str	r2, [r3, #20]
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream: use blocking DMA Abort API (no callback) */
1569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2279              		.loc 1 1569 14
ARM GAS  /tmp/ccytgAn2.s 			page 68


 2280 0046 7B68     		ldr	r3, [r7, #4]
 2281 0048 1B6B     		ldr	r3, [r3, #48]
 2282              		.loc 1 1569 8
 2283 004a 002B     		cmp	r3, #0
 2284 004c 18D0     		beq	.L95
1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2285              		.loc 1 1573 12
 2286 004e 7B68     		ldr	r3, [r7, #4]
 2287 0050 1B6B     		ldr	r3, [r3, #48]
 2288              		.loc 1 1573 40
 2289 0052 0022     		movs	r2, #0
 2290 0054 1A65     		str	r2, [r3, #80]
1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2291              		.loc 1 1575 11
 2292 0056 7B68     		ldr	r3, [r7, #4]
 2293 0058 1B6B     		ldr	r3, [r3, #48]
 2294 005a 1846     		mov	r0, r3
 2295 005c FFF7FEFF 		bl	HAL_DMA_Abort
 2296 0060 0346     		mov	r3, r0
 2297              		.loc 1 1575 10
 2298 0062 002B     		cmp	r3, #0
 2299 0064 0CD0     		beq	.L95
1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2300              		.loc 1 1577 13
 2301 0066 7B68     		ldr	r3, [r7, #4]
 2302 0068 1B6B     		ldr	r3, [r3, #48]
 2303 006a 1846     		mov	r0, r3
 2304 006c FFF7FEFF 		bl	HAL_DMA_GetError
 2305 0070 0346     		mov	r3, r0
 2306              		.loc 1 1577 12
 2307 0072 202B     		cmp	r3, #32
 2308 0074 04D1     		bne	.L95
1578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2309              		.loc 1 1580 28
 2310 0076 7B68     		ldr	r3, [r7, #4]
 2311 0078 1022     		movs	r2, #16
 2312 007a DA63     		str	r2, [r3, #60]
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2313              		.loc 1 1582 18
 2314 007c 0323     		movs	r3, #3
 2315 007e 3DE0     		b	.L96
 2316              	.L95:
1583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
ARM GAS  /tmp/ccytgAn2.s 			page 69


 2317              		.loc 1 1589 7
 2318 0080 7B68     		ldr	r3, [r7, #4]
 2319 0082 1B68     		ldr	r3, [r3]
 2320 0084 5B69     		ldr	r3, [r3, #20]
 2321 0086 03F04003 		and	r3, r3, #64
 2322              		.loc 1 1589 6
 2323 008a 402B     		cmp	r3, #64
 2324 008c 24D1     		bne	.L97
1590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2325              		.loc 1 1591 5
 2326 008e 7B68     		ldr	r3, [r7, #4]
 2327 0090 1B68     		ldr	r3, [r3]
 2328 0092 5A69     		ldr	r2, [r3, #20]
 2329 0094 7B68     		ldr	r3, [r7, #4]
 2330 0096 1B68     		ldr	r3, [r3]
 2331 0098 22F04002 		bic	r2, r2, #64
 2332 009c 5A61     		str	r2, [r3, #20]
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream: use blocking DMA Abort API (no callback) */
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2333              		.loc 1 1594 14
 2334 009e 7B68     		ldr	r3, [r7, #4]
 2335 00a0 5B6B     		ldr	r3, [r3, #52]
 2336              		.loc 1 1594 8
 2337 00a2 002B     		cmp	r3, #0
 2338 00a4 18D0     		beq	.L97
1595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2339              		.loc 1 1598 12
 2340 00a6 7B68     		ldr	r3, [r7, #4]
 2341 00a8 5B6B     		ldr	r3, [r3, #52]
 2342              		.loc 1 1598 40
 2343 00aa 0022     		movs	r2, #0
 2344 00ac 1A65     		str	r2, [r3, #80]
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 2345              		.loc 1 1600 11
 2346 00ae 7B68     		ldr	r3, [r7, #4]
 2347 00b0 5B6B     		ldr	r3, [r3, #52]
 2348 00b2 1846     		mov	r0, r3
 2349 00b4 FFF7FEFF 		bl	HAL_DMA_Abort
 2350 00b8 0346     		mov	r3, r0
 2351              		.loc 1 1600 10
 2352 00ba 002B     		cmp	r3, #0
 2353 00bc 0CD0     		beq	.L97
1601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 2354              		.loc 1 1602 13
 2355 00be 7B68     		ldr	r3, [r7, #4]
 2356 00c0 5B6B     		ldr	r3, [r3, #52]
 2357 00c2 1846     		mov	r0, r3
 2358 00c4 FFF7FEFF 		bl	HAL_DMA_GetError
 2359 00c8 0346     		mov	r3, r0
 2360              		.loc 1 1602 12
ARM GAS  /tmp/ccytgAn2.s 			page 70


 2361 00ca 202B     		cmp	r3, #32
 2362 00cc 04D1     		bne	.L97
1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2363              		.loc 1 1605 28
 2364 00ce 7B68     		ldr	r3, [r7, #4]
 2365 00d0 1022     		movs	r2, #16
 2366 00d2 DA63     		str	r2, [r3, #60]
1606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2367              		.loc 1 1607 18
 2368 00d4 0323     		movs	r3, #3
 2369 00d6 11E0     		b	.L96
 2370              	.L97:
1608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 2371              		.loc 1 1614 22
 2372 00d8 7B68     		ldr	r3, [r7, #4]
 2373 00da 0022     		movs	r2, #0
 2374 00dc DA84     		strh	r2, [r3, #38]	@ movhi
1615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 2375              		.loc 1 1615 22
 2376 00de 7B68     		ldr	r3, [r7, #4]
 2377 00e0 0022     		movs	r2, #0
 2378 00e2 DA85     		strh	r2, [r3, #46]	@ movhi
1616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
1618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 2379              		.loc 1 1618 20
 2380 00e4 7B68     		ldr	r3, [r7, #4]
 2381 00e6 0022     		movs	r2, #0
 2382 00e8 DA63     		str	r2, [r3, #60]
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState and huart->gState to Ready */
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2383              		.loc 1 1621 18
 2384 00ea 7B68     		ldr	r3, [r7, #4]
 2385 00ec 2022     		movs	r2, #32
 2386 00ee 83F83A20 		strb	r2, [r3, #58]
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2387              		.loc 1 1622 17
 2388 00f2 7B68     		ldr	r3, [r7, #4]
 2389 00f4 2022     		movs	r2, #32
 2390 00f6 83F83920 		strb	r2, [r3, #57]
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2391              		.loc 1 1624 10
 2392 00fa 0023     		movs	r3, #0
 2393              	.L96:
1625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2394              		.loc 1 1625 1
ARM GAS  /tmp/ccytgAn2.s 			page 71


 2395 00fc 1846     		mov	r0, r3
 2396 00fe 0837     		adds	r7, r7, #8
 2397              	.LCFI89:
 2398              		.cfi_def_cfa_offset 8
 2399 0100 BD46     		mov	sp, r7
 2400              	.LCFI90:
 2401              		.cfi_def_cfa_register 13
 2402              		@ sp needed
 2403 0102 80BD     		pop	{r7, pc}
 2404              		.cfi_endproc
 2405              	.LFE146:
 2407              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2408              		.align	1
 2409              		.global	HAL_UART_AbortTransmit
 2410              		.syntax unified
 2411              		.thumb
 2412              		.thumb_func
 2413              		.fpu fpv4-sp-d16
 2415              	HAL_UART_AbortTransmit:
 2416              	.LFB147:
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2417              		.loc 1 1640 1
 2418              		.cfi_startproc
 2419              		@ args = 0, pretend = 0, frame = 8
 2420              		@ frame_needed = 1, uses_anonymous_args = 0
 2421 0000 80B5     		push	{r7, lr}
 2422              	.LCFI91:
 2423              		.cfi_def_cfa_offset 8
 2424              		.cfi_offset 7, -8
 2425              		.cfi_offset 14, -4
 2426 0002 82B0     		sub	sp, sp, #8
 2427              	.LCFI92:
 2428              		.cfi_def_cfa_offset 16
 2429 0004 00AF     		add	r7, sp, #0
 2430              	.LCFI93:
 2431              		.cfi_def_cfa_register 7
 2432 0006 7860     		str	r0, [r7, #4]
1641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 2433              		.loc 1 1642 3
 2434 0008 7B68     		ldr	r3, [r7, #4]
 2435 000a 1B68     		ldr	r3, [r3]
 2436 000c DA68     		ldr	r2, [r3, #12]
ARM GAS  /tmp/ccytgAn2.s 			page 72


 2437 000e 7B68     		ldr	r3, [r7, #4]
 2438 0010 1B68     		ldr	r3, [r3]
 2439 0012 22F0C002 		bic	r2, r2, #192
 2440 0016 DA60     		str	r2, [r3, #12]
1643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2441              		.loc 1 1645 7
 2442 0018 7B68     		ldr	r3, [r7, #4]
 2443 001a 1B68     		ldr	r3, [r3]
 2444 001c 5B69     		ldr	r3, [r3, #20]
 2445 001e 03F08003 		and	r3, r3, #128
 2446              		.loc 1 1645 6
 2447 0022 802B     		cmp	r3, #128
 2448 0024 24D1     		bne	.L99
1646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2449              		.loc 1 1647 5
 2450 0026 7B68     		ldr	r3, [r7, #4]
 2451 0028 1B68     		ldr	r3, [r3]
 2452 002a 5A69     		ldr	r2, [r3, #20]
 2453 002c 7B68     		ldr	r3, [r7, #4]
 2454 002e 1B68     		ldr	r3, [r3]
 2455 0030 22F08002 		bic	r2, r2, #128
 2456 0034 5A61     		str	r2, [r3, #20]
1648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use blocking DMA Abort API (no callback) */
1650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2457              		.loc 1 1650 14
 2458 0036 7B68     		ldr	r3, [r7, #4]
 2459 0038 1B6B     		ldr	r3, [r3, #48]
 2460              		.loc 1 1650 8
 2461 003a 002B     		cmp	r3, #0
 2462 003c 18D0     		beq	.L99
1651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2463              		.loc 1 1654 12
 2464 003e 7B68     		ldr	r3, [r7, #4]
 2465 0040 1B6B     		ldr	r3, [r3, #48]
 2466              		.loc 1 1654 40
 2467 0042 0022     		movs	r2, #0
 2468 0044 1A65     		str	r2, [r3, #80]
1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2469              		.loc 1 1656 11
 2470 0046 7B68     		ldr	r3, [r7, #4]
 2471 0048 1B6B     		ldr	r3, [r3, #48]
 2472 004a 1846     		mov	r0, r3
 2473 004c FFF7FEFF 		bl	HAL_DMA_Abort
 2474 0050 0346     		mov	r3, r0
 2475              		.loc 1 1656 10
 2476 0052 002B     		cmp	r3, #0
 2477 0054 0CD0     		beq	.L99
1657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
ARM GAS  /tmp/ccytgAn2.s 			page 73


 2478              		.loc 1 1658 13
 2479 0056 7B68     		ldr	r3, [r7, #4]
 2480 0058 1B6B     		ldr	r3, [r3, #48]
 2481 005a 1846     		mov	r0, r3
 2482 005c FFF7FEFF 		bl	HAL_DMA_GetError
 2483 0060 0346     		mov	r3, r0
 2484              		.loc 1 1658 12
 2485 0062 202B     		cmp	r3, #32
 2486 0064 04D1     		bne	.L99
1659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2487              		.loc 1 1661 28
 2488 0066 7B68     		ldr	r3, [r7, #4]
 2489 0068 1022     		movs	r2, #16
 2490 006a DA63     		str	r2, [r3, #60]
1662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2491              		.loc 1 1663 18
 2492 006c 0323     		movs	r3, #3
 2493 006e 07E0     		b	.L100
 2494              	.L99:
1664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 2495              		.loc 1 1670 22
 2496 0070 7B68     		ldr	r3, [r7, #4]
 2497 0072 0022     		movs	r2, #0
 2498 0074 DA84     		strh	r2, [r3, #38]	@ movhi
1671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2499              		.loc 1 1673 17
 2500 0076 7B68     		ldr	r3, [r7, #4]
 2501 0078 2022     		movs	r2, #32
 2502 007a 83F83920 		strb	r2, [r3, #57]
1674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2503              		.loc 1 1675 10
 2504 007e 0023     		movs	r3, #0
 2505              	.L100:
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2506              		.loc 1 1676 1
 2507 0080 1846     		mov	r0, r3
 2508 0082 0837     		adds	r7, r7, #8
 2509              	.LCFI94:
 2510              		.cfi_def_cfa_offset 8
 2511 0084 BD46     		mov	sp, r7
 2512              	.LCFI95:
 2513              		.cfi_def_cfa_register 13
 2514              		@ sp needed
 2515 0086 80BD     		pop	{r7, pc}
 2516              		.cfi_endproc
ARM GAS  /tmp/ccytgAn2.s 			page 74


 2517              	.LFE147:
 2519              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 2520              		.align	1
 2521              		.global	HAL_UART_AbortReceive
 2522              		.syntax unified
 2523              		.thumb
 2524              		.thumb_func
 2525              		.fpu fpv4-sp-d16
 2527              	HAL_UART_AbortReceive:
 2528              	.LFB148:
1677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2529              		.loc 1 1691 1
 2530              		.cfi_startproc
 2531              		@ args = 0, pretend = 0, frame = 8
 2532              		@ frame_needed = 1, uses_anonymous_args = 0
 2533 0000 80B5     		push	{r7, lr}
 2534              	.LCFI96:
 2535              		.cfi_def_cfa_offset 8
 2536              		.cfi_offset 7, -8
 2537              		.cfi_offset 14, -4
 2538 0002 82B0     		sub	sp, sp, #8
 2539              	.LCFI97:
 2540              		.cfi_def_cfa_offset 16
 2541 0004 00AF     		add	r7, sp, #0
 2542              	.LCFI98:
 2543              		.cfi_def_cfa_register 7
 2544 0006 7860     		str	r0, [r7, #4]
1692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 2545              		.loc 1 1693 3
 2546 0008 7B68     		ldr	r3, [r7, #4]
 2547 000a 1B68     		ldr	r3, [r3]
 2548 000c DA68     		ldr	r2, [r3, #12]
 2549 000e 7B68     		ldr	r3, [r7, #4]
 2550 0010 1B68     		ldr	r3, [r3]
 2551 0012 22F49072 		bic	r2, r2, #288
 2552 0016 DA60     		str	r2, [r3, #12]
1694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2553              		.loc 1 1694 3
 2554 0018 7B68     		ldr	r3, [r7, #4]
 2555 001a 1B68     		ldr	r3, [r3]
 2556 001c 5A69     		ldr	r2, [r3, #20]
 2557 001e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccytgAn2.s 			page 75


 2558 0020 1B68     		ldr	r3, [r3]
 2559 0022 22F00102 		bic	r2, r2, #1
 2560 0026 5A61     		str	r2, [r3, #20]
1695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2561              		.loc 1 1697 7
 2562 0028 7B68     		ldr	r3, [r7, #4]
 2563 002a 1B68     		ldr	r3, [r3]
 2564 002c 5B69     		ldr	r3, [r3, #20]
 2565 002e 03F04003 		and	r3, r3, #64
 2566              		.loc 1 1697 6
 2567 0032 402B     		cmp	r3, #64
 2568 0034 24D1     		bne	.L102
1698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2569              		.loc 1 1699 5
 2570 0036 7B68     		ldr	r3, [r7, #4]
 2571 0038 1B68     		ldr	r3, [r3]
 2572 003a 5A69     		ldr	r2, [r3, #20]
 2573 003c 7B68     		ldr	r3, [r7, #4]
 2574 003e 1B68     		ldr	r3, [r3]
 2575 0040 22F04002 		bic	r2, r2, #64
 2576 0044 5A61     		str	r2, [r3, #20]
1700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use blocking DMA Abort API (no callback) */
1702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2577              		.loc 1 1702 14
 2578 0046 7B68     		ldr	r3, [r7, #4]
 2579 0048 5B6B     		ldr	r3, [r3, #52]
 2580              		.loc 1 1702 8
 2581 004a 002B     		cmp	r3, #0
 2582 004c 18D0     		beq	.L102
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2583              		.loc 1 1706 12
 2584 004e 7B68     		ldr	r3, [r7, #4]
 2585 0050 5B6B     		ldr	r3, [r3, #52]
 2586              		.loc 1 1706 40
 2587 0052 0022     		movs	r2, #0
 2588 0054 1A65     		str	r2, [r3, #80]
1707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 2589              		.loc 1 1708 11
 2590 0056 7B68     		ldr	r3, [r7, #4]
 2591 0058 5B6B     		ldr	r3, [r3, #52]
 2592 005a 1846     		mov	r0, r3
 2593 005c FFF7FEFF 		bl	HAL_DMA_Abort
 2594 0060 0346     		mov	r3, r0
 2595              		.loc 1 1708 10
 2596 0062 002B     		cmp	r3, #0
 2597 0064 0CD0     		beq	.L102
1709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 2598              		.loc 1 1710 13
ARM GAS  /tmp/ccytgAn2.s 			page 76


 2599 0066 7B68     		ldr	r3, [r7, #4]
 2600 0068 5B6B     		ldr	r3, [r3, #52]
 2601 006a 1846     		mov	r0, r3
 2602 006c FFF7FEFF 		bl	HAL_DMA_GetError
 2603 0070 0346     		mov	r3, r0
 2604              		.loc 1 1710 12
 2605 0072 202B     		cmp	r3, #32
 2606 0074 04D1     		bne	.L102
1711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2607              		.loc 1 1713 28
 2608 0076 7B68     		ldr	r3, [r7, #4]
 2609 0078 1022     		movs	r2, #16
 2610 007a DA63     		str	r2, [r3, #60]
1714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2611              		.loc 1 1715 18
 2612 007c 0323     		movs	r3, #3
 2613 007e 07E0     		b	.L103
 2614              	.L102:
1716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Rx transfer counter */
1722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 2615              		.loc 1 1722 22
 2616 0080 7B68     		ldr	r3, [r7, #4]
 2617 0082 0022     		movs	r2, #0
 2618 0084 DA85     		strh	r2, [r3, #46]	@ movhi
1723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2619              		.loc 1 1725 18
 2620 0086 7B68     		ldr	r3, [r7, #4]
 2621 0088 2022     		movs	r2, #32
 2622 008a 83F83A20 		strb	r2, [r3, #58]
1726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2623              		.loc 1 1727 10
 2624 008e 0023     		movs	r3, #0
 2625              	.L103:
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2626              		.loc 1 1728 1
 2627 0090 1846     		mov	r0, r3
 2628 0092 0837     		adds	r7, r7, #8
 2629              	.LCFI99:
 2630              		.cfi_def_cfa_offset 8
 2631 0094 BD46     		mov	sp, r7
 2632              	.LCFI100:
 2633              		.cfi_def_cfa_register 13
 2634              		@ sp needed
 2635 0096 80BD     		pop	{r7, pc}
 2636              		.cfi_endproc
 2637              	.LFE148:
ARM GAS  /tmp/ccytgAn2.s 			page 77


 2639              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 2640              		.align	1
 2641              		.global	HAL_UART_Abort_IT
 2642              		.syntax unified
 2643              		.thumb
 2644              		.thumb_func
 2645              		.fpu fpv4-sp-d16
 2647              	HAL_UART_Abort_IT:
 2648              	.LFB149:
1729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2649              		.loc 1 1745 1
 2650              		.cfi_startproc
 2651              		@ args = 0, pretend = 0, frame = 16
 2652              		@ frame_needed = 1, uses_anonymous_args = 0
 2653 0000 80B5     		push	{r7, lr}
 2654              	.LCFI101:
 2655              		.cfi_def_cfa_offset 8
 2656              		.cfi_offset 7, -8
 2657              		.cfi_offset 14, -4
 2658 0002 84B0     		sub	sp, sp, #16
 2659              	.LCFI102:
 2660              		.cfi_def_cfa_offset 24
 2661 0004 00AF     		add	r7, sp, #0
 2662              	.LCFI103:
 2663              		.cfi_def_cfa_register 7
 2664 0006 7860     		str	r0, [r7, #4]
1746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 2665              		.loc 1 1746 12
 2666 0008 0123     		movs	r3, #1
 2667 000a FB60     		str	r3, [r7, #12]
1747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
 2668              		.loc 1 1749 3
 2669 000c 7B68     		ldr	r3, [r7, #4]
 2670 000e 1B68     		ldr	r3, [r3]
 2671 0010 DA68     		ldr	r2, [r3, #12]
 2672 0012 7B68     		ldr	r3, [r7, #4]
 2673 0014 1B68     		ldr	r3, [r3]
 2674 0016 22F4F072 		bic	r2, r2, #480
 2675 001a DA60     		str	r2, [r3, #12]
ARM GAS  /tmp/ccytgAn2.s 			page 78


1750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2676              		.loc 1 1750 3
 2677 001c 7B68     		ldr	r3, [r7, #4]
 2678 001e 1B68     		ldr	r3, [r3]
 2679 0020 5A69     		ldr	r2, [r3, #20]
 2680 0022 7B68     		ldr	r3, [r7, #4]
 2681 0024 1B68     		ldr	r3, [r3]
 2682 0026 22F00102 		bic	r2, r2, #1
 2683 002a 5A61     		str	r2, [r3, #20]
1751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      before any call to DMA Abort functions */
1754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 2684              		.loc 1 1755 12
 2685 002c 7B68     		ldr	r3, [r7, #4]
 2686 002e 1B6B     		ldr	r3, [r3, #48]
 2687              		.loc 1 1755 6
 2688 0030 002B     		cmp	r3, #0
 2689 0032 0FD0     		beq	.L105
1756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
1759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2690              		.loc 1 1759 9
 2691 0034 7B68     		ldr	r3, [r7, #4]
 2692 0036 1B68     		ldr	r3, [r3]
 2693 0038 5B69     		ldr	r3, [r3, #20]
 2694 003a 03F08003 		and	r3, r3, #128
 2695              		.loc 1 1759 8
 2696 003e 802B     		cmp	r3, #128
 2697 0040 04D1     		bne	.L106
1760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
 2698              		.loc 1 1761 12
 2699 0042 7B68     		ldr	r3, [r7, #4]
 2700 0044 1B6B     		ldr	r3, [r3, #48]
 2701              		.loc 1 1761 40
 2702 0046 3E4A     		ldr	r2, .L115
 2703 0048 1A65     		str	r2, [r3, #80]
 2704 004a 03E0     		b	.L105
 2705              	.L106:
1762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2706              		.loc 1 1765 12
 2707 004c 7B68     		ldr	r3, [r7, #4]
 2708 004e 1B6B     		ldr	r3, [r3, #48]
 2709              		.loc 1 1765 40
 2710 0050 0022     		movs	r2, #0
 2711 0052 1A65     		str	r2, [r3, #80]
 2712              	.L105:
1766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
ARM GAS  /tmp/ccytgAn2.s 			page 79


 2713              		.loc 1 1769 12
 2714 0054 7B68     		ldr	r3, [r7, #4]
 2715 0056 5B6B     		ldr	r3, [r3, #52]
 2716              		.loc 1 1769 6
 2717 0058 002B     		cmp	r3, #0
 2718 005a 0FD0     		beq	.L107
1770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
1773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2719              		.loc 1 1773 9
 2720 005c 7B68     		ldr	r3, [r7, #4]
 2721 005e 1B68     		ldr	r3, [r3]
 2722 0060 5B69     		ldr	r3, [r3, #20]
 2723 0062 03F04003 		and	r3, r3, #64
 2724              		.loc 1 1773 8
 2725 0066 402B     		cmp	r3, #64
 2726 0068 04D1     		bne	.L108
1774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
 2727              		.loc 1 1775 12
 2728 006a 7B68     		ldr	r3, [r7, #4]
 2729 006c 5B6B     		ldr	r3, [r3, #52]
 2730              		.loc 1 1775 40
 2731 006e 354A     		ldr	r2, .L115+4
 2732 0070 1A65     		str	r2, [r3, #80]
 2733 0072 03E0     		b	.L107
 2734              	.L108:
1776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2735              		.loc 1 1779 12
 2736 0074 7B68     		ldr	r3, [r7, #4]
 2737 0076 5B6B     		ldr	r3, [r3, #52]
 2738              		.loc 1 1779 40
 2739 0078 0022     		movs	r2, #0
 2740 007a 1A65     		str	r2, [r3, #80]
 2741              	.L107:
1780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2742              		.loc 1 1784 7
 2743 007c 7B68     		ldr	r3, [r7, #4]
 2744 007e 1B68     		ldr	r3, [r3]
 2745 0080 5B69     		ldr	r3, [r3, #20]
 2746 0082 03F08003 		and	r3, r3, #128
 2747              		.loc 1 1784 6
 2748 0086 802B     		cmp	r3, #128
 2749 0088 1AD1     		bne	.L109
1785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2750              		.loc 1 1787 5
 2751 008a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccytgAn2.s 			page 80


 2752 008c 1B68     		ldr	r3, [r3]
 2753 008e 5A69     		ldr	r2, [r3, #20]
 2754 0090 7B68     		ldr	r3, [r7, #4]
 2755 0092 1B68     		ldr	r3, [r3]
 2756 0094 22F08002 		bic	r2, r2, #128
 2757 0098 5A61     		str	r2, [r3, #20]
1788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use non blocking DMA Abort API (callback) */
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2758              		.loc 1 1790 14
 2759 009a 7B68     		ldr	r3, [r7, #4]
 2760 009c 1B6B     		ldr	r3, [r3, #48]
 2761              		.loc 1 1790 8
 2762 009e 002B     		cmp	r3, #0
 2763 00a0 0ED0     		beq	.L109
1791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 2764              		.loc 1 1796 11
 2765 00a2 7B68     		ldr	r3, [r7, #4]
 2766 00a4 1B6B     		ldr	r3, [r3, #48]
 2767 00a6 1846     		mov	r0, r3
 2768 00a8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2769 00ac 0346     		mov	r3, r0
 2770              		.loc 1 1796 10
 2771 00ae 002B     		cmp	r3, #0
 2772 00b0 04D0     		beq	.L110
1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
 2773              		.loc 1 1798 14
 2774 00b2 7B68     		ldr	r3, [r7, #4]
 2775 00b4 1B6B     		ldr	r3, [r3, #48]
 2776              		.loc 1 1798 42
 2777 00b6 0022     		movs	r2, #0
 2778 00b8 1A65     		str	r2, [r3, #80]
 2779 00ba 01E0     		b	.L109
 2780              	.L110:
1799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
 2781              		.loc 1 1802 19
 2782 00bc 0023     		movs	r3, #0
 2783 00be FB60     		str	r3, [r7, #12]
 2784              	.L109:
1803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2785              		.loc 1 1808 7
 2786 00c0 7B68     		ldr	r3, [r7, #4]
 2787 00c2 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccytgAn2.s 			page 81


 2788 00c4 5B69     		ldr	r3, [r3, #20]
 2789 00c6 03F04003 		and	r3, r3, #64
 2790              		.loc 1 1808 6
 2791 00ca 402B     		cmp	r3, #64
 2792 00cc 1CD1     		bne	.L111
1809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2793              		.loc 1 1810 5
 2794 00ce 7B68     		ldr	r3, [r7, #4]
 2795 00d0 1B68     		ldr	r3, [r3]
 2796 00d2 5A69     		ldr	r2, [r3, #20]
 2797 00d4 7B68     		ldr	r3, [r7, #4]
 2798 00d6 1B68     		ldr	r3, [r3]
 2799 00d8 22F04002 		bic	r2, r2, #64
 2800 00dc 5A61     		str	r2, [r3, #20]
1811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use non blocking DMA Abort API (callback) */
1813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2801              		.loc 1 1813 14
 2802 00de 7B68     		ldr	r3, [r7, #4]
 2803 00e0 5B6B     		ldr	r3, [r3, #52]
 2804              		.loc 1 1813 8
 2805 00e2 002B     		cmp	r3, #0
 2806 00e4 10D0     		beq	.L111
1814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
1816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
1819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 2807              		.loc 1 1819 11
 2808 00e6 7B68     		ldr	r3, [r7, #4]
 2809 00e8 5B6B     		ldr	r3, [r3, #52]
 2810 00ea 1846     		mov	r0, r3
 2811 00ec FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2812 00f0 0346     		mov	r3, r0
 2813              		.loc 1 1819 10
 2814 00f2 002B     		cmp	r3, #0
 2815 00f4 06D0     		beq	.L112
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
 2816              		.loc 1 1821 14
 2817 00f6 7B68     		ldr	r3, [r7, #4]
 2818 00f8 5B6B     		ldr	r3, [r3, #52]
 2819              		.loc 1 1821 42
 2820 00fa 0022     		movs	r2, #0
 2821 00fc 1A65     		str	r2, [r3, #80]
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x01U;
 2822              		.loc 1 1822 19
 2823 00fe 0123     		movs	r3, #1
 2824 0100 FB60     		str	r3, [r7, #12]
 2825 0102 01E0     		b	.L111
 2826              	.L112:
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
ARM GAS  /tmp/ccytgAn2.s 			page 82


 2827              		.loc 1 1826 19
 2828 0104 0023     		movs	r3, #0
 2829 0106 FB60     		str	r3, [r7, #12]
 2830              	.L111:
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (AbortCplt == 0x01U)
 2831              		.loc 1 1832 6
 2832 0108 FB68     		ldr	r3, [r7, #12]
 2833 010a 012B     		cmp	r3, #1
 2834 010c 13D1     		bne	.L113
1833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 2835              		.loc 1 1835 24
 2836 010e 7B68     		ldr	r3, [r7, #4]
 2837 0110 0022     		movs	r2, #0
 2838 0112 DA84     		strh	r2, [r3, #38]	@ movhi
1836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 2839              		.loc 1 1836 24
 2840 0114 7B68     		ldr	r3, [r7, #4]
 2841 0116 0022     		movs	r2, #0
 2842 0118 DA85     		strh	r2, [r3, #46]	@ movhi
1837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset ErrorCode */
1839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 2843              		.loc 1 1839 22
 2844 011a 7B68     		ldr	r3, [r7, #4]
 2845 011c 0022     		movs	r2, #0
 2846 011e DA63     		str	r2, [r3, #60]
1840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
 2847              		.loc 1 1842 20
 2848 0120 7B68     		ldr	r3, [r7, #4]
 2849 0122 2022     		movs	r2, #32
 2850 0124 83F83920 		strb	r2, [r3, #57]
1843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2851              		.loc 1 1843 20
 2852 0128 7B68     		ldr	r3, [r7, #4]
 2853 012a 2022     		movs	r2, #32
 2854 012c 83F83A20 		strb	r2, [r3, #58]
1844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort complete callback */
1848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
1851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
 2855              		.loc 1 1851 5
 2856 0130 7868     		ldr	r0, [r7, #4]
 2857 0132 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2858              	.L113:
ARM GAS  /tmp/ccytgAn2.s 			page 83


1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2859              		.loc 1 1855 10
 2860 0136 0023     		movs	r3, #0
1856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2861              		.loc 1 1856 1
 2862 0138 1846     		mov	r0, r3
 2863 013a 1037     		adds	r7, r7, #16
 2864              	.LCFI104:
 2865              		.cfi_def_cfa_offset 8
 2866 013c BD46     		mov	sp, r7
 2867              	.LCFI105:
 2868              		.cfi_def_cfa_register 13
 2869              		@ sp needed
 2870 013e 80BD     		pop	{r7, pc}
 2871              	.L116:
 2872              		.align	2
 2873              	.L115:
 2874 0140 00000000 		.word	UART_DMATxAbortCallback
 2875 0144 00000000 		.word	UART_DMARxAbortCallback
 2876              		.cfi_endproc
 2877              	.LFE149:
 2879              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 2880              		.align	1
 2881              		.global	HAL_UART_AbortTransmit_IT
 2882              		.syntax unified
 2883              		.thumb
 2884              		.thumb_func
 2885              		.fpu fpv4-sp-d16
 2887              	HAL_UART_AbortTransmit_IT:
 2888              	.LFB150:
1857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2889              		.loc 1 1873 1
 2890              		.cfi_startproc
 2891              		@ args = 0, pretend = 0, frame = 8
 2892              		@ frame_needed = 1, uses_anonymous_args = 0
 2893 0000 80B5     		push	{r7, lr}
 2894              	.LCFI106:
 2895              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccytgAn2.s 			page 84


 2896              		.cfi_offset 7, -8
 2897              		.cfi_offset 14, -4
 2898 0002 82B0     		sub	sp, sp, #8
 2899              	.LCFI107:
 2900              		.cfi_def_cfa_offset 16
 2901 0004 00AF     		add	r7, sp, #0
 2902              	.LCFI108:
 2903              		.cfi_def_cfa_register 7
 2904 0006 7860     		str	r0, [r7, #4]
1874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 2905              		.loc 1 1875 3
 2906 0008 7B68     		ldr	r3, [r7, #4]
 2907 000a 1B68     		ldr	r3, [r3]
 2908 000c DA68     		ldr	r2, [r3, #12]
 2909 000e 7B68     		ldr	r3, [r7, #4]
 2910 0010 1B68     		ldr	r3, [r3]
 2911 0012 22F0C002 		bic	r2, r2, #192
 2912 0016 DA60     		str	r2, [r3, #12]
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2913              		.loc 1 1878 7
 2914 0018 7B68     		ldr	r3, [r7, #4]
 2915 001a 1B68     		ldr	r3, [r3]
 2916 001c 5B69     		ldr	r3, [r3, #20]
 2917 001e 03F08003 		and	r3, r3, #128
 2918              		.loc 1 1878 6
 2919 0022 802B     		cmp	r3, #128
 2920 0024 2AD1     		bne	.L118
1879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2921              		.loc 1 1880 5
 2922 0026 7B68     		ldr	r3, [r7, #4]
 2923 0028 1B68     		ldr	r3, [r3]
 2924 002a 5A69     		ldr	r2, [r3, #20]
 2925 002c 7B68     		ldr	r3, [r7, #4]
 2926 002e 1B68     		ldr	r3, [r3]
 2927 0030 22F08002 		bic	r2, r2, #128
 2928 0034 5A61     		str	r2, [r3, #20]
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use blocking DMA Abort API (no callback) */
1883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2929              		.loc 1 1883 14
 2930 0036 7B68     		ldr	r3, [r7, #4]
 2931 0038 1B6B     		ldr	r3, [r3, #48]
 2932              		.loc 1 1883 8
 2933 003a 002B     		cmp	r3, #0
 2934 003c 13D0     		beq	.L119
1884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
1886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
 2935              		.loc 1 1887 12
 2936 003e 7B68     		ldr	r3, [r7, #4]
 2937 0040 1B6B     		ldr	r3, [r3, #48]
 2938              		.loc 1 1887 40
ARM GAS  /tmp/ccytgAn2.s 			page 85


 2939 0042 164A     		ldr	r2, .L124
 2940 0044 1A65     		str	r2, [r3, #80]
1888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
1890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 2941              		.loc 1 1890 11
 2942 0046 7B68     		ldr	r3, [r7, #4]
 2943 0048 1B6B     		ldr	r3, [r3, #48]
 2944 004a 1846     		mov	r0, r3
 2945 004c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2946 0050 0346     		mov	r3, r0
 2947              		.loc 1 1890 10
 2948 0052 002B     		cmp	r3, #0
 2949 0054 1CD0     		beq	.L122
1891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
 2950              		.loc 1 1893 14
 2951 0056 7B68     		ldr	r3, [r7, #4]
 2952 0058 1B6B     		ldr	r3, [r3, #48]
 2953              		.loc 1 1893 22
 2954 005a 1B6D     		ldr	r3, [r3, #80]
 2955              		.loc 1 1893 47
 2956 005c 7A68     		ldr	r2, [r7, #4]
 2957 005e 126B     		ldr	r2, [r2, #48]
 2958              		.loc 1 1893 9
 2959 0060 1046     		mov	r0, r2
 2960 0062 9847     		blx	r3
 2961              	.LVL0:
 2962 0064 14E0     		b	.L122
 2963              	.L119:
1894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Tx transfer counter */
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount = 0x00U;
 2964              		.loc 1 1899 26
 2965 0066 7B68     		ldr	r3, [r7, #4]
 2966 0068 0022     		movs	r2, #0
 2967 006a DA84     		strh	r2, [r3, #38]	@ movhi
1900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 2968              		.loc 1 1902 21
 2969 006c 7B68     		ldr	r3, [r7, #4]
 2970 006e 2022     		movs	r2, #32
 2971 0070 83F83920 		strb	r2, [r3, #57]
1903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
1907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
1908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
1909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
 2972              		.loc 1 1910 7
ARM GAS  /tmp/ccytgAn2.s 			page 86


 2973 0074 7868     		ldr	r0, [r7, #4]
 2974 0076 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2975 007a 09E0     		b	.L122
 2976              	.L118:
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx transfer counter */
1917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 2977              		.loc 1 1917 24
 2978 007c 7B68     		ldr	r3, [r7, #4]
 2979 007e 0022     		movs	r2, #0
 2980 0080 DA84     		strh	r2, [r3, #38]	@ movhi
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 2981              		.loc 1 1920 19
 2982 0082 7B68     		ldr	r3, [r7, #4]
 2983 0084 2022     		movs	r2, #32
 2984 0086 83F83920 		strb	r2, [r3, #57]
1921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
1925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
1926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
1927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
1928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
 2985              		.loc 1 1928 5
 2986 008a 7868     		ldr	r0, [r7, #4]
 2987 008c FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2988              	.L122:
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2989              		.loc 1 1932 10
 2990 0090 0023     		movs	r3, #0
1933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2991              		.loc 1 1933 1
 2992 0092 1846     		mov	r0, r3
 2993 0094 0837     		adds	r7, r7, #8
 2994              	.LCFI109:
 2995              		.cfi_def_cfa_offset 8
 2996 0096 BD46     		mov	sp, r7
 2997              	.LCFI110:
 2998              		.cfi_def_cfa_register 13
 2999              		@ sp needed
 3000 0098 80BD     		pop	{r7, pc}
 3001              	.L125:
 3002 009a 00BF     		.align	2
 3003              	.L124:
 3004 009c 00000000 		.word	UART_DMATxOnlyAbortCallback
 3005              		.cfi_endproc
 3006              	.LFE150:
ARM GAS  /tmp/ccytgAn2.s 			page 87


 3008              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 3009              		.align	1
 3010              		.global	HAL_UART_AbortReceive_IT
 3011              		.syntax unified
 3012              		.thumb
 3013              		.thumb_func
 3014              		.fpu fpv4-sp-d16
 3016              	HAL_UART_AbortReceive_IT:
 3017              	.LFB151:
1934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3018              		.loc 1 1950 1
 3019              		.cfi_startproc
 3020              		@ args = 0, pretend = 0, frame = 8
 3021              		@ frame_needed = 1, uses_anonymous_args = 0
 3022 0000 80B5     		push	{r7, lr}
 3023              	.LCFI111:
 3024              		.cfi_def_cfa_offset 8
 3025              		.cfi_offset 7, -8
 3026              		.cfi_offset 14, -4
 3027 0002 82B0     		sub	sp, sp, #8
 3028              	.LCFI112:
 3029              		.cfi_def_cfa_offset 16
 3030 0004 00AF     		add	r7, sp, #0
 3031              	.LCFI113:
 3032              		.cfi_def_cfa_register 7
 3033 0006 7860     		str	r0, [r7, #4]
1951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 3034              		.loc 1 1952 3
 3035 0008 7B68     		ldr	r3, [r7, #4]
 3036 000a 1B68     		ldr	r3, [r3]
 3037 000c DA68     		ldr	r2, [r3, #12]
 3038 000e 7B68     		ldr	r3, [r7, #4]
 3039 0010 1B68     		ldr	r3, [r3]
 3040 0012 22F49072 		bic	r2, r2, #288
 3041 0016 DA60     		str	r2, [r3, #12]
1953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3042              		.loc 1 1953 3
 3043 0018 7B68     		ldr	r3, [r7, #4]
 3044 001a 1B68     		ldr	r3, [r3]
 3045 001c 5A69     		ldr	r2, [r3, #20]
ARM GAS  /tmp/ccytgAn2.s 			page 88


 3046 001e 7B68     		ldr	r3, [r7, #4]
 3047 0020 1B68     		ldr	r3, [r3]
 3048 0022 22F00102 		bic	r2, r2, #1
 3049 0026 5A61     		str	r2, [r3, #20]
1954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3050              		.loc 1 1956 7
 3051 0028 7B68     		ldr	r3, [r7, #4]
 3052 002a 1B68     		ldr	r3, [r3]
 3053 002c 5B69     		ldr	r3, [r3, #20]
 3054 002e 03F04003 		and	r3, r3, #64
 3055              		.loc 1 1956 6
 3056 0032 402B     		cmp	r3, #64
 3057 0034 2AD1     		bne	.L127
1957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3058              		.loc 1 1958 5
 3059 0036 7B68     		ldr	r3, [r7, #4]
 3060 0038 1B68     		ldr	r3, [r3]
 3061 003a 5A69     		ldr	r2, [r3, #20]
 3062 003c 7B68     		ldr	r3, [r7, #4]
 3063 003e 1B68     		ldr	r3, [r3]
 3064 0040 22F04002 		bic	r2, r2, #64
 3065 0044 5A61     		str	r2, [r3, #20]
1959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use blocking DMA Abort API (no callback) */
1961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3066              		.loc 1 1961 14
 3067 0046 7B68     		ldr	r3, [r7, #4]
 3068 0048 5B6B     		ldr	r3, [r3, #52]
 3069              		.loc 1 1961 8
 3070 004a 002B     		cmp	r3, #0
 3071 004c 13D0     		beq	.L128
1962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
1964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
 3072              		.loc 1 1965 12
 3073 004e 7B68     		ldr	r3, [r7, #4]
 3074 0050 5B6B     		ldr	r3, [r3, #52]
 3075              		.loc 1 1965 40
 3076 0052 164A     		ldr	r2, .L133
 3077 0054 1A65     		str	r2, [r3, #80]
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
1968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3078              		.loc 1 1968 11
 3079 0056 7B68     		ldr	r3, [r7, #4]
 3080 0058 5B6B     		ldr	r3, [r3, #52]
 3081 005a 1846     		mov	r0, r3
 3082 005c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3083 0060 0346     		mov	r3, r0
 3084              		.loc 1 1968 10
 3085 0062 002B     		cmp	r3, #0
 3086 0064 1CD0     		beq	.L131
1969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
ARM GAS  /tmp/ccytgAn2.s 			page 89


1970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
 3087              		.loc 1 1971 14
 3088 0066 7B68     		ldr	r3, [r7, #4]
 3089 0068 5B6B     		ldr	r3, [r3, #52]
 3090              		.loc 1 1971 22
 3091 006a 1B6D     		ldr	r3, [r3, #80]
 3092              		.loc 1 1971 47
 3093 006c 7A68     		ldr	r2, [r7, #4]
 3094 006e 526B     		ldr	r2, [r2, #52]
 3095              		.loc 1 1971 9
 3096 0070 1046     		mov	r0, r2
 3097 0072 9847     		blx	r3
 3098              	.LVL1:
 3099 0074 14E0     		b	.L131
 3100              	.L128:
1972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Rx transfer counter */
1977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount = 0x00U;
 3101              		.loc 1 1977 26
 3102 0076 7B68     		ldr	r3, [r7, #4]
 3103 0078 0022     		movs	r2, #0
 3104 007a DA85     		strh	r2, [r3, #46]	@ movhi
1978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 3105              		.loc 1 1980 22
 3106 007c 7B68     		ldr	r3, [r7, #4]
 3107 007e 2022     		movs	r2, #32
 3108 0080 83F83A20 		strb	r2, [r3, #58]
1981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
1985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
1986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
1987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
1988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
 3109              		.loc 1 1988 7
 3110 0084 7868     		ldr	r0, [r7, #4]
 3111 0086 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3112 008a 09E0     		b	.L131
 3113              	.L127:
1989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Rx transfer counter */
1995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 3114              		.loc 1 1995 24
 3115 008c 7B68     		ldr	r3, [r7, #4]
 3116 008e 0022     		movs	r2, #0
 3117 0090 DA85     		strh	r2, [r3, #46]	@ movhi
ARM GAS  /tmp/ccytgAn2.s 			page 90


1996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3118              		.loc 1 1998 20
 3119 0092 7B68     		ldr	r3, [r7, #4]
 3120 0094 2022     		movs	r2, #32
 3121 0096 83F83A20 		strb	r2, [r3, #58]
1999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
 3122              		.loc 1 2006 5
 3123 009a 7868     		ldr	r0, [r7, #4]
 3124 009c FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3125              	.L131:
2007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 3126              		.loc 1 2010 10
 3127 00a0 0023     		movs	r3, #0
2011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3128              		.loc 1 2011 1
 3129 00a2 1846     		mov	r0, r3
 3130 00a4 0837     		adds	r7, r7, #8
 3131              	.LCFI114:
 3132              		.cfi_def_cfa_offset 8
 3133 00a6 BD46     		mov	sp, r7
 3134              	.LCFI115:
 3135              		.cfi_def_cfa_register 13
 3136              		@ sp needed
 3137 00a8 80BD     		pop	{r7, pc}
 3138              	.L134:
 3139 00aa 00BF     		.align	2
 3140              	.L133:
 3141 00ac 00000000 		.word	UART_DMARxOnlyAbortCallback
 3142              		.cfi_endproc
 3143              	.LFE151:
 3145              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 3146              		.align	1
 3147              		.global	HAL_UART_IRQHandler
 3148              		.syntax unified
 3149              		.thumb
 3150              		.thumb_func
 3151              		.fpu fpv4-sp-d16
 3153              	HAL_UART_IRQHandler:
 3154              	.LFB152:
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART interrupt request.
2015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
ARM GAS  /tmp/ccytgAn2.s 			page 91


2018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3155              		.loc 1 2020 1
 3156              		.cfi_startproc
 3157              		@ args = 0, pretend = 0, frame = 32
 3158              		@ frame_needed = 1, uses_anonymous_args = 0
 3159 0000 80B5     		push	{r7, lr}
 3160              	.LCFI116:
 3161              		.cfi_def_cfa_offset 8
 3162              		.cfi_offset 7, -8
 3163              		.cfi_offset 14, -4
 3164 0002 88B0     		sub	sp, sp, #32
 3165              	.LCFI117:
 3166              		.cfi_def_cfa_offset 40
 3167 0004 00AF     		add	r7, sp, #0
 3168              	.LCFI118:
 3169              		.cfi_def_cfa_register 7
 3170 0006 7860     		str	r0, [r7, #4]
2021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->SR);
 3171              		.loc 1 2021 25
 3172 0008 7B68     		ldr	r3, [r7, #4]
 3173 000a 1B68     		ldr	r3, [r3]
 3174              		.loc 1 2021 12
 3175 000c 1B68     		ldr	r3, [r3]
 3176 000e FB61     		str	r3, [r7, #28]
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 3177              		.loc 1 2022 25
 3178 0010 7B68     		ldr	r3, [r7, #4]
 3179 0012 1B68     		ldr	r3, [r3]
 3180              		.loc 1 2022 12
 3181 0014 DB68     		ldr	r3, [r3, #12]
 3182 0016 BB61     		str	r3, [r7, #24]
2023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 3183              		.loc 1 2023 25
 3184 0018 7B68     		ldr	r3, [r7, #4]
 3185 001a 1B68     		ldr	r3, [r3]
 3186              		.loc 1 2023 12
 3187 001c 5B69     		ldr	r3, [r3, #20]
 3188 001e 7B61     		str	r3, [r7, #20]
2024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t errorflags = 0x00U;
 3189              		.loc 1 2024 12
 3190 0020 0023     		movs	r3, #0
 3191 0022 3B61     		str	r3, [r7, #16]
2025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 3192              		.loc 1 2025 12
 3193 0024 0023     		movs	r3, #0
 3194 0026 FB60     		str	r3, [r7, #12]
2026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If no error occurs */
2028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
 3195              		.loc 1 2028 14
 3196 0028 FB69     		ldr	r3, [r7, #28]
 3197 002a 03F00F03 		and	r3, r3, #15
 3198 002e 3B61     		str	r3, [r7, #16]
2029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (errorflags == RESET)
 3199              		.loc 1 2029 6
ARM GAS  /tmp/ccytgAn2.s 			page 92


 3200 0030 3B69     		ldr	r3, [r7, #16]
 3201 0032 002B     		cmp	r3, #0
 3202 0034 0DD1     		bne	.L136
2030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART in mode Receiver -------------------------------------------------*/
2032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 3203              		.loc 1 2032 20
 3204 0036 FB69     		ldr	r3, [r7, #28]
 3205 0038 03F02003 		and	r3, r3, #32
 3206              		.loc 1 2032 8
 3207 003c 002B     		cmp	r3, #0
 3208 003e 08D0     		beq	.L136
 3209              		.loc 1 2032 59 discriminator 1
 3210 0040 BB69     		ldr	r3, [r7, #24]
 3211 0042 03F02003 		and	r3, r3, #32
 3212              		.loc 1 2032 47 discriminator 1
 3213 0046 002B     		cmp	r3, #0
 3214 0048 03D0     		beq	.L136
2033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       UART_Receive_IT(huart);
 3215              		.loc 1 2034 7
 3216 004a 7868     		ldr	r0, [r7, #4]
 3217 004c FFF7FEFF 		bl	UART_Receive_IT
2035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
 3218              		.loc 1 2035 7
 3219 0050 D1E0     		b	.L135
 3220              	.L136:
2036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If some errors occur */
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE
 3221              		.loc 1 2040 6
 3222 0052 3B69     		ldr	r3, [r7, #16]
 3223 0054 002B     		cmp	r3, #0
 3224 0056 00F0B080 		beq	.L138
 3225              		.loc 1 2040 42 discriminator 1
 3226 005a 7B69     		ldr	r3, [r7, #20]
 3227 005c 03F00103 		and	r3, r3, #1
 3228              		.loc 1 2040 29 discriminator 1
 3229 0060 002B     		cmp	r3, #0
 3230 0062 05D1     		bne	.L139
 3231              		.loc 1 2040 81 discriminator 2
 3232 0064 BB69     		ldr	r3, [r7, #24]
 3233 0066 03F49073 		and	r3, r3, #288
 3234              		.loc 1 2040 69 discriminator 2
 3235 006a 002B     		cmp	r3, #0
 3236 006c 00F0A580 		beq	.L138
 3237              	.L139:
2041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART parity error interrupt occurred ----------------------------------*/
2043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 3238              		.loc 1 2043 20
 3239 0070 FB69     		ldr	r3, [r7, #28]
 3240 0072 03F00103 		and	r3, r3, #1
 3241              		.loc 1 2043 8
 3242 0076 002B     		cmp	r3, #0
ARM GAS  /tmp/ccytgAn2.s 			page 93


 3243 0078 0AD0     		beq	.L140
 3244              		.loc 1 2043 57 discriminator 1
 3245 007a BB69     		ldr	r3, [r7, #24]
 3246 007c 03F48073 		and	r3, r3, #256
 3247              		.loc 1 2043 45 discriminator 1
 3248 0080 002B     		cmp	r3, #0
 3249 0082 05D0     		beq	.L140
2044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
 3250              		.loc 1 2045 24
 3251 0084 7B68     		ldr	r3, [r7, #4]
 3252 0086 DB6B     		ldr	r3, [r3, #60]
 3253 0088 43F00102 		orr	r2, r3, #1
 3254 008c 7B68     		ldr	r3, [r7, #4]
 3255 008e DA63     		str	r2, [r3, #60]
 3256              	.L140:
2046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART noise error interrupt occurred -----------------------------------*/
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 3257              		.loc 1 2049 20
 3258 0090 FB69     		ldr	r3, [r7, #28]
 3259 0092 03F00403 		and	r3, r3, #4
 3260              		.loc 1 2049 8
 3261 0096 002B     		cmp	r3, #0
 3262 0098 0AD0     		beq	.L141
 3263              		.loc 1 2049 57 discriminator 1
 3264 009a 7B69     		ldr	r3, [r7, #20]
 3265 009c 03F00103 		and	r3, r3, #1
 3266              		.loc 1 2049 45 discriminator 1
 3267 00a0 002B     		cmp	r3, #0
 3268 00a2 05D0     		beq	.L141
2050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
 3269              		.loc 1 2051 24
 3270 00a4 7B68     		ldr	r3, [r7, #4]
 3271 00a6 DB6B     		ldr	r3, [r3, #60]
 3272 00a8 43F00202 		orr	r2, r3, #2
 3273 00ac 7B68     		ldr	r3, [r7, #4]
 3274 00ae DA63     		str	r2, [r3, #60]
 3275              	.L141:
2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART frame error interrupt occurred -----------------------------------*/
2055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 3276              		.loc 1 2055 20
 3277 00b0 FB69     		ldr	r3, [r7, #28]
 3278 00b2 03F00203 		and	r3, r3, #2
 3279              		.loc 1 2055 8
 3280 00b6 002B     		cmp	r3, #0
 3281 00b8 0AD0     		beq	.L142
 3282              		.loc 1 2055 57 discriminator 1
 3283 00ba 7B69     		ldr	r3, [r7, #20]
 3284 00bc 03F00103 		and	r3, r3, #1
 3285              		.loc 1 2055 45 discriminator 1
 3286 00c0 002B     		cmp	r3, #0
 3287 00c2 05D0     		beq	.L142
ARM GAS  /tmp/ccytgAn2.s 			page 94


2056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
 3288              		.loc 1 2057 24
 3289 00c4 7B68     		ldr	r3, [r7, #4]
 3290 00c6 DB6B     		ldr	r3, [r3, #60]
 3291 00c8 43F00402 		orr	r2, r3, #4
 3292 00cc 7B68     		ldr	r3, [r7, #4]
 3293 00ce DA63     		str	r2, [r3, #60]
 3294              	.L142:
2058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred --------------------------------------*/
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its
 3295              		.loc 1 2061 20
 3296 00d0 FB69     		ldr	r3, [r7, #28]
 3297 00d2 03F00803 		and	r3, r3, #8
 3298              		.loc 1 2061 8
 3299 00d6 002B     		cmp	r3, #0
 3300 00d8 0FD0     		beq	.L143
 3301              		.loc 1 2061 59 discriminator 1
 3302 00da BB69     		ldr	r3, [r7, #24]
 3303 00dc 03F02003 		and	r3, r3, #32
 3304              		.loc 1 2061 46 discriminator 1
 3305 00e0 002B     		cmp	r3, #0
 3306 00e2 04D1     		bne	.L144
 3307              		.loc 1 2061 101 discriminator 2
 3308 00e4 7B69     		ldr	r3, [r7, #20]
 3309 00e6 03F00103 		and	r3, r3, #1
 3310              		.loc 1 2061 89 discriminator 2
 3311 00ea 002B     		cmp	r3, #0
 3312 00ec 05D0     		beq	.L143
 3313              	.L144:
2062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
 3314              		.loc 1 2063 24
 3315 00ee 7B68     		ldr	r3, [r7, #4]
 3316 00f0 DB6B     		ldr	r3, [r3, #60]
 3317 00f2 43F00802 		orr	r2, r3, #8
 3318 00f6 7B68     		ldr	r3, [r7, #4]
 3319 00f8 DA63     		str	r2, [r3, #60]
 3320              	.L143:
2064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
2067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 3321              		.loc 1 2067 14
 3322 00fa 7B68     		ldr	r3, [r7, #4]
 3323 00fc DB6B     		ldr	r3, [r3, #60]
 3324              		.loc 1 2067 8
 3325 00fe 002B     		cmp	r3, #0
 3326 0100 78D0     		beq	.L155
2068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART in mode Receiver -----------------------------------------------*/
2070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 3327              		.loc 1 2070 22
 3328 0102 FB69     		ldr	r3, [r7, #28]
 3329 0104 03F02003 		and	r3, r3, #32
ARM GAS  /tmp/ccytgAn2.s 			page 95


 3330              		.loc 1 2070 10
 3331 0108 002B     		cmp	r3, #0
 3332 010a 07D0     		beq	.L146
 3333              		.loc 1 2070 61 discriminator 1
 3334 010c BB69     		ldr	r3, [r7, #24]
 3335 010e 03F02003 		and	r3, r3, #32
 3336              		.loc 1 2070 49 discriminator 1
 3337 0112 002B     		cmp	r3, #0
 3338 0114 02D0     		beq	.L146
2071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_Receive_IT(huart);
 3339              		.loc 1 2072 9
 3340 0116 7868     		ldr	r0, [r7, #4]
 3341 0118 FFF7FEFF 		bl	UART_Receive_IT
 3342              	.L146:
2073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
2076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          consider error as blocking */
2077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 3343              		.loc 1 2077 20
 3344 011c 7B68     		ldr	r3, [r7, #4]
 3345 011e 1B68     		ldr	r3, [r3]
 3346 0120 5B69     		ldr	r3, [r3, #20]
 3347 0122 03F04003 		and	r3, r3, #64
 3348 0126 402B     		cmp	r3, #64
 3349 0128 0CBF     		ite	eq
 3350 012a 0123     		moveq	r3, #1
 3351 012c 0023     		movne	r3, #0
 3352 012e DBB2     		uxtb	r3, r3
 3353              		.loc 1 2077 18
 3354 0130 FB60     		str	r3, [r7, #12]
2078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 3355              		.loc 1 2078 18
 3356 0132 7B68     		ldr	r3, [r7, #4]
 3357 0134 DB6B     		ldr	r3, [r3, #60]
 3358              		.loc 1 2078 30
 3359 0136 03F00803 		and	r3, r3, #8
 3360              		.loc 1 2078 10
 3361 013a 002B     		cmp	r3, #0
 3362 013c 02D1     		bne	.L147
 3363              		.loc 1 2078 62 discriminator 1
 3364 013e FB68     		ldr	r3, [r7, #12]
 3365 0140 002B     		cmp	r3, #0
 3366 0142 31D0     		beq	.L148
 3367              	.L147:
2079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
 3368              		.loc 1 2083 9
 3369 0144 7868     		ldr	r0, [r7, #4]
 3370 0146 FFF7FEFF 		bl	UART_EndRxTransfer
2084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
ARM GAS  /tmp/ccytgAn2.s 			page 96


 3371              		.loc 1 2086 13
 3372 014a 7B68     		ldr	r3, [r7, #4]
 3373 014c 1B68     		ldr	r3, [r3]
 3374 014e 5B69     		ldr	r3, [r3, #20]
 3375 0150 03F04003 		and	r3, r3, #64
 3376              		.loc 1 2086 12
 3377 0154 402B     		cmp	r3, #64
 3378 0156 23D1     		bne	.L149
2087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3379              		.loc 1 2088 11
 3380 0158 7B68     		ldr	r3, [r7, #4]
 3381 015a 1B68     		ldr	r3, [r3]
 3382 015c 5A69     		ldr	r2, [r3, #20]
 3383 015e 7B68     		ldr	r3, [r7, #4]
 3384 0160 1B68     		ldr	r3, [r3]
 3385 0162 22F04002 		bic	r2, r2, #64
 3386 0166 5A61     		str	r2, [r3, #20]
2089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Abort the UART DMA Rx stream */
2091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           if (huart->hdmarx != NULL)
 3387              		.loc 1 2091 20
 3388 0168 7B68     		ldr	r3, [r7, #4]
 3389 016a 5B6B     		ldr	r3, [r3, #52]
 3390              		.loc 1 2091 14
 3391 016c 002B     		cmp	r3, #0
 3392 016e 13D0     		beq	.L150
2092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
2093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 3393              		.loc 1 2095 18
 3394 0170 7B68     		ldr	r3, [r7, #4]
 3395 0172 5B6B     		ldr	r3, [r3, #52]
 3396              		.loc 1 2095 46
 3397 0174 214A     		ldr	r2, .L157
 3398 0176 1A65     		str	r2, [r3, #80]
2096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3399              		.loc 1 2096 17
 3400 0178 7B68     		ldr	r3, [r7, #4]
 3401 017a 5B6B     		ldr	r3, [r3, #52]
 3402 017c 1846     		mov	r0, r3
 3403 017e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3404 0182 0346     		mov	r3, r0
 3405              		.loc 1 2096 16
 3406 0184 002B     		cmp	r3, #0
 3407 0186 16D0     		beq	.L156
2097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             {
2098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               /* Call Directly XferAbortCallback function in case of error */
2099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
 3408              		.loc 1 2099 20
 3409 0188 7B68     		ldr	r3, [r7, #4]
 3410 018a 5B6B     		ldr	r3, [r3, #52]
 3411              		.loc 1 2099 28
 3412 018c 1B6D     		ldr	r3, [r3, #80]
 3413              		.loc 1 2099 53
 3414 018e 7A68     		ldr	r2, [r7, #4]
ARM GAS  /tmp/ccytgAn2.s 			page 97


 3415 0190 526B     		ldr	r2, [r2, #52]
 3416              		.loc 1 2099 15
 3417 0192 1046     		mov	r0, r2
 3418 0194 9847     		blx	r3
 3419              	.LVL2:
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 3420              		.loc 1 2086 12
 3421 0196 0EE0     		b	.L156
 3422              	.L150:
2100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             }
2101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
2102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           else
2103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
2104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Call user error callback */
2105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /*Call registered error callback*/
2107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->ErrorCallback(huart);
2108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /*Call legacy weak error callback*/
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
 3423              		.loc 1 2110 13
 3424 0198 7868     		ldr	r0, [r7, #4]
 3425 019a FFF7FEFF 		bl	HAL_UART_ErrorCallback
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 3426              		.loc 1 2086 12
 3427 019e 0AE0     		b	.L156
 3428              	.L149:
2111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
2113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
2115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Call user error callback */
2117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /*Call registered error callback*/
2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCallback(huart);
2120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /*Call legacy weak error callback*/
2122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 3429              		.loc 1 2122 11
 3430 01a0 7868     		ldr	r0, [r7, #4]
 3431 01a2 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 3432              		.loc 1 2086 12
 3433 01a6 06E0     		b	.L156
 3434              	.L148:
2123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Error is notified to user through user error callback */
2130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered error callback*/
2132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback(huart);
2133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
ARM GAS  /tmp/ccytgAn2.s 			page 98


2134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak error callback*/
2135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
 3435              		.loc 1 2135 9
 3436 01a8 7868     		ldr	r0, [r7, #4]
 3437 01aa FFF7FEFF 		bl	HAL_UART_ErrorCallback
2136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 3438              		.loc 1 2138 26
 3439 01ae 7B68     		ldr	r3, [r7, #4]
 3440 01b0 0022     		movs	r2, #0
 3441 01b2 DA63     		str	r2, [r3, #60]
2139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 3442              		.loc 1 2141 5
 3443 01b4 1EE0     		b	.L155
 3444              	.L156:
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 3445              		.loc 1 2086 12
 3446 01b6 00BF     		nop
 3447              		.loc 1 2141 5
 3448 01b8 1CE0     		b	.L155
 3449              	.L138:
2142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   } /* End if some error occurs */
2143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 3450              		.loc 1 2145 18
 3451 01ba FB69     		ldr	r3, [r7, #28]
 3452 01bc 03F08003 		and	r3, r3, #128
 3453              		.loc 1 2145 6
 3454 01c0 002B     		cmp	r3, #0
 3455 01c2 08D0     		beq	.L154
 3456              		.loc 1 2145 56 discriminator 1
 3457 01c4 BB69     		ldr	r3, [r7, #24]
 3458 01c6 03F08003 		and	r3, r3, #128
 3459              		.loc 1 2145 44 discriminator 1
 3460 01ca 002B     		cmp	r3, #0
 3461 01cc 03D0     		beq	.L154
2146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_Transmit_IT(huart);
 3462              		.loc 1 2147 5
 3463 01ce 7868     		ldr	r0, [r7, #4]
 3464 01d0 FFF7FEFF 		bl	UART_Transmit_IT
2148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 3465              		.loc 1 2148 5
 3466 01d4 0FE0     		b	.L135
 3467              	.L154:
2149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
2152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 3468              		.loc 1 2152 18
 3469 01d6 FB69     		ldr	r3, [r7, #28]
 3470 01d8 03F04003 		and	r3, r3, #64
 3471              		.loc 1 2152 6
ARM GAS  /tmp/ccytgAn2.s 			page 99


 3472 01dc 002B     		cmp	r3, #0
 3473 01de 0AD0     		beq	.L135
 3474              		.loc 1 2152 55 discriminator 1
 3475 01e0 BB69     		ldr	r3, [r7, #24]
 3476 01e2 03F04003 		and	r3, r3, #64
 3477              		.loc 1 2152 43 discriminator 1
 3478 01e6 002B     		cmp	r3, #0
 3479 01e8 05D0     		beq	.L135
2153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 3480              		.loc 1 2154 5
 3481 01ea 7868     		ldr	r0, [r7, #4]
 3482 01ec FFF7FEFF 		bl	UART_EndTransmit_IT
2155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 3483              		.loc 1 2155 5
 3484 01f0 00BF     		nop
 3485 01f2 00E0     		b	.L135
 3486              	.L155:
2141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   } /* End if some error occurs */
 3487              		.loc 1 2141 5
 3488 01f4 00BF     		nop
 3489              	.L135:
2156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3490              		.loc 1 2157 1
 3491 01f6 2037     		adds	r7, r7, #32
 3492              	.LCFI119:
 3493              		.cfi_def_cfa_offset 8
 3494 01f8 BD46     		mov	sp, r7
 3495              	.LCFI120:
 3496              		.cfi_def_cfa_register 13
 3497              		@ sp needed
 3498 01fa 80BD     		pop	{r7, pc}
 3499              	.L158:
 3500              		.align	2
 3501              	.L157:
 3502 01fc 00000000 		.word	UART_DMAAbortOnError
 3503              		.cfi_endproc
 3504              	.LFE152:
 3506              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 3507              		.align	1
 3508              		.weak	HAL_UART_TxCpltCallback
 3509              		.syntax unified
 3510              		.thumb
 3511              		.thumb_func
 3512              		.fpu fpv4-sp-d16
 3514              	HAL_UART_TxCpltCallback:
 3515              	.LFB153:
2158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Transfer completed callbacks.
2161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
ARM GAS  /tmp/ccytgAn2.s 			page 100


 3516              		.loc 1 2166 1
 3517              		.cfi_startproc
 3518              		@ args = 0, pretend = 0, frame = 8
 3519              		@ frame_needed = 1, uses_anonymous_args = 0
 3520              		@ link register save eliminated.
 3521 0000 80B4     		push	{r7}
 3522              	.LCFI121:
 3523              		.cfi_def_cfa_offset 4
 3524              		.cfi_offset 7, -4
 3525 0002 83B0     		sub	sp, sp, #12
 3526              	.LCFI122:
 3527              		.cfi_def_cfa_offset 16
 3528 0004 00AF     		add	r7, sp, #0
 3529              	.LCFI123:
 3530              		.cfi_def_cfa_register 7
 3531 0006 7860     		str	r0, [r7, #4]
2167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
2171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3532              		.loc 1 2172 1
 3533 0008 00BF     		nop
 3534 000a 0C37     		adds	r7, r7, #12
 3535              	.LCFI124:
 3536              		.cfi_def_cfa_offset 4
 3537 000c BD46     		mov	sp, r7
 3538              	.LCFI125:
 3539              		.cfi_def_cfa_register 13
 3540              		@ sp needed
 3541 000e 5DF8047B 		ldr	r7, [sp], #4
 3542              	.LCFI126:
 3543              		.cfi_restore 7
 3544              		.cfi_def_cfa_offset 0
 3545 0012 7047     		bx	lr
 3546              		.cfi_endproc
 3547              	.LFE153:
 3549              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 3550              		.align	1
 3551              		.weak	HAL_UART_TxHalfCpltCallback
 3552              		.syntax unified
 3553              		.thumb
 3554              		.thumb_func
 3555              		.fpu fpv4-sp-d16
 3557              	HAL_UART_TxHalfCpltCallback:
 3558              	.LFB154:
2173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
2176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3559              		.loc 1 2181 1
ARM GAS  /tmp/ccytgAn2.s 			page 101


 3560              		.cfi_startproc
 3561              		@ args = 0, pretend = 0, frame = 8
 3562              		@ frame_needed = 1, uses_anonymous_args = 0
 3563              		@ link register save eliminated.
 3564 0000 80B4     		push	{r7}
 3565              	.LCFI127:
 3566              		.cfi_def_cfa_offset 4
 3567              		.cfi_offset 7, -4
 3568 0002 83B0     		sub	sp, sp, #12
 3569              	.LCFI128:
 3570              		.cfi_def_cfa_offset 16
 3571 0004 00AF     		add	r7, sp, #0
 3572              	.LCFI129:
 3573              		.cfi_def_cfa_register 7
 3574 0006 7860     		str	r0, [r7, #4]
2182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback could be implemented in the user file
2186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3575              		.loc 1 2187 1
 3576 0008 00BF     		nop
 3577 000a 0C37     		adds	r7, r7, #12
 3578              	.LCFI130:
 3579              		.cfi_def_cfa_offset 4
 3580 000c BD46     		mov	sp, r7
 3581              	.LCFI131:
 3582              		.cfi_def_cfa_register 13
 3583              		@ sp needed
 3584 000e 5DF8047B 		ldr	r7, [sp], #4
 3585              	.LCFI132:
 3586              		.cfi_restore 7
 3587              		.cfi_def_cfa_offset 0
 3588 0012 7047     		bx	lr
 3589              		.cfi_endproc
 3590              	.LFE154:
 3592              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 3593              		.align	1
 3594              		.weak	HAL_UART_RxCpltCallback
 3595              		.syntax unified
 3596              		.thumb
 3597              		.thumb_func
 3598              		.fpu fpv4-sp-d16
 3600              	HAL_UART_RxCpltCallback:
 3601              	.LFB155:
2188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Transfer completed callbacks.
2191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3602              		.loc 1 2196 1
 3603              		.cfi_startproc
ARM GAS  /tmp/ccytgAn2.s 			page 102


 3604              		@ args = 0, pretend = 0, frame = 8
 3605              		@ frame_needed = 1, uses_anonymous_args = 0
 3606              		@ link register save eliminated.
 3607 0000 80B4     		push	{r7}
 3608              	.LCFI133:
 3609              		.cfi_def_cfa_offset 4
 3610              		.cfi_offset 7, -4
 3611 0002 83B0     		sub	sp, sp, #12
 3612              	.LCFI134:
 3613              		.cfi_def_cfa_offset 16
 3614 0004 00AF     		add	r7, sp, #0
 3615              	.LCFI135:
 3616              		.cfi_def_cfa_register 7
 3617 0006 7860     		str	r0, [r7, #4]
2197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_RxCpltCallback could be implemented in the user file
2201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3618              		.loc 1 2202 1
 3619 0008 00BF     		nop
 3620 000a 0C37     		adds	r7, r7, #12
 3621              	.LCFI136:
 3622              		.cfi_def_cfa_offset 4
 3623 000c BD46     		mov	sp, r7
 3624              	.LCFI137:
 3625              		.cfi_def_cfa_register 13
 3626              		@ sp needed
 3627 000e 5DF8047B 		ldr	r7, [sp], #4
 3628              	.LCFI138:
 3629              		.cfi_restore 7
 3630              		.cfi_def_cfa_offset 0
 3631 0012 7047     		bx	lr
 3632              		.cfi_endproc
 3633              	.LFE155:
 3635              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 3636              		.align	1
 3637              		.weak	HAL_UART_RxHalfCpltCallback
 3638              		.syntax unified
 3639              		.thumb
 3640              		.thumb_func
 3641              		.fpu fpv4-sp-d16
 3643              	HAL_UART_RxHalfCpltCallback:
 3644              	.LFB156:
2203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
2206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3645              		.loc 1 2211 1
 3646              		.cfi_startproc
 3647              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccytgAn2.s 			page 103


 3648              		@ frame_needed = 1, uses_anonymous_args = 0
 3649              		@ link register save eliminated.
 3650 0000 80B4     		push	{r7}
 3651              	.LCFI139:
 3652              		.cfi_def_cfa_offset 4
 3653              		.cfi_offset 7, -4
 3654 0002 83B0     		sub	sp, sp, #12
 3655              	.LCFI140:
 3656              		.cfi_def_cfa_offset 16
 3657 0004 00AF     		add	r7, sp, #0
 3658              	.LCFI141:
 3659              		.cfi_def_cfa_register 7
 3660 0006 7860     		str	r0, [r7, #4]
2212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback could be implemented in the user file
2216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3661              		.loc 1 2217 1
 3662 0008 00BF     		nop
 3663 000a 0C37     		adds	r7, r7, #12
 3664              	.LCFI142:
 3665              		.cfi_def_cfa_offset 4
 3666 000c BD46     		mov	sp, r7
 3667              	.LCFI143:
 3668              		.cfi_def_cfa_register 13
 3669              		@ sp needed
 3670 000e 5DF8047B 		ldr	r7, [sp], #4
 3671              	.LCFI144:
 3672              		.cfi_restore 7
 3673              		.cfi_def_cfa_offset 0
 3674 0012 7047     		bx	lr
 3675              		.cfi_endproc
 3676              	.LFE156:
 3678              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 3679              		.align	1
 3680              		.weak	HAL_UART_ErrorCallback
 3681              		.syntax unified
 3682              		.thumb
 3683              		.thumb_func
 3684              		.fpu fpv4-sp-d16
 3686              	HAL_UART_ErrorCallback:
 3687              	.LFB157:
2218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART error callbacks.
2221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3688              		.loc 1 2226 1
 3689              		.cfi_startproc
 3690              		@ args = 0, pretend = 0, frame = 8
 3691              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccytgAn2.s 			page 104


 3692              		@ link register save eliminated.
 3693 0000 80B4     		push	{r7}
 3694              	.LCFI145:
 3695              		.cfi_def_cfa_offset 4
 3696              		.cfi_offset 7, -4
 3697 0002 83B0     		sub	sp, sp, #12
 3698              	.LCFI146:
 3699              		.cfi_def_cfa_offset 16
 3700 0004 00AF     		add	r7, sp, #0
 3701              	.LCFI147:
 3702              		.cfi_def_cfa_register 7
 3703 0006 7860     		str	r0, [r7, #4]
2227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_ErrorCallback could be implemented in the user file
2231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3704              		.loc 1 2232 1
 3705 0008 00BF     		nop
 3706 000a 0C37     		adds	r7, r7, #12
 3707              	.LCFI148:
 3708              		.cfi_def_cfa_offset 4
 3709 000c BD46     		mov	sp, r7
 3710              	.LCFI149:
 3711              		.cfi_def_cfa_register 13
 3712              		@ sp needed
 3713 000e 5DF8047B 		ldr	r7, [sp], #4
 3714              	.LCFI150:
 3715              		.cfi_restore 7
 3716              		.cfi_def_cfa_offset 0
 3717 0012 7047     		bx	lr
 3718              		.cfi_endproc
 3719              	.LFE157:
 3721              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 3722              		.align	1
 3723              		.weak	HAL_UART_AbortCpltCallback
 3724              		.syntax unified
 3725              		.thumb
 3726              		.thumb_func
 3727              		.fpu fpv4-sp-d16
 3729              	HAL_UART_AbortCpltCallback:
 3730              	.LFB158:
2233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3731              		.loc 1 2240 1
 3732              		.cfi_startproc
 3733              		@ args = 0, pretend = 0, frame = 8
 3734              		@ frame_needed = 1, uses_anonymous_args = 0
 3735              		@ link register save eliminated.
 3736 0000 80B4     		push	{r7}
ARM GAS  /tmp/ccytgAn2.s 			page 105


 3737              	.LCFI151:
 3738              		.cfi_def_cfa_offset 4
 3739              		.cfi_offset 7, -4
 3740 0002 83B0     		sub	sp, sp, #12
 3741              	.LCFI152:
 3742              		.cfi_def_cfa_offset 16
 3743 0004 00AF     		add	r7, sp, #0
 3744              	.LCFI153:
 3745              		.cfi_def_cfa_register 7
 3746 0006 7860     		str	r0, [r7, #4]
2241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3747              		.loc 1 2247 1
 3748 0008 00BF     		nop
 3749 000a 0C37     		adds	r7, r7, #12
 3750              	.LCFI154:
 3751              		.cfi_def_cfa_offset 4
 3752 000c BD46     		mov	sp, r7
 3753              	.LCFI155:
 3754              		.cfi_def_cfa_register 13
 3755              		@ sp needed
 3756 000e 5DF8047B 		ldr	r7, [sp], #4
 3757              	.LCFI156:
 3758              		.cfi_restore 7
 3759              		.cfi_def_cfa_offset 0
 3760 0012 7047     		bx	lr
 3761              		.cfi_endproc
 3762              	.LFE158:
 3764              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 3765              		.align	1
 3766              		.weak	HAL_UART_AbortTransmitCpltCallback
 3767              		.syntax unified
 3768              		.thumb
 3769              		.thumb_func
 3770              		.fpu fpv4-sp-d16
 3772              	HAL_UART_AbortTransmitCpltCallback:
 3773              	.LFB159:
2248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3774              		.loc 1 2255 1
 3775              		.cfi_startproc
 3776              		@ args = 0, pretend = 0, frame = 8
 3777              		@ frame_needed = 1, uses_anonymous_args = 0
 3778              		@ link register save eliminated.
 3779 0000 80B4     		push	{r7}
 3780              	.LCFI157:
ARM GAS  /tmp/ccytgAn2.s 			page 106


 3781              		.cfi_def_cfa_offset 4
 3782              		.cfi_offset 7, -4
 3783 0002 83B0     		sub	sp, sp, #12
 3784              	.LCFI158:
 3785              		.cfi_def_cfa_offset 16
 3786 0004 00AF     		add	r7, sp, #0
 3787              	.LCFI159:
 3788              		.cfi_def_cfa_register 7
 3789 0006 7860     		str	r0, [r7, #4]
2256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3790              		.loc 1 2262 1
 3791 0008 00BF     		nop
 3792 000a 0C37     		adds	r7, r7, #12
 3793              	.LCFI160:
 3794              		.cfi_def_cfa_offset 4
 3795 000c BD46     		mov	sp, r7
 3796              	.LCFI161:
 3797              		.cfi_def_cfa_register 13
 3798              		@ sp needed
 3799 000e 5DF8047B 		ldr	r7, [sp], #4
 3800              	.LCFI162:
 3801              		.cfi_restore 7
 3802              		.cfi_def_cfa_offset 0
 3803 0012 7047     		bx	lr
 3804              		.cfi_endproc
 3805              	.LFE159:
 3807              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 3808              		.align	1
 3809              		.weak	HAL_UART_AbortReceiveCpltCallback
 3810              		.syntax unified
 3811              		.thumb
 3812              		.thumb_func
 3813              		.fpu fpv4-sp-d16
 3815              	HAL_UART_AbortReceiveCpltCallback:
 3816              	.LFB160:
2263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3817              		.loc 1 2270 1
 3818              		.cfi_startproc
 3819              		@ args = 0, pretend = 0, frame = 8
 3820              		@ frame_needed = 1, uses_anonymous_args = 0
 3821              		@ link register save eliminated.
 3822 0000 80B4     		push	{r7}
 3823              	.LCFI163:
 3824              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccytgAn2.s 			page 107


 3825              		.cfi_offset 7, -4
 3826 0002 83B0     		sub	sp, sp, #12
 3827              	.LCFI164:
 3828              		.cfi_def_cfa_offset 16
 3829 0004 00AF     		add	r7, sp, #0
 3830              	.LCFI165:
 3831              		.cfi_def_cfa_register 7
 3832 0006 7860     		str	r0, [r7, #4]
2271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3833              		.loc 1 2277 1
 3834 0008 00BF     		nop
 3835 000a 0C37     		adds	r7, r7, #12
 3836              	.LCFI166:
 3837              		.cfi_def_cfa_offset 4
 3838 000c BD46     		mov	sp, r7
 3839              	.LCFI167:
 3840              		.cfi_def_cfa_register 13
 3841              		@ sp needed
 3842 000e 5DF8047B 		ldr	r7, [sp], #4
 3843              	.LCFI168:
 3844              		.cfi_restore 7
 3845              		.cfi_def_cfa_offset 0
 3846 0012 7047     		bx	lr
 3847              		.cfi_endproc
 3848              	.LFE160:
 3850              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 3851              		.align	1
 3852              		.global	HAL_LIN_SendBreak
 3853              		.syntax unified
 3854              		.thumb
 3855              		.thumb_func
 3856              		.fpu fpv4-sp-d16
 3858              	HAL_LIN_SendBreak:
 3859              	.LFB161:
2278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART control functions
2285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
2286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
2287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
2291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART:
2292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_LIN_SendBreak() API can be helpful to transmit the break character.
2293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_EnterMuteMode() API can be helpful to enter the UART in mute mode.
2294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_ExitMuteMode() API can be helpful to exit the UART mute mode by software
ARM GAS  /tmp/ccytgAn2.s 			page 108


2295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableTransmitter() API to enable the UART transmitter and disables the UART
2296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableReceiver() API to enable the UART receiver and disables the UART trans
2297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
2299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Transmits break characters.
2304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3860              		.loc 1 2309 1
 3861              		.cfi_startproc
 3862              		@ args = 0, pretend = 0, frame = 8
 3863              		@ frame_needed = 1, uses_anonymous_args = 0
 3864              		@ link register save eliminated.
 3865 0000 80B4     		push	{r7}
 3866              	.LCFI169:
 3867              		.cfi_def_cfa_offset 4
 3868              		.cfi_offset 7, -4
 3869 0002 83B0     		sub	sp, sp, #12
 3870              	.LCFI170:
 3871              		.cfi_def_cfa_offset 16
 3872 0004 00AF     		add	r7, sp, #0
 3873              	.LCFI171:
 3874              		.cfi_def_cfa_register 7
 3875 0006 7860     		str	r0, [r7, #4]
2310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 3876              		.loc 1 2314 3
 3877 0008 7B68     		ldr	r3, [r7, #4]
 3878 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 3879 000e 012B     		cmp	r3, #1
 3880 0010 01D1     		bne	.L168
 3881              		.loc 1 2314 3 is_stmt 0 discriminator 1
 3882 0012 0223     		movs	r3, #2
 3883 0014 18E0     		b	.L169
 3884              	.L168:
 3885              		.loc 1 2314 3 discriminator 2
 3886 0016 7B68     		ldr	r3, [r7, #4]
 3887 0018 0122     		movs	r2, #1
 3888 001a 83F83820 		strb	r2, [r3, #56]
2315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3889              		.loc 1 2316 17 is_stmt 1 discriminator 2
 3890 001e 7B68     		ldr	r3, [r7, #4]
 3891 0020 2422     		movs	r2, #36
 3892 0022 83F83920 		strb	r2, [r3, #57]
2317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Send break characters */
ARM GAS  /tmp/ccytgAn2.s 			page 109


2319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_SBK);
 3893              		.loc 1 2319 3 discriminator 2
 3894 0026 7B68     		ldr	r3, [r7, #4]
 3895 0028 1B68     		ldr	r3, [r3]
 3896 002a DA68     		ldr	r2, [r3, #12]
 3897 002c 7B68     		ldr	r3, [r7, #4]
 3898 002e 1B68     		ldr	r3, [r3]
 3899 0030 42F00102 		orr	r2, r2, #1
 3900 0034 DA60     		str	r2, [r3, #12]
2320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3901              		.loc 1 2321 17 discriminator 2
 3902 0036 7B68     		ldr	r3, [r7, #4]
 3903 0038 2022     		movs	r2, #32
 3904 003a 83F83920 		strb	r2, [r3, #57]
2322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 3905              		.loc 1 2324 3 discriminator 2
 3906 003e 7B68     		ldr	r3, [r7, #4]
 3907 0040 0022     		movs	r2, #0
 3908 0042 83F83820 		strb	r2, [r3, #56]
2325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 3909              		.loc 1 2326 10 discriminator 2
 3910 0046 0023     		movs	r3, #0
 3911              	.L169:
2327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3912              		.loc 1 2327 1
 3913 0048 1846     		mov	r0, r3
 3914 004a 0C37     		adds	r7, r7, #12
 3915              	.LCFI172:
 3916              		.cfi_def_cfa_offset 4
 3917 004c BD46     		mov	sp, r7
 3918              	.LCFI173:
 3919              		.cfi_def_cfa_register 13
 3920              		@ sp needed
 3921 004e 5DF8047B 		ldr	r7, [sp], #4
 3922              	.LCFI174:
 3923              		.cfi_restore 7
 3924              		.cfi_def_cfa_offset 0
 3925 0052 7047     		bx	lr
 3926              		.cfi_endproc
 3927              	.LFE161:
 3929              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 3930              		.align	1
 3931              		.global	HAL_MultiProcessor_EnterMuteMode
 3932              		.syntax unified
 3933              		.thumb
 3934              		.thumb_func
 3935              		.fpu fpv4-sp-d16
 3937              	HAL_MultiProcessor_EnterMuteMode:
 3938              	.LFB162:
2328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enters the UART in mute mode.
2331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
ARM GAS  /tmp/ccytgAn2.s 			page 110


2332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3939              		.loc 1 2336 1
 3940              		.cfi_startproc
 3941              		@ args = 0, pretend = 0, frame = 8
 3942              		@ frame_needed = 1, uses_anonymous_args = 0
 3943              		@ link register save eliminated.
 3944 0000 80B4     		push	{r7}
 3945              	.LCFI175:
 3946              		.cfi_def_cfa_offset 4
 3947              		.cfi_offset 7, -4
 3948 0002 83B0     		sub	sp, sp, #12
 3949              	.LCFI176:
 3950              		.cfi_def_cfa_offset 16
 3951 0004 00AF     		add	r7, sp, #0
 3952              	.LCFI177:
 3953              		.cfi_def_cfa_register 7
 3954 0006 7860     		str	r0, [r7, #4]
2337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 3955              		.loc 1 2341 3
 3956 0008 7B68     		ldr	r3, [r7, #4]
 3957 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 3958 000e 012B     		cmp	r3, #1
 3959 0010 01D1     		bne	.L171
 3960              		.loc 1 2341 3 is_stmt 0 discriminator 1
 3961 0012 0223     		movs	r3, #2
 3962 0014 18E0     		b	.L172
 3963              	.L171:
 3964              		.loc 1 2341 3 discriminator 2
 3965 0016 7B68     		ldr	r3, [r7, #4]
 3966 0018 0122     		movs	r2, #1
 3967 001a 83F83820 		strb	r2, [r3, #56]
2342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3968              		.loc 1 2343 17 is_stmt 1 discriminator 2
 3969 001e 7B68     		ldr	r3, [r7, #4]
 3970 0020 2422     		movs	r2, #36
 3971 0022 83F83920 		strb	r2, [r3, #57]
2344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
2346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RWU);
 3972              		.loc 1 2346 3 discriminator 2
 3973 0026 7B68     		ldr	r3, [r7, #4]
 3974 0028 1B68     		ldr	r3, [r3]
 3975 002a DA68     		ldr	r2, [r3, #12]
 3976 002c 7B68     		ldr	r3, [r7, #4]
 3977 002e 1B68     		ldr	r3, [r3]
 3978 0030 42F00202 		orr	r2, r2, #2
 3979 0034 DA60     		str	r2, [r3, #12]
2347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccytgAn2.s 			page 111


2348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3980              		.loc 1 2348 17 discriminator 2
 3981 0036 7B68     		ldr	r3, [r7, #4]
 3982 0038 2022     		movs	r2, #32
 3983 003a 83F83920 		strb	r2, [r3, #57]
2349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 3984              		.loc 1 2351 3 discriminator 2
 3985 003e 7B68     		ldr	r3, [r7, #4]
 3986 0040 0022     		movs	r2, #0
 3987 0042 83F83820 		strb	r2, [r3, #56]
2352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 3988              		.loc 1 2353 10 discriminator 2
 3989 0046 0023     		movs	r3, #0
 3990              	.L172:
2354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3991              		.loc 1 2354 1
 3992 0048 1846     		mov	r0, r3
 3993 004a 0C37     		adds	r7, r7, #12
 3994              	.LCFI178:
 3995              		.cfi_def_cfa_offset 4
 3996 004c BD46     		mov	sp, r7
 3997              	.LCFI179:
 3998              		.cfi_def_cfa_register 13
 3999              		@ sp needed
 4000 004e 5DF8047B 		ldr	r7, [sp], #4
 4001              	.LCFI180:
 4002              		.cfi_restore 7
 4003              		.cfi_def_cfa_offset 0
 4004 0052 7047     		bx	lr
 4005              		.cfi_endproc
 4006              	.LFE162:
 4008              		.section	.text.HAL_MultiProcessor_ExitMuteMode,"ax",%progbits
 4009              		.align	1
 4010              		.global	HAL_MultiProcessor_ExitMuteMode
 4011              		.syntax unified
 4012              		.thumb
 4013              		.thumb_func
 4014              		.fpu fpv4-sp-d16
 4016              	HAL_MultiProcessor_ExitMuteMode:
 4017              	.LFB163:
2355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Exits the UART mute mode: wake up software.
2358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_ExitMuteMode(UART_HandleTypeDef *huart)
2363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4018              		.loc 1 2363 1
 4019              		.cfi_startproc
 4020              		@ args = 0, pretend = 0, frame = 8
 4021              		@ frame_needed = 1, uses_anonymous_args = 0
 4022              		@ link register save eliminated.
ARM GAS  /tmp/ccytgAn2.s 			page 112


 4023 0000 80B4     		push	{r7}
 4024              	.LCFI181:
 4025              		.cfi_def_cfa_offset 4
 4026              		.cfi_offset 7, -4
 4027 0002 83B0     		sub	sp, sp, #12
 4028              	.LCFI182:
 4029              		.cfi_def_cfa_offset 16
 4030 0004 00AF     		add	r7, sp, #0
 4031              	.LCFI183:
 4032              		.cfi_def_cfa_register 7
 4033 0006 7860     		str	r0, [r7, #4]
2364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4034              		.loc 1 2368 3
 4035 0008 7B68     		ldr	r3, [r7, #4]
 4036 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 4037 000e 012B     		cmp	r3, #1
 4038 0010 01D1     		bne	.L174
 4039              		.loc 1 2368 3 is_stmt 0 discriminator 1
 4040 0012 0223     		movs	r3, #2
 4041 0014 18E0     		b	.L175
 4042              	.L174:
 4043              		.loc 1 2368 3 discriminator 2
 4044 0016 7B68     		ldr	r3, [r7, #4]
 4045 0018 0122     		movs	r2, #1
 4046 001a 83F83820 		strb	r2, [r3, #56]
2369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4047              		.loc 1 2370 17 is_stmt 1 discriminator 2
 4048 001e 7B68     		ldr	r3, [r7, #4]
 4049 0020 2422     		movs	r2, #36
 4050 0022 83F83920 		strb	r2, [r3, #57]
2371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
2373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_RWU);
 4051              		.loc 1 2373 3 discriminator 2
 4052 0026 7B68     		ldr	r3, [r7, #4]
 4053 0028 1B68     		ldr	r3, [r3]
 4054 002a DA68     		ldr	r2, [r3, #12]
 4055 002c 7B68     		ldr	r3, [r7, #4]
 4056 002e 1B68     		ldr	r3, [r3]
 4057 0030 22F00202 		bic	r2, r2, #2
 4058 0034 DA60     		str	r2, [r3, #12]
2374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4059              		.loc 1 2375 17 discriminator 2
 4060 0036 7B68     		ldr	r3, [r7, #4]
 4061 0038 2022     		movs	r2, #32
 4062 003a 83F83920 		strb	r2, [r3, #57]
2376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4063              		.loc 1 2378 3 discriminator 2
 4064 003e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccytgAn2.s 			page 113


 4065 0040 0022     		movs	r2, #0
 4066 0042 83F83820 		strb	r2, [r3, #56]
2379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 4067              		.loc 1 2380 10 discriminator 2
 4068 0046 0023     		movs	r3, #0
 4069              	.L175:
2381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4070              		.loc 1 2381 1
 4071 0048 1846     		mov	r0, r3
 4072 004a 0C37     		adds	r7, r7, #12
 4073              	.LCFI184:
 4074              		.cfi_def_cfa_offset 4
 4075 004c BD46     		mov	sp, r7
 4076              	.LCFI185:
 4077              		.cfi_def_cfa_register 13
 4078              		@ sp needed
 4079 004e 5DF8047B 		ldr	r7, [sp], #4
 4080              	.LCFI186:
 4081              		.cfi_restore 7
 4082              		.cfi_def_cfa_offset 0
 4083 0052 7047     		bx	lr
 4084              		.cfi_endproc
 4085              	.LFE163:
 4087              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 4088              		.align	1
 4089              		.global	HAL_HalfDuplex_EnableTransmitter
 4090              		.syntax unified
 4091              		.thumb
 4092              		.thumb_func
 4093              		.fpu fpv4-sp-d16
 4095              	HAL_HalfDuplex_EnableTransmitter:
 4096              	.LFB164:
2382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
2385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4097              		.loc 1 2390 1
 4098              		.cfi_startproc
 4099              		@ args = 0, pretend = 0, frame = 16
 4100              		@ frame_needed = 1, uses_anonymous_args = 0
 4101              		@ link register save eliminated.
 4102 0000 80B4     		push	{r7}
 4103              	.LCFI187:
 4104              		.cfi_def_cfa_offset 4
 4105              		.cfi_offset 7, -4
 4106 0002 85B0     		sub	sp, sp, #20
 4107              	.LCFI188:
 4108              		.cfi_def_cfa_offset 24
 4109 0004 00AF     		add	r7, sp, #0
 4110              	.LCFI189:
 4111              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccytgAn2.s 			page 114


 4112 0006 7860     		str	r0, [r7, #4]
2391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 4113              		.loc 1 2391 12
 4114 0008 0023     		movs	r3, #0
 4115 000a FB60     		str	r3, [r7, #12]
2392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4116              		.loc 1 2394 3
 4117 000c 7B68     		ldr	r3, [r7, #4]
 4118 000e 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 4119 0012 012B     		cmp	r3, #1
 4120 0014 01D1     		bne	.L177
 4121              		.loc 1 2394 3 is_stmt 0 discriminator 1
 4122 0016 0223     		movs	r3, #2
 4123 0018 20E0     		b	.L178
 4124              	.L177:
 4125              		.loc 1 2394 3 discriminator 2
 4126 001a 7B68     		ldr	r3, [r7, #4]
 4127 001c 0122     		movs	r2, #1
 4128 001e 83F83820 		strb	r2, [r3, #56]
2395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4129              		.loc 1 2396 17 is_stmt 1 discriminator 2
 4130 0022 7B68     		ldr	r3, [r7, #4]
 4131 0024 2422     		movs	r2, #36
 4132 0026 83F83920 		strb	r2, [r3, #57]
2397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 4133              		.loc 1 2399 17 discriminator 2
 4134 002a 7B68     		ldr	r3, [r7, #4]
 4135 002c 1B68     		ldr	r3, [r3]
 4136              		.loc 1 2399 10 discriminator 2
 4137 002e DB68     		ldr	r3, [r3, #12]
 4138 0030 FB60     		str	r3, [r7, #12]
2400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
2402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
 4139              		.loc 1 2402 10 discriminator 2
 4140 0032 FB68     		ldr	r3, [r7, #12]
 4141 0034 23F00C03 		bic	r3, r3, #12
 4142 0038 FB60     		str	r3, [r7, #12]
2403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_TE;
 4143              		.loc 1 2405 10 discriminator 2
 4144 003a FB68     		ldr	r3, [r7, #12]
 4145 003c 43F00803 		orr	r3, r3, #8
 4146 0040 FB60     		str	r3, [r7, #12]
2406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
2408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 4147              		.loc 1 2408 3 discriminator 2
 4148 0042 7B68     		ldr	r3, [r7, #4]
 4149 0044 1B68     		ldr	r3, [r3]
 4150 0046 FA68     		ldr	r2, [r7, #12]
ARM GAS  /tmp/ccytgAn2.s 			page 115


 4151 0048 DA60     		str	r2, [r3, #12]
2409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4152              		.loc 1 2410 17 discriminator 2
 4153 004a 7B68     		ldr	r3, [r7, #4]
 4154 004c 2022     		movs	r2, #32
 4155 004e 83F83920 		strb	r2, [r3, #57]
2411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4156              		.loc 1 2413 3 discriminator 2
 4157 0052 7B68     		ldr	r3, [r7, #4]
 4158 0054 0022     		movs	r2, #0
 4159 0056 83F83820 		strb	r2, [r3, #56]
2414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 4160              		.loc 1 2415 10 discriminator 2
 4161 005a 0023     		movs	r3, #0
 4162              	.L178:
2416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4163              		.loc 1 2416 1
 4164 005c 1846     		mov	r0, r3
 4165 005e 1437     		adds	r7, r7, #20
 4166              	.LCFI190:
 4167              		.cfi_def_cfa_offset 4
 4168 0060 BD46     		mov	sp, r7
 4169              	.LCFI191:
 4170              		.cfi_def_cfa_register 13
 4171              		@ sp needed
 4172 0062 5DF8047B 		ldr	r7, [sp], #4
 4173              	.LCFI192:
 4174              		.cfi_restore 7
 4175              		.cfi_def_cfa_offset 0
 4176 0066 7047     		bx	lr
 4177              		.cfi_endproc
 4178              	.LFE164:
 4180              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 4181              		.align	1
 4182              		.global	HAL_HalfDuplex_EnableReceiver
 4183              		.syntax unified
 4184              		.thumb
 4185              		.thumb_func
 4186              		.fpu fpv4-sp-d16
 4188              	HAL_HalfDuplex_EnableReceiver:
 4189              	.LFB165:
2417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
2420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4190              		.loc 1 2425 1
 4191              		.cfi_startproc
 4192              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/ccytgAn2.s 			page 116


 4193              		@ frame_needed = 1, uses_anonymous_args = 0
 4194              		@ link register save eliminated.
 4195 0000 80B4     		push	{r7}
 4196              	.LCFI193:
 4197              		.cfi_def_cfa_offset 4
 4198              		.cfi_offset 7, -4
 4199 0002 85B0     		sub	sp, sp, #20
 4200              	.LCFI194:
 4201              		.cfi_def_cfa_offset 24
 4202 0004 00AF     		add	r7, sp, #0
 4203              	.LCFI195:
 4204              		.cfi_def_cfa_register 7
 4205 0006 7860     		str	r0, [r7, #4]
2426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 4206              		.loc 1 2426 12
 4207 0008 0023     		movs	r3, #0
 4208 000a FB60     		str	r3, [r7, #12]
2427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4209              		.loc 1 2429 3
 4210 000c 7B68     		ldr	r3, [r7, #4]
 4211 000e 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 4212 0012 012B     		cmp	r3, #1
 4213 0014 01D1     		bne	.L180
 4214              		.loc 1 2429 3 is_stmt 0 discriminator 1
 4215 0016 0223     		movs	r3, #2
 4216 0018 20E0     		b	.L181
 4217              	.L180:
 4218              		.loc 1 2429 3 discriminator 2
 4219 001a 7B68     		ldr	r3, [r7, #4]
 4220 001c 0122     		movs	r2, #1
 4221 001e 83F83820 		strb	r2, [r3, #56]
2430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4222              		.loc 1 2431 17 is_stmt 1 discriminator 2
 4223 0022 7B68     		ldr	r3, [r7, #4]
 4224 0024 2422     		movs	r2, #36
 4225 0026 83F83920 		strb	r2, [r3, #57]
2432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 4226              		.loc 1 2434 17 discriminator 2
 4227 002a 7B68     		ldr	r3, [r7, #4]
 4228 002c 1B68     		ldr	r3, [r3]
 4229              		.loc 1 2434 10 discriminator 2
 4230 002e DB68     		ldr	r3, [r3, #12]
 4231 0030 FB60     		str	r3, [r7, #12]
2435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
2437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
 4232              		.loc 1 2437 10 discriminator 2
 4233 0032 FB68     		ldr	r3, [r7, #12]
 4234 0034 23F00C03 		bic	r3, r3, #12
 4235 0038 FB60     		str	r3, [r7, #12]
2438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
ARM GAS  /tmp/ccytgAn2.s 			page 117


2440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_RE;
 4236              		.loc 1 2440 10 discriminator 2
 4237 003a FB68     		ldr	r3, [r7, #12]
 4238 003c 43F00403 		orr	r3, r3, #4
 4239 0040 FB60     		str	r3, [r7, #12]
2441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
2443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 4240              		.loc 1 2443 3 discriminator 2
 4241 0042 7B68     		ldr	r3, [r7, #4]
 4242 0044 1B68     		ldr	r3, [r3]
 4243 0046 FA68     		ldr	r2, [r7, #12]
 4244 0048 DA60     		str	r2, [r3, #12]
2444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4245              		.loc 1 2445 17 discriminator 2
 4246 004a 7B68     		ldr	r3, [r7, #4]
 4247 004c 2022     		movs	r2, #32
 4248 004e 83F83920 		strb	r2, [r3, #57]
2446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4249              		.loc 1 2448 3 discriminator 2
 4250 0052 7B68     		ldr	r3, [r7, #4]
 4251 0054 0022     		movs	r2, #0
 4252 0056 83F83820 		strb	r2, [r3, #56]
2449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 4253              		.loc 1 2450 10 discriminator 2
 4254 005a 0023     		movs	r3, #0
 4255              	.L181:
2451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4256              		.loc 1 2451 1
 4257 005c 1846     		mov	r0, r3
 4258 005e 1437     		adds	r7, r7, #20
 4259              	.LCFI196:
 4260              		.cfi_def_cfa_offset 4
 4261 0060 BD46     		mov	sp, r7
 4262              	.LCFI197:
 4263              		.cfi_def_cfa_register 13
 4264              		@ sp needed
 4265 0062 5DF8047B 		ldr	r7, [sp], #4
 4266              	.LCFI198:
 4267              		.cfi_restore 7
 4268              		.cfi_def_cfa_offset 0
 4269 0066 7047     		bx	lr
 4270              		.cfi_endproc
 4271              	.LFE165:
 4273              		.section	.text.HAL_UART_GetState,"ax",%progbits
 4274              		.align	1
 4275              		.global	HAL_UART_GetState
 4276              		.syntax unified
 4277              		.thumb
 4278              		.thumb_func
 4279              		.fpu fpv4-sp-d16
 4281              	HAL_UART_GetState:
 4282              	.LFB166:
ARM GAS  /tmp/ccytgAn2.s 			page 118


2452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Errors functions
2458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART State and Errors functions
2459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
2460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
2461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                  ##### Peripheral State and Errors functions #####
2463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  [..]
2465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    This subsection provides a set of functions allowing to return the State of
2466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    UART communication process, return Peripheral Errors occurred during communication
2467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    process
2468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetState() API can be helpful to check in run-time the state of the UART peripheral
2469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetError() check in run-time errors that could be occurred during communication.
2470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
2472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Returns the UART state.
2477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL state
2480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4283              		.loc 1 2482 1
 4284              		.cfi_startproc
 4285              		@ args = 0, pretend = 0, frame = 16
 4286              		@ frame_needed = 1, uses_anonymous_args = 0
 4287              		@ link register save eliminated.
 4288 0000 80B4     		push	{r7}
 4289              	.LCFI199:
 4290              		.cfi_def_cfa_offset 4
 4291              		.cfi_offset 7, -4
 4292 0002 85B0     		sub	sp, sp, #20
 4293              	.LCFI200:
 4294              		.cfi_def_cfa_offset 24
 4295 0004 00AF     		add	r7, sp, #0
 4296              	.LCFI201:
 4297              		.cfi_def_cfa_register 7
 4298 0006 7860     		str	r0, [r7, #4]
2483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t temp1 = 0x00U, temp2 = 0x00U;
 4299              		.loc 1 2483 12
 4300 0008 0023     		movs	r3, #0
 4301 000a FB60     		str	r3, [r7, #12]
 4302              		.loc 1 2483 27
 4303 000c 0023     		movs	r3, #0
 4304 000e BB60     		str	r3, [r7, #8]
2484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp1 = huart->gState;
 4305              		.loc 1 2484 16
 4306 0010 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccytgAn2.s 			page 119


 4307 0012 93F83930 		ldrb	r3, [r3, #57]
 4308 0016 DBB2     		uxtb	r3, r3
 4309              		.loc 1 2484 9
 4310 0018 FB60     		str	r3, [r7, #12]
2485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp2 = huart->RxState;
 4311              		.loc 1 2485 16
 4312 001a 7B68     		ldr	r3, [r7, #4]
 4313 001c 93F83A30 		ldrb	r3, [r3, #58]
 4314 0020 DBB2     		uxtb	r3, r3
 4315              		.loc 1 2485 9
 4316 0022 BB60     		str	r3, [r7, #8]
2486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
 4317              		.loc 1 2487 10
 4318 0024 FB68     		ldr	r3, [r7, #12]
 4319 0026 DAB2     		uxtb	r2, r3
 4320 0028 BB68     		ldr	r3, [r7, #8]
 4321 002a DBB2     		uxtb	r3, r3
 4322 002c 1343     		orrs	r3, r3, r2
 4323 002e DBB2     		uxtb	r3, r3
2488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4324              		.loc 1 2488 1
 4325 0030 1846     		mov	r0, r3
 4326 0032 1437     		adds	r7, r7, #20
 4327              	.LCFI202:
 4328              		.cfi_def_cfa_offset 4
 4329 0034 BD46     		mov	sp, r7
 4330              	.LCFI203:
 4331              		.cfi_def_cfa_register 13
 4332              		@ sp needed
 4333 0036 5DF8047B 		ldr	r7, [sp], #4
 4334              	.LCFI204:
 4335              		.cfi_restore 7
 4336              		.cfi_def_cfa_offset 0
 4337 003a 7047     		bx	lr
 4338              		.cfi_endproc
 4339              	.LFE166:
 4341              		.section	.text.HAL_UART_GetError,"ax",%progbits
 4342              		.align	1
 4343              		.global	HAL_UART_GetError
 4344              		.syntax unified
 4345              		.thumb
 4346              		.thumb_func
 4347              		.fpu fpv4-sp-d16
 4349              	HAL_UART_GetError:
 4350              	.LFB167:
2489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Return the UART error code
2492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART.
2494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval UART Error Code
2495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4351              		.loc 1 2497 1
 4352              		.cfi_startproc
ARM GAS  /tmp/ccytgAn2.s 			page 120


 4353              		@ args = 0, pretend = 0, frame = 8
 4354              		@ frame_needed = 1, uses_anonymous_args = 0
 4355              		@ link register save eliminated.
 4356 0000 80B4     		push	{r7}
 4357              	.LCFI205:
 4358              		.cfi_def_cfa_offset 4
 4359              		.cfi_offset 7, -4
 4360 0002 83B0     		sub	sp, sp, #12
 4361              	.LCFI206:
 4362              		.cfi_def_cfa_offset 16
 4363 0004 00AF     		add	r7, sp, #0
 4364              	.LCFI207:
 4365              		.cfi_def_cfa_register 7
 4366 0006 7860     		str	r0, [r7, #4]
2498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return huart->ErrorCode;
 4367              		.loc 1 2498 15
 4368 0008 7B68     		ldr	r3, [r7, #4]
 4369 000a DB6B     		ldr	r3, [r3, #60]
2499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4370              		.loc 1 2499 1
 4371 000c 1846     		mov	r0, r3
 4372 000e 0C37     		adds	r7, r7, #12
 4373              	.LCFI208:
 4374              		.cfi_def_cfa_offset 4
 4375 0010 BD46     		mov	sp, r7
 4376              	.LCFI209:
 4377              		.cfi_def_cfa_register 13
 4378              		@ sp needed
 4379 0012 5DF8047B 		ldr	r7, [sp], #4
 4380              	.LCFI210:
 4381              		.cfi_restore 7
 4382              		.cfi_def_cfa_offset 0
 4383 0016 7047     		bx	lr
 4384              		.cfi_endproc
 4385              	.LFE167:
 4387              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 4388              		.align	1
 4389              		.syntax unified
 4390              		.thumb
 4391              		.thumb_func
 4392              		.fpu fpv4-sp-d16
 4394              	UART_DMATransmitCplt:
 4395              	.LFB168:
2500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
ARM GAS  /tmp/ccytgAn2.s 			page 121


2514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval none
2517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Init the UART Callback settings */
2522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART transmit process complete callback.
2536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4396              		.loc 1 2541 1
 4397              		.cfi_startproc
 4398              		@ args = 0, pretend = 0, frame = 16
 4399              		@ frame_needed = 1, uses_anonymous_args = 0
 4400 0000 80B5     		push	{r7, lr}
 4401              	.LCFI211:
 4402              		.cfi_def_cfa_offset 8
 4403              		.cfi_offset 7, -8
 4404              		.cfi_offset 14, -4
 4405 0002 84B0     		sub	sp, sp, #16
 4406              	.LCFI212:
 4407              		.cfi_def_cfa_offset 24
 4408 0004 00AF     		add	r7, sp, #0
 4409              	.LCFI213:
 4410              		.cfi_def_cfa_register 7
 4411 0006 7860     		str	r0, [r7, #4]
2542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4412              		.loc 1 2542 23
 4413 0008 7B68     		ldr	r3, [r7, #4]
 4414 000a 9B6B     		ldr	r3, [r3, #56]
 4415 000c FB60     		str	r3, [r7, #12]
2543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
2544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 4416              		.loc 1 2544 12
 4417 000e 7B68     		ldr	r3, [r7, #4]
 4418 0010 1B68     		ldr	r3, [r3]
 4419              		.loc 1 2544 22
 4420 0012 1B68     		ldr	r3, [r3]
 4421              		.loc 1 2544 27
ARM GAS  /tmp/ccytgAn2.s 			page 122


 4422 0014 03F48073 		and	r3, r3, #256
 4423              		.loc 1 2544 6
 4424 0018 002B     		cmp	r3, #0
 4425 001a 13D1     		bne	.L187
2545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 4426              		.loc 1 2546 24
 4427 001c FB68     		ldr	r3, [r7, #12]
 4428 001e 0022     		movs	r2, #0
 4429 0020 DA84     		strh	r2, [r3, #38]	@ movhi
2547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
2549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
2550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 4430              		.loc 1 2550 5
 4431 0022 FB68     		ldr	r3, [r7, #12]
 4432 0024 1B68     		ldr	r3, [r3]
 4433 0026 5A69     		ldr	r2, [r3, #20]
 4434 0028 FB68     		ldr	r3, [r7, #12]
 4435 002a 1B68     		ldr	r3, [r3]
 4436 002c 22F08002 		bic	r2, r2, #128
 4437 0030 5A61     		str	r2, [r3, #20]
2551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 4438              		.loc 1 2553 5
 4439 0032 FB68     		ldr	r3, [r7, #12]
 4440 0034 1B68     		ldr	r3, [r3]
 4441 0036 DA68     		ldr	r2, [r3, #12]
 4442 0038 FB68     		ldr	r3, [r7, #12]
 4443 003a 1B68     		ldr	r3, [r3]
 4444 003c 42F04002 		orr	r2, r2, #64
 4445 0040 DA60     		str	r2, [r3, #12]
2554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Circular mode */
2557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Tx complete callback*/
2561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxCpltCallback(huart);
2562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
2564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
2565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4446              		.loc 1 2567 1
 4447 0042 02E0     		b	.L189
 4448              	.L187:
2564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4449              		.loc 1 2564 5
 4450 0044 F868     		ldr	r0, [r7, #12]
 4451 0046 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 4452              	.L189:
 4453              		.loc 1 2567 1
 4454 004a 00BF     		nop
ARM GAS  /tmp/ccytgAn2.s 			page 123


 4455 004c 1037     		adds	r7, r7, #16
 4456              	.LCFI214:
 4457              		.cfi_def_cfa_offset 8
 4458 004e BD46     		mov	sp, r7
 4459              	.LCFI215:
 4460              		.cfi_def_cfa_register 13
 4461              		@ sp needed
 4462 0050 80BD     		pop	{r7, pc}
 4463              		.cfi_endproc
 4464              	.LFE168:
 4466              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 4467              		.align	1
 4468              		.syntax unified
 4469              		.thumb
 4470              		.thumb_func
 4471              		.fpu fpv4-sp-d16
 4473              	UART_DMATxHalfCplt:
 4474              	.LFB169:
2568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback
2571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4475              		.loc 1 2576 1
 4476              		.cfi_startproc
 4477              		@ args = 0, pretend = 0, frame = 16
 4478              		@ frame_needed = 1, uses_anonymous_args = 0
 4479 0000 80B5     		push	{r7, lr}
 4480              	.LCFI216:
 4481              		.cfi_def_cfa_offset 8
 4482              		.cfi_offset 7, -8
 4483              		.cfi_offset 14, -4
 4484 0002 84B0     		sub	sp, sp, #16
 4485              	.LCFI217:
 4486              		.cfi_def_cfa_offset 24
 4487 0004 00AF     		add	r7, sp, #0
 4488              	.LCFI218:
 4489              		.cfi_def_cfa_register 7
 4490 0006 7860     		str	r0, [r7, #4]
2577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4491              		.loc 1 2577 23
 4492 0008 7B68     		ldr	r3, [r7, #4]
 4493 000a 9B6B     		ldr	r3, [r3, #56]
 4494 000c FB60     		str	r3, [r7, #12]
2578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
2581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
2582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
2584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 4495              		.loc 1 2584 3
 4496 000e F868     		ldr	r0, [r7, #12]
ARM GAS  /tmp/ccytgAn2.s 			page 124


 4497 0010 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
2585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4498              		.loc 1 2586 1
 4499 0014 00BF     		nop
 4500 0016 1037     		adds	r7, r7, #16
 4501              	.LCFI219:
 4502              		.cfi_def_cfa_offset 8
 4503 0018 BD46     		mov	sp, r7
 4504              	.LCFI220:
 4505              		.cfi_def_cfa_register 13
 4506              		@ sp needed
 4507 001a 80BD     		pop	{r7, pc}
 4508              		.cfi_endproc
 4509              	.LFE169:
 4511              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 4512              		.align	1
 4513              		.syntax unified
 4514              		.thumb
 4515              		.thumb_func
 4516              		.fpu fpv4-sp-d16
 4518              	UART_DMAReceiveCplt:
 4519              	.LFB170:
2587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART receive process complete callback.
2590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4520              		.loc 1 2595 1
 4521              		.cfi_startproc
 4522              		@ args = 0, pretend = 0, frame = 16
 4523              		@ frame_needed = 1, uses_anonymous_args = 0
 4524 0000 80B5     		push	{r7, lr}
 4525              	.LCFI221:
 4526              		.cfi_def_cfa_offset 8
 4527              		.cfi_offset 7, -8
 4528              		.cfi_offset 14, -4
 4529 0002 84B0     		sub	sp, sp, #16
 4530              	.LCFI222:
 4531              		.cfi_def_cfa_offset 24
 4532 0004 00AF     		add	r7, sp, #0
 4533              	.LCFI223:
 4534              		.cfi_def_cfa_register 7
 4535 0006 7860     		str	r0, [r7, #4]
2596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4536              		.loc 1 2596 23
 4537 0008 7B68     		ldr	r3, [r7, #4]
 4538 000a 9B6B     		ldr	r3, [r3, #56]
 4539 000c FB60     		str	r3, [r7, #12]
2597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
2598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 4540              		.loc 1 2598 12
 4541 000e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccytgAn2.s 			page 125


 4542 0010 1B68     		ldr	r3, [r3]
 4543              		.loc 1 2598 22
 4544 0012 1B68     		ldr	r3, [r3]
 4545              		.loc 1 2598 27
 4546 0014 03F48073 		and	r3, r3, #256
 4547              		.loc 1 2598 6
 4548 0018 002B     		cmp	r3, #0
 4549 001a 1ED1     		bne	.L192
2599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 4550              		.loc 1 2600 24
 4551 001c FB68     		ldr	r3, [r7, #12]
 4552 001e 0022     		movs	r2, #0
 4553 0020 DA85     		strh	r2, [r3, #46]	@ movhi
2601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 4554              		.loc 1 2603 5
 4555 0022 FB68     		ldr	r3, [r7, #12]
 4556 0024 1B68     		ldr	r3, [r3]
 4557 0026 DA68     		ldr	r2, [r3, #12]
 4558 0028 FB68     		ldr	r3, [r7, #12]
 4559 002a 1B68     		ldr	r3, [r3]
 4560 002c 22F48072 		bic	r2, r2, #256
 4561 0030 DA60     		str	r2, [r3, #12]
2604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4562              		.loc 1 2604 5
 4563 0032 FB68     		ldr	r3, [r7, #12]
 4564 0034 1B68     		ldr	r3, [r3]
 4565 0036 5A69     		ldr	r2, [r3, #20]
 4566 0038 FB68     		ldr	r3, [r7, #12]
 4567 003a 1B68     		ldr	r3, [r3]
 4568 003c 22F00102 		bic	r2, r2, #1
 4569 0040 5A61     		str	r2, [r3, #20]
2605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit
2607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
2608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 4570              		.loc 1 2608 5
 4571 0042 FB68     		ldr	r3, [r7, #12]
 4572 0044 1B68     		ldr	r3, [r3]
 4573 0046 5A69     		ldr	r2, [r3, #20]
 4574 0048 FB68     		ldr	r3, [r7, #12]
 4575 004a 1B68     		ldr	r3, [r3]
 4576 004c 22F04002 		bic	r2, r2, #64
 4577 0050 5A61     		str	r2, [r3, #20]
2609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 4578              		.loc 1 2611 20
 4579 0052 FB68     		ldr	r3, [r7, #12]
 4580 0054 2022     		movs	r2, #32
 4581 0056 83F83A20 		strb	r2, [r3, #58]
 4582              	.L192:
2612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Rx complete callback*/
ARM GAS  /tmp/ccytgAn2.s 			page 126


2615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxCpltCallback(huart);
2616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Rx complete callback*/
2618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 4583              		.loc 1 2618 3
 4584 005a F868     		ldr	r0, [r7, #12]
 4585 005c FFF7FEFF 		bl	HAL_UART_RxCpltCallback
2619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4586              		.loc 1 2620 1
 4587 0060 00BF     		nop
 4588 0062 1037     		adds	r7, r7, #16
 4589              	.LCFI224:
 4590              		.cfi_def_cfa_offset 8
 4591 0064 BD46     		mov	sp, r7
 4592              	.LCFI225:
 4593              		.cfi_def_cfa_register 13
 4594              		@ sp needed
 4595 0066 80BD     		pop	{r7, pc}
 4596              		.cfi_endproc
 4597              	.LFE170:
 4599              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 4600              		.align	1
 4601              		.syntax unified
 4602              		.thumb
 4603              		.thumb_func
 4604              		.fpu fpv4-sp-d16
 4606              	UART_DMARxHalfCplt:
 4607              	.LFB171:
2621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback
2624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4608              		.loc 1 2629 1
 4609              		.cfi_startproc
 4610              		@ args = 0, pretend = 0, frame = 16
 4611              		@ frame_needed = 1, uses_anonymous_args = 0
 4612 0000 80B5     		push	{r7, lr}
 4613              	.LCFI226:
 4614              		.cfi_def_cfa_offset 8
 4615              		.cfi_offset 7, -8
 4616              		.cfi_offset 14, -4
 4617 0002 84B0     		sub	sp, sp, #16
 4618              	.LCFI227:
 4619              		.cfi_def_cfa_offset 24
 4620 0004 00AF     		add	r7, sp, #0
 4621              	.LCFI228:
 4622              		.cfi_def_cfa_register 7
 4623 0006 7860     		str	r0, [r7, #4]
2630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4624              		.loc 1 2630 23
 4625 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccytgAn2.s 			page 127


 4626 000a 9B6B     		ldr	r3, [r3, #56]
 4627 000c FB60     		str	r3, [r7, #12]
2631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Rx Half complete callback*/
2634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxHalfCpltCallback(huart);
2635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Rx Half complete callback*/
2637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
 4628              		.loc 1 2637 3
 4629 000e F868     		ldr	r0, [r7, #12]
 4630 0010 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
2638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4631              		.loc 1 2639 1
 4632 0014 00BF     		nop
 4633 0016 1037     		adds	r7, r7, #16
 4634              	.LCFI229:
 4635              		.cfi_def_cfa_offset 8
 4636 0018 BD46     		mov	sp, r7
 4637              	.LCFI230:
 4638              		.cfi_def_cfa_register 13
 4639              		@ sp needed
 4640 001a 80BD     		pop	{r7, pc}
 4641              		.cfi_endproc
 4642              	.LFE171:
 4644              		.section	.text.UART_DMAError,"ax",%progbits
 4645              		.align	1
 4646              		.syntax unified
 4647              		.thumb
 4648              		.thumb_func
 4649              		.fpu fpv4-sp-d16
 4651              	UART_DMAError:
 4652              	.LFB172:
2640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication error callback.
2643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4653              		.loc 1 2648 1
 4654              		.cfi_startproc
 4655              		@ args = 0, pretend = 0, frame = 16
 4656              		@ frame_needed = 1, uses_anonymous_args = 0
 4657 0000 80B5     		push	{r7, lr}
 4658              	.LCFI231:
 4659              		.cfi_def_cfa_offset 8
 4660              		.cfi_offset 7, -8
 4661              		.cfi_offset 14, -4
 4662 0002 84B0     		sub	sp, sp, #16
 4663              	.LCFI232:
 4664              		.cfi_def_cfa_offset 24
 4665 0004 00AF     		add	r7, sp, #0
 4666              	.LCFI233:
ARM GAS  /tmp/ccytgAn2.s 			page 128


 4667              		.cfi_def_cfa_register 7
 4668 0006 7860     		str	r0, [r7, #4]
2649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 4669              		.loc 1 2649 12
 4670 0008 0023     		movs	r3, #0
 4671 000a FB60     		str	r3, [r7, #12]
2650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4672              		.loc 1 2650 23
 4673 000c 7B68     		ldr	r3, [r7, #4]
 4674 000e 9B6B     		ldr	r3, [r3, #56]
 4675 0010 BB60     		str	r3, [r7, #8]
2651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 4676              		.loc 1 2653 16
 4677 0012 BB68     		ldr	r3, [r7, #8]
 4678 0014 1B68     		ldr	r3, [r3]
 4679 0016 5B69     		ldr	r3, [r3, #20]
 4680 0018 03F08003 		and	r3, r3, #128
 4681 001c 802B     		cmp	r3, #128
 4682 001e 0CBF     		ite	eq
 4683 0020 0123     		moveq	r3, #1
 4684 0022 0023     		movne	r3, #0
 4685 0024 DBB2     		uxtb	r3, r3
 4686              		.loc 1 2653 14
 4687 0026 FB60     		str	r3, [r7, #12]
2654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 4688              		.loc 1 2654 13
 4689 0028 BB68     		ldr	r3, [r7, #8]
 4690 002a 93F83930 		ldrb	r3, [r3, #57]
 4691 002e DBB2     		uxtb	r3, r3
 4692              		.loc 1 2654 6
 4693 0030 212B     		cmp	r3, #33
 4694 0032 08D1     		bne	.L195
 4695              		.loc 1 2654 49 discriminator 1
 4696 0034 FB68     		ldr	r3, [r7, #12]
 4697 0036 002B     		cmp	r3, #0
 4698 0038 05D0     		beq	.L195
2655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 4699              		.loc 1 2656 24
 4700 003a BB68     		ldr	r3, [r7, #8]
 4701 003c 0022     		movs	r2, #0
 4702 003e DA84     		strh	r2, [r3, #38]	@ movhi
2657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 4703              		.loc 1 2657 5
 4704 0040 B868     		ldr	r0, [r7, #8]
 4705 0042 FFF7FEFF 		bl	UART_EndTxTransfer
 4706              	.L195:
2658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 4707              		.loc 1 2661 16
 4708 0046 BB68     		ldr	r3, [r7, #8]
 4709 0048 1B68     		ldr	r3, [r3]
 4710 004a 5B69     		ldr	r3, [r3, #20]
ARM GAS  /tmp/ccytgAn2.s 			page 129


 4711 004c 03F04003 		and	r3, r3, #64
 4712 0050 402B     		cmp	r3, #64
 4713 0052 0CBF     		ite	eq
 4714 0054 0123     		moveq	r3, #1
 4715 0056 0023     		movne	r3, #0
 4716 0058 DBB2     		uxtb	r3, r3
 4717              		.loc 1 2661 14
 4718 005a FB60     		str	r3, [r7, #12]
2662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 4719              		.loc 1 2662 13
 4720 005c BB68     		ldr	r3, [r7, #8]
 4721 005e 93F83A30 		ldrb	r3, [r3, #58]
 4722 0062 DBB2     		uxtb	r3, r3
 4723              		.loc 1 2662 6
 4724 0064 222B     		cmp	r3, #34
 4725 0066 08D1     		bne	.L196
 4726              		.loc 1 2662 50 discriminator 1
 4727 0068 FB68     		ldr	r3, [r7, #12]
 4728 006a 002B     		cmp	r3, #0
 4729 006c 05D0     		beq	.L196
2663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 4730              		.loc 1 2664 24
 4731 006e BB68     		ldr	r3, [r7, #8]
 4732 0070 0022     		movs	r2, #0
 4733 0072 DA85     		strh	r2, [r3, #46]	@ movhi
2665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 4734              		.loc 1 2665 5
 4735 0074 B868     		ldr	r0, [r7, #8]
 4736 0076 FFF7FEFF 		bl	UART_EndRxTransfer
 4737              	.L196:
2666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 4738              		.loc 1 2668 20
 4739 007a BB68     		ldr	r3, [r7, #8]
 4740 007c DB6B     		ldr	r3, [r3, #60]
 4741 007e 43F01002 		orr	r2, r3, #16
 4742 0082 BB68     		ldr	r3, [r7, #8]
 4743 0084 DA63     		str	r2, [r3, #60]
2669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered error callback*/
2671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback(huart);
2672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak error callback*/
2674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 4744              		.loc 1 2674 3
 4745 0086 B868     		ldr	r0, [r7, #8]
 4746 0088 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4747              		.loc 1 2676 1
 4748 008c 00BF     		nop
 4749 008e 1037     		adds	r7, r7, #16
 4750              	.LCFI234:
 4751              		.cfi_def_cfa_offset 8
 4752 0090 BD46     		mov	sp, r7
ARM GAS  /tmp/ccytgAn2.s 			page 130


 4753              	.LCFI235:
 4754              		.cfi_def_cfa_register 13
 4755              		@ sp needed
 4756 0092 80BD     		pop	{r7, pc}
 4757              		.cfi_endproc
 4758              	.LFE172:
 4760              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 4761              		.align	1
 4762              		.syntax unified
 4763              		.thumb
 4764              		.thumb_func
 4765              		.fpu fpv4-sp-d16
 4767              	UART_WaitOnFlagUntilTimeout:
 4768              	.LFB173:
2677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
2680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Flag specifies the UART flag to check.
2683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Status The new Flag status (SET or RESET).
2684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Tickstart Tick start value
2685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
2686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
2689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4769              		.loc 1 2689 1
 4770              		.cfi_startproc
 4771              		@ args = 4, pretend = 0, frame = 16
 4772              		@ frame_needed = 1, uses_anonymous_args = 0
 4773 0000 80B5     		push	{r7, lr}
 4774              	.LCFI236:
 4775              		.cfi_def_cfa_offset 8
 4776              		.cfi_offset 7, -8
 4777              		.cfi_offset 14, -4
 4778 0002 84B0     		sub	sp, sp, #16
 4779              	.LCFI237:
 4780              		.cfi_def_cfa_offset 24
 4781 0004 00AF     		add	r7, sp, #0
 4782              	.LCFI238:
 4783              		.cfi_def_cfa_register 7
 4784 0006 F860     		str	r0, [r7, #12]
 4785 0008 B960     		str	r1, [r7, #8]
 4786 000a 3B60     		str	r3, [r7]
 4787 000c 1346     		mov	r3, r2
 4788 000e FB71     		strb	r3, [r7, #7]
2690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Wait until flag is set */
2691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 4789              		.loc 1 2691 9
 4790 0010 2CE0     		b	.L198
 4791              	.L201:
2692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check for the Timeout */
2694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
 4792              		.loc 1 2694 8
 4793 0012 BB69     		ldr	r3, [r7, #24]
ARM GAS  /tmp/ccytgAn2.s 			page 131


 4794 0014 B3F1FF3F 		cmp	r3, #-1
 4795 0018 28D0     		beq	.L198
2695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 4796              		.loc 1 2696 10
 4797 001a BB69     		ldr	r3, [r7, #24]
 4798 001c 002B     		cmp	r3, #0
 4799 001e 07D0     		beq	.L199
 4800              		.loc 1 2696 32 discriminator 1
 4801 0020 FFF7FEFF 		bl	HAL_GetTick
 4802 0024 0246     		mov	r2, r0
 4803              		.loc 1 2696 46 discriminator 1
 4804 0026 3B68     		ldr	r3, [r7]
 4805 0028 D31A     		subs	r3, r2, r3
 4806              		.loc 1 2696 27 discriminator 1
 4807 002a BA69     		ldr	r2, [r7, #24]
 4808 002c 9A42     		cmp	r2, r3
 4809 002e 1DD2     		bcs	.L198
 4810              	.L199:
2697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 4811              		.loc 1 2699 9
 4812 0030 FB68     		ldr	r3, [r7, #12]
 4813 0032 1B68     		ldr	r3, [r3]
 4814 0034 DA68     		ldr	r2, [r3, #12]
 4815 0036 FB68     		ldr	r3, [r7, #12]
 4816 0038 1B68     		ldr	r3, [r3]
 4817 003a 22F4D072 		bic	r2, r2, #416
 4818 003e DA60     		str	r2, [r3, #12]
2700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4819              		.loc 1 2700 9
 4820 0040 FB68     		ldr	r3, [r7, #12]
 4821 0042 1B68     		ldr	r3, [r3]
 4822 0044 5A69     		ldr	r2, [r3, #20]
 4823 0046 FB68     		ldr	r3, [r7, #12]
 4824 0048 1B68     		ldr	r3, [r3]
 4825 004a 22F00102 		bic	r2, r2, #1
 4826 004e 5A61     		str	r2, [r3, #20]
2701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
 4827              		.loc 1 2702 24
 4828 0050 FB68     		ldr	r3, [r7, #12]
 4829 0052 2022     		movs	r2, #32
 4830 0054 83F83920 		strb	r2, [r3, #57]
2703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 4831              		.loc 1 2703 24
 4832 0058 FB68     		ldr	r3, [r7, #12]
 4833 005a 2022     		movs	r2, #32
 4834 005c 83F83A20 		strb	r2, [r3, #58]
2704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Process Unlocked */
2706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 4835              		.loc 1 2706 9
 4836 0060 FB68     		ldr	r3, [r7, #12]
 4837 0062 0022     		movs	r2, #0
 4838 0064 83F83820 		strb	r2, [r3, #56]
ARM GAS  /tmp/ccytgAn2.s 			page 132


2707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         return HAL_TIMEOUT;
 4839              		.loc 1 2708 16
 4840 0068 0323     		movs	r3, #3
 4841 006a 0FE0     		b	.L200
 4842              	.L198:
2691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4843              		.loc 1 2691 11
 4844 006c FB68     		ldr	r3, [r7, #12]
 4845 006e 1B68     		ldr	r3, [r3]
 4846 0070 1A68     		ldr	r2, [r3]
 4847 0072 BB68     		ldr	r3, [r7, #8]
 4848 0074 1340     		ands	r3, r3, r2
2691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4849              		.loc 1 2691 50
 4850 0076 BA68     		ldr	r2, [r7, #8]
 4851 0078 9A42     		cmp	r2, r3
 4852 007a 0CBF     		ite	eq
 4853 007c 0123     		moveq	r3, #1
 4854 007e 0023     		movne	r3, #0
 4855 0080 DBB2     		uxtb	r3, r3
 4856 0082 1A46     		mov	r2, r3
2691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4857              		.loc 1 2691 59
 4858 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
2691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4859              		.loc 1 2691 9
 4860 0086 9A42     		cmp	r2, r3
 4861 0088 C3D0     		beq	.L201
2709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 4862              		.loc 1 2712 10
 4863 008a 0023     		movs	r3, #0
 4864              	.L200:
2713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4865              		.loc 1 2713 1
 4866 008c 1846     		mov	r0, r3
 4867 008e 1037     		adds	r7, r7, #16
 4868              	.LCFI239:
 4869              		.cfi_def_cfa_offset 8
 4870 0090 BD46     		mov	sp, r7
 4871              	.LCFI240:
 4872              		.cfi_def_cfa_register 13
 4873              		@ sp needed
 4874 0092 80BD     		pop	{r7, pc}
 4875              		.cfi_endproc
 4876              	.LFE173:
 4878              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 4879              		.align	1
 4880              		.syntax unified
 4881              		.thumb
 4882              		.thumb_func
 4883              		.fpu fpv4-sp-d16
 4885              	UART_EndTxTransfer:
 4886              	.LFB174:
ARM GAS  /tmp/ccytgAn2.s 			page 133


2714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4887              		.loc 1 2721 1
 4888              		.cfi_startproc
 4889              		@ args = 0, pretend = 0, frame = 8
 4890              		@ frame_needed = 1, uses_anonymous_args = 0
 4891              		@ link register save eliminated.
 4892 0000 80B4     		push	{r7}
 4893              	.LCFI241:
 4894              		.cfi_def_cfa_offset 4
 4895              		.cfi_offset 7, -4
 4896 0002 83B0     		sub	sp, sp, #12
 4897              	.LCFI242:
 4898              		.cfi_def_cfa_offset 16
 4899 0004 00AF     		add	r7, sp, #0
 4900              	.LCFI243:
 4901              		.cfi_def_cfa_register 7
 4902 0006 7860     		str	r0, [r7, #4]
2722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 4903              		.loc 1 2723 3
 4904 0008 7B68     		ldr	r3, [r7, #4]
 4905 000a 1B68     		ldr	r3, [r3]
 4906 000c DA68     		ldr	r2, [r3, #12]
 4907 000e 7B68     		ldr	r3, [r7, #4]
 4908 0010 1B68     		ldr	r3, [r3]
 4909 0012 22F0C002 		bic	r2, r2, #192
 4910 0016 DA60     		str	r2, [r3, #12]
2724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4911              		.loc 1 2726 17
 4912 0018 7B68     		ldr	r3, [r7, #4]
 4913 001a 2022     		movs	r2, #32
 4914 001c 83F83920 		strb	r2, [r3, #57]
2727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4915              		.loc 1 2727 1
 4916 0020 00BF     		nop
 4917 0022 0C37     		adds	r7, r7, #12
 4918              	.LCFI244:
 4919              		.cfi_def_cfa_offset 4
 4920 0024 BD46     		mov	sp, r7
 4921              	.LCFI245:
 4922              		.cfi_def_cfa_register 13
 4923              		@ sp needed
 4924 0026 5DF8047B 		ldr	r7, [sp], #4
 4925              	.LCFI246:
 4926              		.cfi_restore 7
 4927              		.cfi_def_cfa_offset 0
 4928 002a 7047     		bx	lr
 4929              		.cfi_endproc
ARM GAS  /tmp/ccytgAn2.s 			page 134


 4930              	.LFE174:
 4932              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 4933              		.align	1
 4934              		.syntax unified
 4935              		.thumb
 4936              		.thumb_func
 4937              		.fpu fpv4-sp-d16
 4939              	UART_EndRxTransfer:
 4940              	.LFB175:
2728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4941              		.loc 1 2735 1
 4942              		.cfi_startproc
 4943              		@ args = 0, pretend = 0, frame = 8
 4944              		@ frame_needed = 1, uses_anonymous_args = 0
 4945              		@ link register save eliminated.
 4946 0000 80B4     		push	{r7}
 4947              	.LCFI247:
 4948              		.cfi_def_cfa_offset 4
 4949              		.cfi_offset 7, -4
 4950 0002 83B0     		sub	sp, sp, #12
 4951              	.LCFI248:
 4952              		.cfi_def_cfa_offset 16
 4953 0004 00AF     		add	r7, sp, #0
 4954              	.LCFI249:
 4955              		.cfi_def_cfa_register 7
 4956 0006 7860     		str	r0, [r7, #4]
2736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 4957              		.loc 1 2737 3
 4958 0008 7B68     		ldr	r3, [r7, #4]
 4959 000a 1B68     		ldr	r3, [r3]
 4960 000c DA68     		ldr	r2, [r3, #12]
 4961 000e 7B68     		ldr	r3, [r7, #4]
 4962 0010 1B68     		ldr	r3, [r3]
 4963 0012 22F49072 		bic	r2, r2, #288
 4964 0016 DA60     		str	r2, [r3, #12]
2738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4965              		.loc 1 2738 3
 4966 0018 7B68     		ldr	r3, [r7, #4]
 4967 001a 1B68     		ldr	r3, [r3]
 4968 001c 5A69     		ldr	r2, [r3, #20]
 4969 001e 7B68     		ldr	r3, [r7, #4]
 4970 0020 1B68     		ldr	r3, [r3]
 4971 0022 22F00102 		bic	r2, r2, #1
 4972 0026 5A61     		str	r2, [r3, #20]
2739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4973              		.loc 1 2741 18
 4974 0028 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccytgAn2.s 			page 135


 4975 002a 2022     		movs	r2, #32
 4976 002c 83F83A20 		strb	r2, [r3, #58]
2742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4977              		.loc 1 2742 1
 4978 0030 00BF     		nop
 4979 0032 0C37     		adds	r7, r7, #12
 4980              	.LCFI250:
 4981              		.cfi_def_cfa_offset 4
 4982 0034 BD46     		mov	sp, r7
 4983              	.LCFI251:
 4984              		.cfi_def_cfa_register 13
 4985              		@ sp needed
 4986 0036 5DF8047B 		ldr	r7, [sp], #4
 4987              	.LCFI252:
 4988              		.cfi_restore 7
 4989              		.cfi_def_cfa_offset 0
 4990 003a 7047     		bx	lr
 4991              		.cfi_endproc
 4992              	.LFE175:
 4994              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 4995              		.align	1
 4996              		.syntax unified
 4997              		.thumb
 4998              		.thumb_func
 4999              		.fpu fpv4-sp-d16
 5001              	UART_DMAAbortOnError:
 5002              	.LFB176:
2743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5003              		.loc 1 2752 1
 5004              		.cfi_startproc
 5005              		@ args = 0, pretend = 0, frame = 16
 5006              		@ frame_needed = 1, uses_anonymous_args = 0
 5007 0000 80B5     		push	{r7, lr}
 5008              	.LCFI253:
 5009              		.cfi_def_cfa_offset 8
 5010              		.cfi_offset 7, -8
 5011              		.cfi_offset 14, -4
 5012 0002 84B0     		sub	sp, sp, #16
 5013              	.LCFI254:
 5014              		.cfi_def_cfa_offset 24
 5015 0004 00AF     		add	r7, sp, #0
 5016              	.LCFI255:
 5017              		.cfi_def_cfa_register 7
 5018 0006 7860     		str	r0, [r7, #4]
2753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5019              		.loc 1 2753 23
 5020 0008 7B68     		ldr	r3, [r7, #4]
 5021 000a 9B6B     		ldr	r3, [r3, #56]
ARM GAS  /tmp/ccytgAn2.s 			page 136


 5022 000c FB60     		str	r3, [r7, #12]
2754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 5023              		.loc 1 2754 22
 5024 000e FB68     		ldr	r3, [r7, #12]
 5025 0010 0022     		movs	r2, #0
 5026 0012 DA85     		strh	r2, [r3, #46]	@ movhi
2755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 5027              		.loc 1 2755 22
 5028 0014 FB68     		ldr	r3, [r7, #12]
 5029 0016 0022     		movs	r2, #0
 5030 0018 DA84     		strh	r2, [r3, #38]	@ movhi
2756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered error callback*/
2759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback(huart);
2760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak error callback*/
2762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 5031              		.loc 1 2762 3
 5032 001a F868     		ldr	r0, [r7, #12]
 5033 001c FFF7FEFF 		bl	HAL_UART_ErrorCallback
2763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5034              		.loc 1 2764 1
 5035 0020 00BF     		nop
 5036 0022 1037     		adds	r7, r7, #16
 5037              	.LCFI256:
 5038              		.cfi_def_cfa_offset 8
 5039 0024 BD46     		mov	sp, r7
 5040              	.LCFI257:
 5041              		.cfi_def_cfa_register 13
 5042              		@ sp needed
 5043 0026 80BD     		pop	{r7, pc}
 5044              		.cfi_endproc
 5045              	.LFE176:
 5047              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 5048              		.align	1
 5049              		.syntax unified
 5050              		.thumb
 5051              		.thumb_func
 5052              		.fpu fpv4-sp-d16
 5054              	UART_DMATxAbortCallback:
 5055              	.LFB177:
2765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5056              		.loc 1 2776 1
 5057              		.cfi_startproc
ARM GAS  /tmp/ccytgAn2.s 			page 137


 5058              		@ args = 0, pretend = 0, frame = 16
 5059              		@ frame_needed = 1, uses_anonymous_args = 0
 5060 0000 80B5     		push	{r7, lr}
 5061              	.LCFI258:
 5062              		.cfi_def_cfa_offset 8
 5063              		.cfi_offset 7, -8
 5064              		.cfi_offset 14, -4
 5065 0002 84B0     		sub	sp, sp, #16
 5066              	.LCFI259:
 5067              		.cfi_def_cfa_offset 24
 5068 0004 00AF     		add	r7, sp, #0
 5069              	.LCFI260:
 5070              		.cfi_def_cfa_register 7
 5071 0006 7860     		str	r0, [r7, #4]
2777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5072              		.loc 1 2777 23
 5073 0008 7B68     		ldr	r3, [r7, #4]
 5074 000a 9B6B     		ldr	r3, [r3, #56]
 5075 000c FB60     		str	r3, [r7, #12]
2778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
 5076              		.loc 1 2779 8
 5077 000e FB68     		ldr	r3, [r7, #12]
 5078 0010 1B6B     		ldr	r3, [r3, #48]
 5079              		.loc 1 2779 36
 5080 0012 0022     		movs	r2, #0
 5081 0014 1A65     		str	r2, [r3, #80]
2780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 5082              		.loc 1 2782 12
 5083 0016 FB68     		ldr	r3, [r7, #12]
 5084 0018 5B6B     		ldr	r3, [r3, #52]
 5085              		.loc 1 2782 6
 5086 001a 002B     		cmp	r3, #0
 5087 001c 04D0     		beq	.L206
2783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
 5088              		.loc 1 2784 14
 5089 001e FB68     		ldr	r3, [r7, #12]
 5090 0020 5B6B     		ldr	r3, [r3, #52]
 5091              		.loc 1 2784 22
 5092 0022 1B6D     		ldr	r3, [r3, #80]
 5093              		.loc 1 2784 8
 5094 0024 002B     		cmp	r3, #0
 5095 0026 14D1     		bne	.L208
 5096              	.L206:
2785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
2787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 5097              		.loc 1 2791 22
 5098 0028 FB68     		ldr	r3, [r7, #12]
 5099 002a 0022     		movs	r2, #0
ARM GAS  /tmp/ccytgAn2.s 			page 138


 5100 002c DA84     		strh	r2, [r3, #38]	@ movhi
2792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 5101              		.loc 1 2792 22
 5102 002e FB68     		ldr	r3, [r7, #12]
 5103 0030 0022     		movs	r2, #0
 5104 0032 DA85     		strh	r2, [r3, #46]	@ movhi
2793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
2795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 5105              		.loc 1 2795 20
 5106 0034 FB68     		ldr	r3, [r7, #12]
 5107 0036 0022     		movs	r2, #0
 5108 0038 DA63     		str	r2, [r3, #60]
2796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 5109              		.loc 1 2798 18
 5110 003a FB68     		ldr	r3, [r7, #12]
 5111 003c 2022     		movs	r2, #32
 5112 003e 83F83920 		strb	r2, [r3, #57]
2799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5113              		.loc 1 2799 18
 5114 0042 FB68     		ldr	r3, [r7, #12]
 5115 0044 2022     		movs	r2, #32
 5116 0046 83F83A20 		strb	r2, [r3, #58]
2800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort complete callback */
2804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
2805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
2807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 5117              		.loc 1 2807 3
 5118 004a F868     		ldr	r0, [r7, #12]
 5119 004c FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 5120 0050 00E0     		b	.L205
 5121              	.L208:
2786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 5122              		.loc 1 2786 7
 5123 0052 00BF     		nop
 5124              	.L205:
2808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5125              		.loc 1 2809 1
 5126 0054 1037     		adds	r7, r7, #16
 5127              	.LCFI261:
 5128              		.cfi_def_cfa_offset 8
 5129 0056 BD46     		mov	sp, r7
 5130              	.LCFI262:
 5131              		.cfi_def_cfa_register 13
 5132              		@ sp needed
 5133 0058 80BD     		pop	{r7, pc}
 5134              		.cfi_endproc
 5135              	.LFE177:
 5137              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 5138              		.align	1
ARM GAS  /tmp/ccytgAn2.s 			page 139


 5139              		.syntax unified
 5140              		.thumb
 5141              		.thumb_func
 5142              		.fpu fpv4-sp-d16
 5144              	UART_DMARxAbortCallback:
 5145              	.LFB178:
2810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5146              		.loc 1 2821 1
 5147              		.cfi_startproc
 5148              		@ args = 0, pretend = 0, frame = 16
 5149              		@ frame_needed = 1, uses_anonymous_args = 0
 5150 0000 80B5     		push	{r7, lr}
 5151              	.LCFI263:
 5152              		.cfi_def_cfa_offset 8
 5153              		.cfi_offset 7, -8
 5154              		.cfi_offset 14, -4
 5155 0002 84B0     		sub	sp, sp, #16
 5156              	.LCFI264:
 5157              		.cfi_def_cfa_offset 24
 5158 0004 00AF     		add	r7, sp, #0
 5159              	.LCFI265:
 5160              		.cfi_def_cfa_register 7
 5161 0006 7860     		str	r0, [r7, #4]
2822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5162              		.loc 1 2822 23
 5163 0008 7B68     		ldr	r3, [r7, #4]
 5164 000a 9B6B     		ldr	r3, [r3, #56]
 5165 000c FB60     		str	r3, [r7, #12]
2823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 5166              		.loc 1 2824 8
 5167 000e FB68     		ldr	r3, [r7, #12]
 5168 0010 5B6B     		ldr	r3, [r3, #52]
 5169              		.loc 1 2824 36
 5170 0012 0022     		movs	r2, #0
 5171 0014 1A65     		str	r2, [r3, #80]
2825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 5172              		.loc 1 2827 12
 5173 0016 FB68     		ldr	r3, [r7, #12]
 5174 0018 1B6B     		ldr	r3, [r3, #48]
 5175              		.loc 1 2827 6
 5176 001a 002B     		cmp	r3, #0
 5177 001c 04D0     		beq	.L210
2828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
ARM GAS  /tmp/ccytgAn2.s 			page 140


2829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
 5178              		.loc 1 2829 14
 5179 001e FB68     		ldr	r3, [r7, #12]
 5180 0020 1B6B     		ldr	r3, [r3, #48]
 5181              		.loc 1 2829 22
 5182 0022 1B6D     		ldr	r3, [r3, #80]
 5183              		.loc 1 2829 8
 5184 0024 002B     		cmp	r3, #0
 5185 0026 14D1     		bne	.L212
 5186              	.L210:
2830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
2832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 5187              		.loc 1 2836 22
 5188 0028 FB68     		ldr	r3, [r7, #12]
 5189 002a 0022     		movs	r2, #0
 5190 002c DA84     		strh	r2, [r3, #38]	@ movhi
2837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 5191              		.loc 1 2837 22
 5192 002e FB68     		ldr	r3, [r7, #12]
 5193 0030 0022     		movs	r2, #0
 5194 0032 DA85     		strh	r2, [r3, #46]	@ movhi
2838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
2840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 5195              		.loc 1 2840 20
 5196 0034 FB68     		ldr	r3, [r7, #12]
 5197 0036 0022     		movs	r2, #0
 5198 0038 DA63     		str	r2, [r3, #60]
2841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 5199              		.loc 1 2843 18
 5200 003a FB68     		ldr	r3, [r7, #12]
 5201 003c 2022     		movs	r2, #32
 5202 003e 83F83920 		strb	r2, [r3, #57]
2844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5203              		.loc 1 2844 18
 5204 0042 FB68     		ldr	r3, [r7, #12]
 5205 0044 2022     		movs	r2, #32
 5206 0046 83F83A20 		strb	r2, [r3, #58]
2845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort complete callback */
2849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
2850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
2852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 5207              		.loc 1 2852 3
 5208 004a F868     		ldr	r0, [r7, #12]
 5209 004c FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 5210 0050 00E0     		b	.L209
ARM GAS  /tmp/ccytgAn2.s 			page 141


 5211              	.L212:
2831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 5212              		.loc 1 2831 7
 5213 0052 00BF     		nop
 5214              	.L209:
2853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5215              		.loc 1 2854 1
 5216 0054 1037     		adds	r7, r7, #16
 5217              	.LCFI266:
 5218              		.cfi_def_cfa_offset 8
 5219 0056 BD46     		mov	sp, r7
 5220              	.LCFI267:
 5221              		.cfi_def_cfa_register 13
 5222              		@ sp needed
 5223 0058 80BD     		pop	{r7, pc}
 5224              		.cfi_endproc
 5225              	.LFE178:
 5227              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 5228              		.align	1
 5229              		.syntax unified
 5230              		.thumb
 5231              		.thumb_func
 5232              		.fpu fpv4-sp-d16
 5234              	UART_DMATxOnlyAbortCallback:
 5235              	.LFB179:
2855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5236              		.loc 1 2866 1
 5237              		.cfi_startproc
 5238              		@ args = 0, pretend = 0, frame = 16
 5239              		@ frame_needed = 1, uses_anonymous_args = 0
 5240 0000 80B5     		push	{r7, lr}
 5241              	.LCFI268:
 5242              		.cfi_def_cfa_offset 8
 5243              		.cfi_offset 7, -8
 5244              		.cfi_offset 14, -4
 5245 0002 84B0     		sub	sp, sp, #16
 5246              	.LCFI269:
 5247              		.cfi_def_cfa_offset 24
 5248 0004 00AF     		add	r7, sp, #0
 5249              	.LCFI270:
 5250              		.cfi_def_cfa_register 7
 5251 0006 7860     		str	r0, [r7, #4]
2867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5252              		.loc 1 2867 23
 5253 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccytgAn2.s 			page 142


 5254 000a 9B6B     		ldr	r3, [r3, #56]
 5255 000c FB60     		str	r3, [r7, #12]
2868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 5256              		.loc 1 2869 22
 5257 000e FB68     		ldr	r3, [r7, #12]
 5258 0010 0022     		movs	r2, #0
 5259 0012 DA84     		strh	r2, [r3, #38]	@ movhi
2870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5260              		.loc 1 2872 17
 5261 0014 FB68     		ldr	r3, [r7, #12]
 5262 0016 2022     		movs	r2, #32
 5263 0018 83F83920 		strb	r2, [r3, #57]
2873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
2877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
2878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
2880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 5264              		.loc 1 2880 3
 5265 001c F868     		ldr	r0, [r7, #12]
 5266 001e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
2881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5267              		.loc 1 2882 1
 5268 0022 00BF     		nop
 5269 0024 1037     		adds	r7, r7, #16
 5270              	.LCFI271:
 5271              		.cfi_def_cfa_offset 8
 5272 0026 BD46     		mov	sp, r7
 5273              	.LCFI272:
 5274              		.cfi_def_cfa_register 13
 5275              		@ sp needed
 5276 0028 80BD     		pop	{r7, pc}
 5277              		.cfi_endproc
 5278              	.LFE179:
 5280              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 5281              		.align	1
 5282              		.syntax unified
 5283              		.thumb
 5284              		.thumb_func
 5285              		.fpu fpv4-sp-d16
 5287              	UART_DMARxOnlyAbortCallback:
 5288              	.LFB180:
2883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
ARM GAS  /tmp/ccytgAn2.s 			page 143


2892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5289              		.loc 1 2894 1
 5290              		.cfi_startproc
 5291              		@ args = 0, pretend = 0, frame = 16
 5292              		@ frame_needed = 1, uses_anonymous_args = 0
 5293 0000 80B5     		push	{r7, lr}
 5294              	.LCFI273:
 5295              		.cfi_def_cfa_offset 8
 5296              		.cfi_offset 7, -8
 5297              		.cfi_offset 14, -4
 5298 0002 84B0     		sub	sp, sp, #16
 5299              	.LCFI274:
 5300              		.cfi_def_cfa_offset 24
 5301 0004 00AF     		add	r7, sp, #0
 5302              	.LCFI275:
 5303              		.cfi_def_cfa_register 7
 5304 0006 7860     		str	r0, [r7, #4]
2895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5305              		.loc 1 2895 23
 5306 0008 7B68     		ldr	r3, [r7, #4]
 5307 000a 9B6B     		ldr	r3, [r3, #56]
 5308 000c FB60     		str	r3, [r7, #12]
2896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 5309              		.loc 1 2897 22
 5310 000e FB68     		ldr	r3, [r7, #12]
 5311 0010 0022     		movs	r2, #0
 5312 0012 DA85     		strh	r2, [r3, #46]	@ movhi
2898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5313              		.loc 1 2900 18
 5314 0014 FB68     		ldr	r3, [r7, #12]
 5315 0016 2022     		movs	r2, #32
 5316 0018 83F83A20 		strb	r2, [r3, #58]
2901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
2905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
2906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
2908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 5317              		.loc 1 2908 3
 5318 001c F868     		ldr	r0, [r7, #12]
 5319 001e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
2909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5320              		.loc 1 2910 1
 5321 0022 00BF     		nop
 5322 0024 1037     		adds	r7, r7, #16
 5323              	.LCFI276:
 5324              		.cfi_def_cfa_offset 8
 5325 0026 BD46     		mov	sp, r7
 5326              	.LCFI277:
ARM GAS  /tmp/ccytgAn2.s 			page 144


 5327              		.cfi_def_cfa_register 13
 5328              		@ sp needed
 5329 0028 80BD     		pop	{r7, pc}
 5330              		.cfi_endproc
 5331              	.LFE180:
 5333              		.section	.text.UART_Transmit_IT,"ax",%progbits
 5334              		.align	1
 5335              		.syntax unified
 5336              		.thumb
 5337              		.thumb_func
 5338              		.fpu fpv4-sp-d16
 5340              	UART_Transmit_IT:
 5341              	.LFB181:
2911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
2914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5342              		.loc 1 2919 1
 5343              		.cfi_startproc
 5344              		@ args = 0, pretend = 0, frame = 16
 5345              		@ frame_needed = 1, uses_anonymous_args = 0
 5346              		@ link register save eliminated.
 5347 0000 80B4     		push	{r7}
 5348              	.LCFI278:
 5349              		.cfi_def_cfa_offset 4
 5350              		.cfi_offset 7, -4
 5351 0002 85B0     		sub	sp, sp, #20
 5352              	.LCFI279:
 5353              		.cfi_def_cfa_offset 24
 5354 0004 00AF     		add	r7, sp, #0
 5355              	.LCFI280:
 5356              		.cfi_def_cfa_register 7
 5357 0006 7860     		str	r0, [r7, #4]
2920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *tmp;
2921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 5358              		.loc 1 2923 12
 5359 0008 7B68     		ldr	r3, [r7, #4]
 5360 000a 93F83930 		ldrb	r3, [r3, #57]
 5361 000e DBB2     		uxtb	r3, r3
 5362              		.loc 1 2923 6
 5363 0010 212B     		cmp	r3, #33
 5364 0012 44D1     		bne	.L216
2924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 5365              		.loc 1 2925 20
 5366 0014 7B68     		ldr	r3, [r7, #4]
 5367 0016 9B68     		ldr	r3, [r3, #8]
 5368              		.loc 1 2925 8
 5369 0018 B3F5805F 		cmp	r3, #4096
 5370 001c 1AD1     		bne	.L217
ARM GAS  /tmp/ccytgAn2.s 			page 145


2926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
 5371              		.loc 1 2927 11
 5372 001e 7B68     		ldr	r3, [r7, #4]
 5373 0020 1B6A     		ldr	r3, [r3, #32]
 5374 0022 FB60     		str	r3, [r7, #12]
2928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 5375              		.loc 1 2928 40
 5376 0024 FB68     		ldr	r3, [r7, #12]
 5377 0026 1B88     		ldrh	r3, [r3]
 5378              		.loc 1 2928 29
 5379 0028 1A46     		mov	r2, r3
 5380              		.loc 1 2928 12
 5381 002a 7B68     		ldr	r3, [r7, #4]
 5382 002c 1B68     		ldr	r3, [r3]
 5383              		.loc 1 2928 29
 5384 002e C2F30802 		ubfx	r2, r2, #0, #9
 5385              		.loc 1 2928 27
 5386 0032 5A60     		str	r2, [r3, #4]
2929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.Parity == UART_PARITY_NONE)
 5387              		.loc 1 2929 22
 5388 0034 7B68     		ldr	r3, [r7, #4]
 5389 0036 1B69     		ldr	r3, [r3, #16]
 5390              		.loc 1 2929 10
 5391 0038 002B     		cmp	r3, #0
 5392 003a 05D1     		bne	.L218
2930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 5393              		.loc 1 2931 27
 5394 003c 7B68     		ldr	r3, [r7, #4]
 5395 003e 1B6A     		ldr	r3, [r3, #32]
 5396 0040 9A1C     		adds	r2, r3, #2
 5397 0042 7B68     		ldr	r3, [r7, #4]
 5398 0044 1A62     		str	r2, [r3, #32]
 5399 0046 0EE0     		b	.L220
 5400              	.L218:
2932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pTxBuffPtr += 1U;
 5401              		.loc 1 2935 27
 5402 0048 7B68     		ldr	r3, [r7, #4]
 5403 004a 1B6A     		ldr	r3, [r3, #32]
 5404 004c 5A1C     		adds	r2, r3, #1
 5405 004e 7B68     		ldr	r3, [r7, #4]
 5406 0050 1A62     		str	r2, [r3, #32]
 5407 0052 08E0     		b	.L220
 5408              	.L217:
2936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 5409              		.loc 1 2940 45
 5410 0054 7B68     		ldr	r3, [r7, #4]
 5411 0056 1B6A     		ldr	r3, [r3, #32]
 5412              		.loc 1 2940 57
ARM GAS  /tmp/ccytgAn2.s 			page 146


 5413 0058 591C     		adds	r1, r3, #1
 5414 005a 7A68     		ldr	r2, [r7, #4]
 5415 005c 1162     		str	r1, [r2, #32]
 5416              		.loc 1 2940 39
 5417 005e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5418              		.loc 1 2940 12
 5419 0060 7B68     		ldr	r3, [r7, #4]
 5420 0062 1B68     		ldr	r3, [r3]
 5421              		.loc 1 2940 27
 5422 0064 5A60     		str	r2, [r3, #4]
 5423              	.L220:
2941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (--huart->TxXferCount == 0U)
 5424              		.loc 1 2943 16
 5425 0066 7B68     		ldr	r3, [r7, #4]
 5426 0068 DB8C     		ldrh	r3, [r3, #38]	@ movhi
 5427 006a 9BB2     		uxth	r3, r3
 5428              		.loc 1 2943 9
 5429 006c 013B     		subs	r3, r3, #1
 5430 006e 9BB2     		uxth	r3, r3
 5431              		.loc 1 2943 8
 5432 0070 7A68     		ldr	r2, [r7, #4]
 5433 0072 1946     		mov	r1, r3	@ movhi
 5434 0074 D184     		strh	r1, [r2, #38]	@ movhi
 5435 0076 002B     		cmp	r3, #0
 5436 0078 0FD1     		bne	.L221
2944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Transmit Complete Interrupt */
2946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 5437              		.loc 1 2946 7
 5438 007a 7B68     		ldr	r3, [r7, #4]
 5439 007c 1B68     		ldr	r3, [r3]
 5440 007e DA68     		ldr	r2, [r3, #12]
 5441 0080 7B68     		ldr	r3, [r7, #4]
 5442 0082 1B68     		ldr	r3, [r3]
 5443 0084 22F08002 		bic	r2, r2, #128
 5444 0088 DA60     		str	r2, [r3, #12]
2947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
2949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 5445              		.loc 1 2949 7
 5446 008a 7B68     		ldr	r3, [r7, #4]
 5447 008c 1B68     		ldr	r3, [r3]
 5448 008e DA68     		ldr	r2, [r3, #12]
 5449 0090 7B68     		ldr	r3, [r7, #4]
 5450 0092 1B68     		ldr	r3, [r3]
 5451 0094 42F04002 		orr	r2, r2, #64
 5452 0098 DA60     		str	r2, [r3, #12]
 5453              	.L221:
2950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 5454              		.loc 1 2951 12
 5455 009a 0023     		movs	r3, #0
 5456 009c 00E0     		b	.L222
 5457              	.L216:
2952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  /tmp/ccytgAn2.s 			page 147


2953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 5458              		.loc 1 2955 12
 5459 009e 0223     		movs	r3, #2
 5460              	.L222:
2956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5461              		.loc 1 2957 1
 5462 00a0 1846     		mov	r0, r3
 5463 00a2 1437     		adds	r7, r7, #20
 5464              	.LCFI281:
 5465              		.cfi_def_cfa_offset 4
 5466 00a4 BD46     		mov	sp, r7
 5467              	.LCFI282:
 5468              		.cfi_def_cfa_register 13
 5469              		@ sp needed
 5470 00a6 5DF8047B 		ldr	r7, [sp], #4
 5471              	.LCFI283:
 5472              		.cfi_restore 7
 5473              		.cfi_def_cfa_offset 0
 5474 00aa 7047     		bx	lr
 5475              		.cfi_endproc
 5476              	.LFE181:
 5478              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 5479              		.align	1
 5480              		.syntax unified
 5481              		.thumb
 5482              		.thumb_func
 5483              		.fpu fpv4-sp-d16
 5485              	UART_EndTransmit_IT:
 5486              	.LFB182:
2958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
2961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5487              		.loc 1 2966 1
 5488              		.cfi_startproc
 5489              		@ args = 0, pretend = 0, frame = 8
 5490              		@ frame_needed = 1, uses_anonymous_args = 0
 5491 0000 80B5     		push	{r7, lr}
 5492              	.LCFI284:
 5493              		.cfi_def_cfa_offset 8
 5494              		.cfi_offset 7, -8
 5495              		.cfi_offset 14, -4
 5496 0002 82B0     		sub	sp, sp, #8
 5497              	.LCFI285:
 5498              		.cfi_def_cfa_offset 16
 5499 0004 00AF     		add	r7, sp, #0
 5500              	.LCFI286:
 5501              		.cfi_def_cfa_register 7
 5502 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/ccytgAn2.s 			page 148


2967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
2968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 5503              		.loc 1 2968 3
 5504 0008 7B68     		ldr	r3, [r7, #4]
 5505 000a 1B68     		ldr	r3, [r3]
 5506 000c DA68     		ldr	r2, [r3, #12]
 5507 000e 7B68     		ldr	r3, [r7, #4]
 5508 0010 1B68     		ldr	r3, [r3]
 5509 0012 22F04002 		bic	r2, r2, #64
 5510 0016 DA60     		str	r2, [r3, #12]
2969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5511              		.loc 1 2971 17
 5512 0018 7B68     		ldr	r3, [r7, #4]
 5513 001a 2022     		movs	r2, #32
 5514 001c 83F83920 		strb	r2, [r3, #57]
2972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
2975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxCpltCallback(huart);
2976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
2978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 5515              		.loc 1 2978 3
 5516 0020 7868     		ldr	r0, [r7, #4]
 5517 0022 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
2979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 5518              		.loc 1 2981 10
 5519 0026 0023     		movs	r3, #0
2982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5520              		.loc 1 2982 1
 5521 0028 1846     		mov	r0, r3
 5522 002a 0837     		adds	r7, r7, #8
 5523              	.LCFI287:
 5524              		.cfi_def_cfa_offset 8
 5525 002c BD46     		mov	sp, r7
 5526              	.LCFI288:
 5527              		.cfi_def_cfa_register 13
 5528              		@ sp needed
 5529 002e 80BD     		pop	{r7, pc}
 5530              		.cfi_endproc
 5531              	.LFE182:
 5533              		.section	.text.UART_Receive_IT,"ax",%progbits
 5534              		.align	1
 5535              		.syntax unified
 5536              		.thumb
 5537              		.thumb_func
 5538              		.fpu fpv4-sp-d16
 5540              	UART_Receive_IT:
 5541              	.LFB183:
2983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode
2986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
ARM GAS  /tmp/ccytgAn2.s 			page 149


2987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5542              		.loc 1 2991 1
 5543              		.cfi_startproc
 5544              		@ args = 0, pretend = 0, frame = 16
 5545              		@ frame_needed = 1, uses_anonymous_args = 0
 5546 0000 80B5     		push	{r7, lr}
 5547              	.LCFI289:
 5548              		.cfi_def_cfa_offset 8
 5549              		.cfi_offset 7, -8
 5550              		.cfi_offset 14, -4
 5551 0002 84B0     		sub	sp, sp, #16
 5552              	.LCFI290:
 5553              		.cfi_def_cfa_offset 24
 5554 0004 00AF     		add	r7, sp, #0
 5555              	.LCFI291:
 5556              		.cfi_def_cfa_register 7
 5557 0006 7860     		str	r0, [r7, #4]
2992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *tmp;
2993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 5558              		.loc 1 2995 12
 5559 0008 7B68     		ldr	r3, [r7, #4]
 5560 000a 93F83A30 		ldrb	r3, [r3, #58]
 5561 000e DBB2     		uxtb	r3, r3
 5562              		.loc 1 2995 6
 5563 0010 222B     		cmp	r3, #34
 5564 0012 71D1     		bne	.L226
2996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 5565              		.loc 1 2997 20
 5566 0014 7B68     		ldr	r3, [r7, #4]
 5567 0016 9B68     		ldr	r3, [r3, #8]
 5568              		.loc 1 2997 8
 5569 0018 B3F5805F 		cmp	r3, #4096
 5570 001c 23D1     		bne	.L227
2998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (uint16_t *) huart->pRxBuffPtr;
 5571              		.loc 1 2999 11
 5572 001e 7B68     		ldr	r3, [r7, #4]
 5573 0020 9B6A     		ldr	r3, [r3, #40]
 5574 0022 FB60     		str	r3, [r7, #12]
3000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.Parity == UART_PARITY_NONE)
 5575              		.loc 1 3000 22
 5576 0024 7B68     		ldr	r3, [r7, #4]
 5577 0026 1B69     		ldr	r3, [r3, #16]
 5578              		.loc 1 3000 10
 5579 0028 002B     		cmp	r3, #0
 5580 002a 0ED1     		bne	.L228
3001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 5581              		.loc 1 3002 32
 5582 002c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccytgAn2.s 			page 150


 5583 002e 1B68     		ldr	r3, [r3]
 5584              		.loc 1 3002 42
 5585 0030 5B68     		ldr	r3, [r3, #4]
 5586              		.loc 1 3002 16
 5587 0032 9BB2     		uxth	r3, r3
 5588 0034 C3F30803 		ubfx	r3, r3, #0, #9
 5589 0038 9AB2     		uxth	r2, r3
 5590              		.loc 1 3002 14
 5591 003a FB68     		ldr	r3, [r7, #12]
 5592 003c 1A80     		strh	r2, [r3]	@ movhi
3003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
 5593              		.loc 1 3003 27
 5594 003e 7B68     		ldr	r3, [r7, #4]
 5595 0040 9B6A     		ldr	r3, [r3, #40]
 5596 0042 9A1C     		adds	r2, r3, #2
 5597 0044 7B68     		ldr	r3, [r7, #4]
 5598 0046 9A62     		str	r2, [r3, #40]
 5599 0048 29E0     		b	.L230
 5600              	.L228:
3004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
3006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 5601              		.loc 1 3007 32
 5602 004a 7B68     		ldr	r3, [r7, #4]
 5603 004c 1B68     		ldr	r3, [r3]
 5604              		.loc 1 3007 42
 5605 004e 5B68     		ldr	r3, [r3, #4]
 5606              		.loc 1 3007 16
 5607 0050 9BB2     		uxth	r3, r3
 5608 0052 DBB2     		uxtb	r3, r3
 5609 0054 9AB2     		uxth	r2, r3
 5610              		.loc 1 3007 14
 5611 0056 FB68     		ldr	r3, [r7, #12]
 5612 0058 1A80     		strh	r2, [r3]	@ movhi
3008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 1U;
 5613              		.loc 1 3008 27
 5614 005a 7B68     		ldr	r3, [r7, #4]
 5615 005c 9B6A     		ldr	r3, [r3, #40]
 5616 005e 5A1C     		adds	r2, r3, #1
 5617 0060 7B68     		ldr	r3, [r7, #4]
 5618 0062 9A62     		str	r2, [r3, #40]
 5619 0064 1BE0     		b	.L230
 5620              	.L227:
3009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.Parity == UART_PARITY_NONE)
 5621              		.loc 1 3013 22
 5622 0066 7B68     		ldr	r3, [r7, #4]
 5623 0068 1B69     		ldr	r3, [r3, #16]
 5624              		.loc 1 3013 10
 5625 006a 002B     		cmp	r3, #0
 5626 006c 0AD1     		bne	.L231
3014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
ARM GAS  /tmp/ccytgAn2.s 			page 151


 5627              		.loc 1 3015 47
 5628 006e 7B68     		ldr	r3, [r7, #4]
 5629 0070 1B68     		ldr	r3, [r3]
 5630              		.loc 1 3015 57
 5631 0072 5868     		ldr	r0, [r3, #4]
 5632              		.loc 1 3015 15
 5633 0074 7B68     		ldr	r3, [r7, #4]
 5634 0076 9B6A     		ldr	r3, [r3, #40]
 5635              		.loc 1 3015 27
 5636 0078 591C     		adds	r1, r3, #1
 5637 007a 7A68     		ldr	r2, [r7, #4]
 5638 007c 9162     		str	r1, [r2, #40]
 5639              		.loc 1 3015 32
 5640 007e C2B2     		uxtb	r2, r0
 5641              		.loc 1 3015 30
 5642 0080 1A70     		strb	r2, [r3]
 5643 0082 0CE0     		b	.L230
 5644              	.L231:
3016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
3018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 5645              		.loc 1 3019 47
 5646 0084 7B68     		ldr	r3, [r7, #4]
 5647 0086 1B68     		ldr	r3, [r3]
 5648              		.loc 1 3019 57
 5649 0088 5B68     		ldr	r3, [r3, #4]
 5650              		.loc 1 3019 32
 5651 008a DAB2     		uxtb	r2, r3
 5652              		.loc 1 3019 15
 5653 008c 7B68     		ldr	r3, [r7, #4]
 5654 008e 9B6A     		ldr	r3, [r3, #40]
 5655              		.loc 1 3019 27
 5656 0090 581C     		adds	r0, r3, #1
 5657 0092 7968     		ldr	r1, [r7, #4]
 5658 0094 8862     		str	r0, [r1, #40]
 5659              		.loc 1 3019 32
 5660 0096 02F07F02 		and	r2, r2, #127
 5661 009a D2B2     		uxtb	r2, r2
 5662              		.loc 1 3019 30
 5663 009c 1A70     		strb	r2, [r3]
 5664              	.L230:
3020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (--huart->RxXferCount == 0U)
 5665              		.loc 1 3023 16
 5666 009e 7B68     		ldr	r3, [r7, #4]
 5667 00a0 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 5668 00a2 9BB2     		uxth	r3, r3
 5669              		.loc 1 3023 9
 5670 00a4 013B     		subs	r3, r3, #1
 5671 00a6 9BB2     		uxth	r3, r3
 5672              		.loc 1 3023 8
 5673 00a8 7A68     		ldr	r2, [r7, #4]
 5674 00aa 1946     		mov	r1, r3	@ movhi
 5675 00ac D185     		strh	r1, [r2, #46]	@ movhi
ARM GAS  /tmp/ccytgAn2.s 			page 152


 5676 00ae 002B     		cmp	r3, #0
 5677 00b0 20D1     		bne	.L232
3024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Data Register not empty Interrupt */
3026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 5678              		.loc 1 3026 7
 5679 00b2 7B68     		ldr	r3, [r7, #4]
 5680 00b4 1B68     		ldr	r3, [r3]
 5681 00b6 DA68     		ldr	r2, [r3, #12]
 5682 00b8 7B68     		ldr	r3, [r7, #4]
 5683 00ba 1B68     		ldr	r3, [r3]
 5684 00bc 22F02002 		bic	r2, r2, #32
 5685 00c0 DA60     		str	r2, [r3, #12]
3027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt */
3029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 5686              		.loc 1 3029 7
 5687 00c2 7B68     		ldr	r3, [r7, #4]
 5688 00c4 1B68     		ldr	r3, [r3]
 5689 00c6 DA68     		ldr	r2, [r3, #12]
 5690 00c8 7B68     		ldr	r3, [r7, #4]
 5691 00ca 1B68     		ldr	r3, [r3]
 5692 00cc 22F48072 		bic	r2, r2, #256
 5693 00d0 DA60     		str	r2, [r3, #12]
3030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 5694              		.loc 1 3032 7
 5695 00d2 7B68     		ldr	r3, [r7, #4]
 5696 00d4 1B68     		ldr	r3, [r3]
 5697 00d6 5A69     		ldr	r2, [r3, #20]
 5698 00d8 7B68     		ldr	r3, [r7, #4]
 5699 00da 1B68     		ldr	r3, [r3]
 5700 00dc 22F00102 		bic	r2, r2, #1
 5701 00e0 5A61     		str	r2, [r3, #20]
3033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 5702              		.loc 1 3035 22
 5703 00e2 7B68     		ldr	r3, [r7, #4]
 5704 00e4 2022     		movs	r2, #32
 5705 00e6 83F83A20 		strb	r2, [r3, #58]
3036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 5706              		.loc 1 3042 7
 5707 00ea 7868     		ldr	r0, [r7, #4]
 5708 00ec FFF7FEFF 		bl	HAL_UART_RxCpltCallback
3043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_OK;
 5709              		.loc 1 3045 14
 5710 00f0 0023     		movs	r3, #0
ARM GAS  /tmp/ccytgAn2.s 			page 153


 5711 00f2 02E0     		b	.L233
 5712              	.L232:
3046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 5713              		.loc 1 3047 12
 5714 00f4 0023     		movs	r3, #0
 5715 00f6 00E0     		b	.L233
 5716              	.L226:
3048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 5717              		.loc 1 3051 12
 5718 00f8 0223     		movs	r3, #2
 5719              	.L233:
3052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5720              		.loc 1 3053 1
 5721 00fa 1846     		mov	r0, r3
 5722 00fc 1037     		adds	r7, r7, #16
 5723              	.LCFI292:
 5724              		.cfi_def_cfa_offset 8
 5725 00fe BD46     		mov	sp, r7
 5726              	.LCFI293:
 5727              		.cfi_def_cfa_register 13
 5728              		@ sp needed
 5729 0100 80BD     		pop	{r7, pc}
 5730              		.cfi_endproc
 5731              	.LFE183:
 5733              		.global	__aeabi_uldivmod
 5734              		.section	.text.UART_SetConfig,"ax",%progbits
 5735              		.align	1
 5736              		.syntax unified
 5737              		.thumb
 5738              		.thumb_func
 5739              		.fpu fpv4-sp-d16
 5741              	UART_SetConfig:
 5742              	.LFB184:
3054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Configures the UART peripheral.
3057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5743              		.loc 1 3062 1
 5744              		.cfi_startproc
 5745              		@ args = 0, pretend = 0, frame = 240
 5746              		@ frame_needed = 1, uses_anonymous_args = 0
 5747 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5748              	.LCFI294:
 5749              		.cfi_def_cfa_offset 36
 5750              		.cfi_offset 4, -36
 5751              		.cfi_offset 5, -32
 5752              		.cfi_offset 6, -28
ARM GAS  /tmp/ccytgAn2.s 			page 154


 5753              		.cfi_offset 7, -24
 5754              		.cfi_offset 8, -20
 5755              		.cfi_offset 9, -16
 5756              		.cfi_offset 10, -12
 5757              		.cfi_offset 11, -8
 5758              		.cfi_offset 14, -4
 5759 0004 BDB0     		sub	sp, sp, #244
 5760              	.LCFI295:
 5761              		.cfi_def_cfa_offset 280
 5762 0006 00AF     		add	r7, sp, #0
 5763              	.LCFI296:
 5764              		.cfi_def_cfa_register 7
 5765 0008 C7F8E400 		str	r0, [r7, #228]
3063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg;
3064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t pclk;
3065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
3067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
3068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
3069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
3070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
3071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
3073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits
3074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      according to huart->Init.StopBits value */
3075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 5766              		.loc 1 3075 3
 5767 000c D7F8E430 		ldr	r3, [r7, #228]
 5768 0010 1B68     		ldr	r3, [r3]
 5769 0012 1B69     		ldr	r3, [r3, #16]
 5770 0014 23F44050 		bic	r0, r3, #12288
 5771 0018 D7F8E430 		ldr	r3, [r7, #228]
 5772 001c D968     		ldr	r1, [r3, #12]
 5773 001e D7F8E430 		ldr	r3, [r7, #228]
 5774 0022 1A68     		ldr	r2, [r3]
 5775 0024 40EA0103 		orr	r3, r0, r1
 5776 0028 1361     		str	r3, [r2, #16]
3076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
3078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Word Length, Parity and mode:
3079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set the M bits according to huart->Init.WordLength value
3080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set PCE and PS bits according to huart->Init.Parity value
3081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set TE and RE bits according to huart->Init.Mode value
3082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set OVER8 bit according to huart->Init.OverSampling value */
3083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 5777              		.loc 1 3084 33
 5778 002a D7F8E430 		ldr	r3, [r7, #228]
 5779 002e 9A68     		ldr	r2, [r3, #8]
 5780              		.loc 1 3084 58
 5781 0030 D7F8E430 		ldr	r3, [r7, #228]
 5782 0034 1B69     		ldr	r3, [r3, #16]
 5783              		.loc 1 3084 45
 5784 0036 1A43     		orrs	r2, r2, r3
 5785              		.loc 1 3084 79
 5786 0038 D7F8E430 		ldr	r3, [r7, #228]
 5787 003c 5B69     		ldr	r3, [r3, #20]
ARM GAS  /tmp/ccytgAn2.s 			page 155


 5788              		.loc 1 3084 66
 5789 003e 1A43     		orrs	r2, r2, r3
 5790              		.loc 1 3084 98
 5791 0040 D7F8E430 		ldr	r3, [r7, #228]
 5792 0044 DB69     		ldr	r3, [r3, #28]
 5793              		.loc 1 3084 10
 5794 0046 1343     		orrs	r3, r3, r2
 5795 0048 C7F8EC30 		str	r3, [r7, #236]
3085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 5796              		.loc 1 3085 3
 5797 004c D7F8E430 		ldr	r3, [r7, #228]
 5798 0050 1B68     		ldr	r3, [r3]
 5799 0052 DB68     		ldr	r3, [r3, #12]
 5800 0054 23F41641 		bic	r1, r3, #38400
 5801 0058 21F00C01 		bic	r1, r1, #12
 5802 005c D7F8E430 		ldr	r3, [r7, #228]
 5803 0060 1A68     		ldr	r2, [r3]
 5804 0062 D7F8EC30 		ldr	r3, [r7, #236]
 5805 0066 0B43     		orrs	r3, r3, r1
 5806 0068 D360     		str	r3, [r2, #12]
3086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | 
3087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              tmpreg);
3088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
3090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
3091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 5807              		.loc 1 3091 3
 5808 006a D7F8E430 		ldr	r3, [r7, #228]
 5809 006e 1B68     		ldr	r3, [r3]
 5810 0070 5B69     		ldr	r3, [r3, #20]
 5811 0072 23F44070 		bic	r0, r3, #768
 5812 0076 D7F8E430 		ldr	r3, [r7, #228]
 5813 007a 9969     		ldr	r1, [r3, #24]
 5814 007c D7F8E430 		ldr	r3, [r7, #228]
 5815 0080 1A68     		ldr	r2, [r3]
 5816 0082 40EA0103 		orr	r3, r0, r1
 5817 0086 5361     		str	r3, [r2, #20]
3092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Over Sampling */
3094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 5818              		.loc 1 3094 18
 5819 0088 D7F8E430 		ldr	r3, [r7, #228]
 5820 008c DB69     		ldr	r3, [r3, #28]
 5821              		.loc 1 3094 6
 5822 008e B3F5004F 		cmp	r3, #32768
 5823 0092 40F0C281 		bne	.L235
3095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
3097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if defined(USART6) && defined(UART9) && defined(UART10)
3098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) ||
3099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
3102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #elif defined(USART6)
3104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6))
 5824              		.loc 1 3104 15
ARM GAS  /tmp/ccytgAn2.s 			page 156


 5825 0096 D7F8E430 		ldr	r3, [r7, #228]
 5826 009a 1A68     		ldr	r2, [r3]
 5827              		.loc 1 3104 8
 5828 009c 704B     		ldr	r3, .L243
 5829 009e 9A42     		cmp	r2, r3
 5830 00a0 06D0     		beq	.L236
 5831              		.loc 1 3104 46 discriminator 1
 5832 00a2 D7F8E430 		ldr	r3, [r7, #228]
 5833 00a6 1A68     		ldr	r2, [r3]
 5834              		.loc 1 3104 37 discriminator 1
 5835 00a8 6E4B     		ldr	r3, .L243+4
 5836 00aa 9A42     		cmp	r2, r3
 5837 00ac 40F0DE80 		bne	.L237
 5838              	.L236:
3105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
 5839              		.loc 1 3106 14
 5840 00b0 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 5841 00b4 C7F8E800 		str	r0, [r7, #232]
3107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 5842              		.loc 1 3107 30
 5843 00b8 D7F8E830 		ldr	r3, [r7, #232]
 5844 00bc 1D46     		mov	r5, r3
 5845 00be 4FF00006 		mov	r6, #0
 5846 00c2 2B46     		mov	r3, r5
 5847 00c4 3446     		mov	r4, r6
 5848 00c6 DA18     		adds	r2, r3, r3
 5849 00c8 BA67     		str	r2, [r7, #120]
 5850 00ca 44EB0403 		adc	r3, r4, r4
 5851 00ce FB67     		str	r3, [r7, #124]
 5852 00d0 D7E91E34 		ldrd	r3, [r7, #120]
 5853 00d4 5B19     		adds	r3, r3, r5
 5854 00d6 46EB0404 		adc	r4, r6, r4
 5855 00da 4FF00001 		mov	r1, #0
 5856 00de 4FF00002 		mov	r2, #0
 5857 00e2 E200     		lsls	r2, r4, #3
 5858 00e4 42EA5372 		orr	r2, r2, r3, lsr #29
 5859 00e8 D900     		lsls	r1, r3, #3
 5860 00ea 0B46     		mov	r3, r1
 5861 00ec 1446     		mov	r4, r2
 5862 00ee 5A19     		adds	r2, r3, r5
 5863 00f0 C7F8D820 		str	r2, [r7, #216]
 5864 00f4 44EB0603 		adc	r3, r4, r6
 5865 00f8 C7F8DC30 		str	r3, [r7, #220]
 5866 00fc D7F8E430 		ldr	r3, [r7, #228]
 5867 0100 5B68     		ldr	r3, [r3, #4]
 5868 0102 4FF00004 		mov	r4, #0
 5869 0106 DA18     		adds	r2, r3, r3
 5870 0108 3A67     		str	r2, [r7, #112]
 5871 010a 44EB0403 		adc	r3, r4, r4
 5872 010e 7B67     		str	r3, [r7, #116]
 5873 0110 D7E91C34 		ldrd	r3, [r7, #112]
 5874 0114 1A46     		mov	r2, r3
 5875 0116 2346     		mov	r3, r4
 5876 0118 D7E93601 		ldrd	r0, [r7, #216]
 5877 011c FFF7FEFF 		bl	__aeabi_uldivmod
 5878              	.LVL3:
ARM GAS  /tmp/ccytgAn2.s 			page 157


 5879 0120 0346     		mov	r3, r0
 5880 0122 0C46     		mov	r4, r1
 5881 0124 1A46     		mov	r2, r3
 5882 0126 504B     		ldr	r3, .L243+8
 5883 0128 A3FB0223 		umull	r2, r3, r3, r2
 5884 012c 5B09     		lsrs	r3, r3, #5
 5885 012e 4FEA0318 		lsl	r8, r3, #4
 5886 0132 D7F8E830 		ldr	r3, [r7, #232]
 5887 0136 1D46     		mov	r5, r3
 5888 0138 4FF00006 		mov	r6, #0
 5889 013c 2B46     		mov	r3, r5
 5890 013e 3446     		mov	r4, r6
 5891 0140 DA18     		adds	r2, r3, r3
 5892 0142 BA66     		str	r2, [r7, #104]
 5893 0144 44EB0403 		adc	r3, r4, r4
 5894 0148 FB66     		str	r3, [r7, #108]
 5895 014a D7E91A34 		ldrd	r3, [r7, #104]
 5896 014e 5B19     		adds	r3, r3, r5
 5897 0150 46EB0404 		adc	r4, r6, r4
 5898 0154 4FF00001 		mov	r1, #0
 5899 0158 4FF00002 		mov	r2, #0
 5900 015c E200     		lsls	r2, r4, #3
 5901 015e 42EA5372 		orr	r2, r2, r3, lsr #29
 5902 0162 D900     		lsls	r1, r3, #3
 5903 0164 0B46     		mov	r3, r1
 5904 0166 1446     		mov	r4, r2
 5905 0168 5A19     		adds	r2, r3, r5
 5906 016a C7F8D020 		str	r2, [r7, #208]
 5907 016e 44EB0603 		adc	r3, r4, r6
 5908 0172 C7F8D430 		str	r3, [r7, #212]
 5909 0176 D7F8E430 		ldr	r3, [r7, #228]
 5910 017a 5B68     		ldr	r3, [r3, #4]
 5911 017c 4FF00004 		mov	r4, #0
 5912 0180 DA18     		adds	r2, r3, r3
 5913 0182 3A66     		str	r2, [r7, #96]
 5914 0184 44EB0403 		adc	r3, r4, r4
 5915 0188 7B66     		str	r3, [r7, #100]
 5916 018a D7E91834 		ldrd	r3, [r7, #96]
 5917 018e 1A46     		mov	r2, r3
 5918 0190 2346     		mov	r3, r4
 5919 0192 D7E93401 		ldrd	r0, [r7, #208]
 5920 0196 FFF7FEFF 		bl	__aeabi_uldivmod
 5921              	.LVL4:
 5922 019a 0346     		mov	r3, r0
 5923 019c 0C46     		mov	r4, r1
 5924 019e 1A46     		mov	r2, r3
 5925 01a0 314B     		ldr	r3, .L243+8
 5926 01a2 A3FB0213 		umull	r1, r3, r3, r2
 5927 01a6 5B09     		lsrs	r3, r3, #5
 5928 01a8 6421     		movs	r1, #100
 5929 01aa 01FB03F3 		mul	r3, r1, r3
 5930 01ae D31A     		subs	r3, r2, r3
 5931 01b0 DB00     		lsls	r3, r3, #3
 5932 01b2 3233     		adds	r3, r3, #50
 5933 01b4 2C4A     		ldr	r2, .L243+8
 5934 01b6 A2FB0323 		umull	r2, r3, r2, r3
 5935 01ba 5B09     		lsrs	r3, r3, #5
ARM GAS  /tmp/ccytgAn2.s 			page 158


 5936 01bc 5B00     		lsls	r3, r3, #1
 5937 01be 03F4F873 		and	r3, r3, #496
 5938 01c2 9844     		add	r8, r8, r3
 5939 01c4 D7F8E830 		ldr	r3, [r7, #232]
 5940 01c8 1946     		mov	r1, r3
 5941 01ca 4FF00002 		mov	r2, #0
 5942 01ce 0B46     		mov	r3, r1
 5943 01d0 1446     		mov	r4, r2
 5944 01d2 D818     		adds	r0, r3, r3
 5945 01d4 B865     		str	r0, [r7, #88]
 5946 01d6 44EB0403 		adc	r3, r4, r4
 5947 01da FB65     		str	r3, [r7, #92]
 5948 01dc D7E91634 		ldrd	r3, [r7, #88]
 5949 01e0 5B18     		adds	r3, r3, r1
 5950 01e2 42EB0404 		adc	r4, r2, r4
 5951 01e6 4FF00005 		mov	r5, #0
 5952 01ea 4FF00006 		mov	r6, #0
 5953 01ee E600     		lsls	r6, r4, #3
 5954 01f0 46EA5376 		orr	r6, r6, r3, lsr #29
 5955 01f4 DD00     		lsls	r5, r3, #3
 5956 01f6 2B46     		mov	r3, r5
 5957 01f8 3446     		mov	r4, r6
 5958 01fa 5818     		adds	r0, r3, r1
 5959 01fc C7F8C800 		str	r0, [r7, #200]
 5960 0200 44EB0203 		adc	r3, r4, r2
 5961 0204 C7F8CC30 		str	r3, [r7, #204]
 5962 0208 D7F8E430 		ldr	r3, [r7, #228]
 5963 020c 5B68     		ldr	r3, [r3, #4]
 5964 020e 4FF00004 		mov	r4, #0
 5965 0212 DA18     		adds	r2, r3, r3
 5966 0214 3A65     		str	r2, [r7, #80]
 5967 0216 44EB0403 		adc	r3, r4, r4
 5968 021a 7B65     		str	r3, [r7, #84]
 5969 021c D7E91434 		ldrd	r3, [r7, #80]
 5970 0220 1A46     		mov	r2, r3
 5971 0222 2346     		mov	r3, r4
 5972 0224 D7E93201 		ldrd	r0, [r7, #200]
 5973 0228 FFF7FEFF 		bl	__aeabi_uldivmod
 5974              	.LVL5:
 5975 022c 0346     		mov	r3, r0
 5976 022e 0C46     		mov	r4, r1
 5977 0230 1A46     		mov	r2, r3
 5978 0232 0D4B     		ldr	r3, .L243+8
 5979 0234 A3FB0213 		umull	r1, r3, r3, r2
 5980 0238 5B09     		lsrs	r3, r3, #5
 5981 023a 6421     		movs	r1, #100
 5982 023c 01FB03F3 		mul	r3, r1, r3
 5983 0240 D31A     		subs	r3, r2, r3
 5984 0242 DB00     		lsls	r3, r3, #3
 5985 0244 3233     		adds	r3, r3, #50
 5986 0246 084A     		ldr	r2, .L243+8
 5987 0248 A2FB0323 		umull	r2, r3, r2, r3
 5988 024c 5B09     		lsrs	r3, r3, #5
 5989 024e 03F00702 		and	r2, r3, #7
 5990              		.loc 1 3107 12
 5991 0252 D7F8E430 		ldr	r3, [r7, #228]
 5992 0256 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccytgAn2.s 			page 159


 5993              		.loc 1 3107 30
 5994 0258 4244     		add	r2, r2, r8
 5995              		.loc 1 3107 28
 5996 025a 9A60     		str	r2, [r3, #8]
 5997 025c A7E2     		b	.L239
 5998              	.L244:
 5999 025e 00BF     		.align	2
 6000              	.L243:
 6001 0260 00100140 		.word	1073811456
 6002 0264 00140140 		.word	1073812480
 6003 0268 1F85EB51 		.word	1374389535
 6004              	.L237:
3108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Instance == USART1)
3111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
3114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USART6 */
3116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK1Freq();
 6005              		.loc 1 3118 14
 6006 026c FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 6007 0270 C7F8E800 		str	r0, [r7, #232]
3119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 6008              		.loc 1 3119 30
 6009 0274 D7F8E830 		ldr	r3, [r7, #232]
 6010 0278 1D46     		mov	r5, r3
 6011 027a 4FF00006 		mov	r6, #0
 6012 027e 2B46     		mov	r3, r5
 6013 0280 3446     		mov	r4, r6
 6014 0282 DA18     		adds	r2, r3, r3
 6015 0284 BA64     		str	r2, [r7, #72]
 6016 0286 44EB0403 		adc	r3, r4, r4
 6017 028a FB64     		str	r3, [r7, #76]
 6018 028c D7E91234 		ldrd	r3, [r7, #72]
 6019 0290 5B19     		adds	r3, r3, r5
 6020 0292 46EB0404 		adc	r4, r6, r4
 6021 0296 4FF00001 		mov	r1, #0
 6022 029a 4FF00002 		mov	r2, #0
 6023 029e E200     		lsls	r2, r4, #3
 6024 02a0 42EA5372 		orr	r2, r2, r3, lsr #29
 6025 02a4 D900     		lsls	r1, r3, #3
 6026 02a6 0B46     		mov	r3, r1
 6027 02a8 1446     		mov	r4, r2
 6028 02aa 5A19     		adds	r2, r3, r5
 6029 02ac C7F8C020 		str	r2, [r7, #192]
 6030 02b0 44EB0603 		adc	r3, r4, r6
 6031 02b4 C7F8C430 		str	r3, [r7, #196]
 6032 02b8 D7F8E430 		ldr	r3, [r7, #228]
 6033 02bc 5B68     		ldr	r3, [r3, #4]
 6034 02be 4FF00004 		mov	r4, #0
 6035 02c2 DA18     		adds	r2, r3, r3
 6036 02c4 3A64     		str	r2, [r7, #64]
 6037 02c6 44EB0403 		adc	r3, r4, r4
ARM GAS  /tmp/ccytgAn2.s 			page 160


 6038 02ca 7B64     		str	r3, [r7, #68]
 6039 02cc D7E91034 		ldrd	r3, [r7, #64]
 6040 02d0 1A46     		mov	r2, r3
 6041 02d2 2346     		mov	r3, r4
 6042 02d4 D7E93001 		ldrd	r0, [r7, #192]
 6043 02d8 FFF7FEFF 		bl	__aeabi_uldivmod
 6044              	.LVL6:
 6045 02dc 0346     		mov	r3, r0
 6046 02de 0C46     		mov	r4, r1
 6047 02e0 1A46     		mov	r2, r3
 6048 02e2 C24B     		ldr	r3, .L245
 6049 02e4 A3FB0223 		umull	r2, r3, r3, r2
 6050 02e8 5B09     		lsrs	r3, r3, #5
 6051 02ea 4FEA0318 		lsl	r8, r3, #4
 6052 02ee D7F8E830 		ldr	r3, [r7, #232]
 6053 02f2 1D46     		mov	r5, r3
 6054 02f4 4FF00006 		mov	r6, #0
 6055 02f8 2B46     		mov	r3, r5
 6056 02fa 3446     		mov	r4, r6
 6057 02fc DA18     		adds	r2, r3, r3
 6058 02fe BA63     		str	r2, [r7, #56]
 6059 0300 44EB0403 		adc	r3, r4, r4
 6060 0304 FB63     		str	r3, [r7, #60]
 6061 0306 D7E90E34 		ldrd	r3, [r7, #56]
 6062 030a 5B19     		adds	r3, r3, r5
 6063 030c 46EB0404 		adc	r4, r6, r4
 6064 0310 4FF00001 		mov	r1, #0
 6065 0314 4FF00002 		mov	r2, #0
 6066 0318 E200     		lsls	r2, r4, #3
 6067 031a 42EA5372 		orr	r2, r2, r3, lsr #29
 6068 031e D900     		lsls	r1, r3, #3
 6069 0320 0B46     		mov	r3, r1
 6070 0322 1446     		mov	r4, r2
 6071 0324 5A19     		adds	r2, r3, r5
 6072 0326 C7F8B820 		str	r2, [r7, #184]
 6073 032a 44EB0603 		adc	r3, r4, r6
 6074 032e C7F8BC30 		str	r3, [r7, #188]
 6075 0332 D7F8E430 		ldr	r3, [r7, #228]
 6076 0336 5B68     		ldr	r3, [r3, #4]
 6077 0338 4FF00004 		mov	r4, #0
 6078 033c DA18     		adds	r2, r3, r3
 6079 033e 3A63     		str	r2, [r7, #48]
 6080 0340 44EB0403 		adc	r3, r4, r4
 6081 0344 7B63     		str	r3, [r7, #52]
 6082 0346 D7E90C34 		ldrd	r3, [r7, #48]
 6083 034a 1A46     		mov	r2, r3
 6084 034c 2346     		mov	r3, r4
 6085 034e D7E92E01 		ldrd	r0, [r7, #184]
 6086 0352 FFF7FEFF 		bl	__aeabi_uldivmod
 6087              	.LVL7:
 6088 0356 0346     		mov	r3, r0
 6089 0358 0C46     		mov	r4, r1
 6090 035a 1A46     		mov	r2, r3
 6091 035c A34B     		ldr	r3, .L245
 6092 035e A3FB0213 		umull	r1, r3, r3, r2
 6093 0362 5B09     		lsrs	r3, r3, #5
 6094 0364 6421     		movs	r1, #100
ARM GAS  /tmp/ccytgAn2.s 			page 161


 6095 0366 01FB03F3 		mul	r3, r1, r3
 6096 036a D31A     		subs	r3, r2, r3
 6097 036c DB00     		lsls	r3, r3, #3
 6098 036e 3233     		adds	r3, r3, #50
 6099 0370 9E4A     		ldr	r2, .L245
 6100 0372 A2FB0323 		umull	r2, r3, r2, r3
 6101 0376 5B09     		lsrs	r3, r3, #5
 6102 0378 5B00     		lsls	r3, r3, #1
 6103 037a 03F4F873 		and	r3, r3, #496
 6104 037e 9844     		add	r8, r8, r3
 6105 0380 D7F8E830 		ldr	r3, [r7, #232]
 6106 0384 1946     		mov	r1, r3
 6107 0386 4FF00002 		mov	r2, #0
 6108 038a 0B46     		mov	r3, r1
 6109 038c 1446     		mov	r4, r2
 6110 038e D818     		adds	r0, r3, r3
 6111 0390 B862     		str	r0, [r7, #40]
 6112 0392 44EB0403 		adc	r3, r4, r4
 6113 0396 FB62     		str	r3, [r7, #44]
 6114 0398 D7E90A34 		ldrd	r3, [r7, #40]
 6115 039c 5B18     		adds	r3, r3, r1
 6116 039e 42EB0404 		adc	r4, r2, r4
 6117 03a2 4FF00005 		mov	r5, #0
 6118 03a6 4FF00006 		mov	r6, #0
 6119 03aa E600     		lsls	r6, r4, #3
 6120 03ac 46EA5376 		orr	r6, r6, r3, lsr #29
 6121 03b0 DD00     		lsls	r5, r3, #3
 6122 03b2 2B46     		mov	r3, r5
 6123 03b4 3446     		mov	r4, r6
 6124 03b6 5818     		adds	r0, r3, r1
 6125 03b8 C7F8B000 		str	r0, [r7, #176]
 6126 03bc 44EB0203 		adc	r3, r4, r2
 6127 03c0 C7F8B430 		str	r3, [r7, #180]
 6128 03c4 D7F8E430 		ldr	r3, [r7, #228]
 6129 03c8 5B68     		ldr	r3, [r3, #4]
 6130 03ca 4FF00004 		mov	r4, #0
 6131 03ce DA18     		adds	r2, r3, r3
 6132 03d0 3A62     		str	r2, [r7, #32]
 6133 03d2 44EB0403 		adc	r3, r4, r4
 6134 03d6 7B62     		str	r3, [r7, #36]
 6135 03d8 D7E90834 		ldrd	r3, [r7, #32]
 6136 03dc 1A46     		mov	r2, r3
 6137 03de 2346     		mov	r3, r4
 6138 03e0 D7E92C01 		ldrd	r0, [r7, #176]
 6139 03e4 FFF7FEFF 		bl	__aeabi_uldivmod
 6140              	.LVL8:
 6141 03e8 0346     		mov	r3, r0
 6142 03ea 0C46     		mov	r4, r1
 6143 03ec 1A46     		mov	r2, r3
 6144 03ee 7F4B     		ldr	r3, .L245
 6145 03f0 A3FB0213 		umull	r1, r3, r3, r2
 6146 03f4 5B09     		lsrs	r3, r3, #5
 6147 03f6 6421     		movs	r1, #100
 6148 03f8 01FB03F3 		mul	r3, r1, r3
 6149 03fc D31A     		subs	r3, r2, r3
 6150 03fe DB00     		lsls	r3, r3, #3
 6151 0400 3233     		adds	r3, r3, #50
ARM GAS  /tmp/ccytgAn2.s 			page 162


 6152 0402 7A4A     		ldr	r2, .L245
 6153 0404 A2FB0323 		umull	r2, r3, r2, r3
 6154 0408 5B09     		lsrs	r3, r3, #5
 6155 040a 03F00702 		and	r2, r3, #7
 6156              		.loc 1 3119 12
 6157 040e D7F8E430 		ldr	r3, [r7, #228]
 6158 0412 1B68     		ldr	r3, [r3]
 6159              		.loc 1 3119 30
 6160 0414 4244     		add	r2, r2, r8
 6161              		.loc 1 3119 28
 6162 0416 9A60     		str	r2, [r3, #8]
3120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
3125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if defined(USART6) && defined(UART9) && defined(UART10)
3126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) ||
3127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
3130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #elif defined(USART6)
3132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6))
3133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
3136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Instance == USART1)
3139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
3142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USART6 */
3144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK1Freq();
3147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
3148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6163              		.loc 1 3150 1
 6164 0418 C9E1     		b	.L242
 6165              	.L235:
3132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 6166              		.loc 1 3132 15
 6167 041a D7F8E430 		ldr	r3, [r7, #228]
 6168 041e 1A68     		ldr	r2, [r3]
3132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 6169              		.loc 1 3132 8
 6170 0420 734B     		ldr	r3, .L245+4
 6171 0422 9A42     		cmp	r2, r3
 6172 0424 06D0     		beq	.L240
3132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 6173              		.loc 1 3132 46 discriminator 1
 6174 0426 D7F8E430 		ldr	r3, [r7, #228]
ARM GAS  /tmp/ccytgAn2.s 			page 163


 6175 042a 1A68     		ldr	r2, [r3]
3132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 6176              		.loc 1 3132 37 discriminator 1
 6177 042c 714B     		ldr	r3, .L245+8
 6178 042e 9A42     		cmp	r2, r3
 6179 0430 40F0E280 		bne	.L241
 6180              	.L240:
3134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 6181              		.loc 1 3134 14
 6182 0434 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 6183 0438 C7F8E800 		str	r0, [r7, #232]
3135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6184              		.loc 1 3135 30
 6185 043c D7F8E830 		ldr	r3, [r7, #232]
 6186 0440 1D46     		mov	r5, r3
 6187 0442 4FF00006 		mov	r6, #0
 6188 0446 2B46     		mov	r3, r5
 6189 0448 3446     		mov	r4, r6
 6190 044a 13EB030A 		adds	r10, r3, r3
 6191 044e 44EB040B 		adc	fp, r4, r4
 6192 0452 5346     		mov	r3, r10
 6193 0454 5C46     		mov	r4, fp
 6194 0456 5B19     		adds	r3, r3, r5
 6195 0458 46EB0404 		adc	r4, r6, r4
 6196 045c 4FF00001 		mov	r1, #0
 6197 0460 4FF00002 		mov	r2, #0
 6198 0464 E200     		lsls	r2, r4, #3
 6199 0466 42EA5372 		orr	r2, r2, r3, lsr #29
 6200 046a D900     		lsls	r1, r3, #3
 6201 046c 0B46     		mov	r3, r1
 6202 046e 1446     		mov	r4, r2
 6203 0470 5A19     		adds	r2, r3, r5
 6204 0472 C7F8A820 		str	r2, [r7, #168]
 6205 0476 44EB0603 		adc	r3, r4, r6
 6206 047a C7F8AC30 		str	r3, [r7, #172]
 6207 047e D7F8E430 		ldr	r3, [r7, #228]
 6208 0482 5B68     		ldr	r3, [r3, #4]
 6209 0484 1946     		mov	r1, r3
 6210 0486 4FF00002 		mov	r2, #0
 6211 048a 4FF00003 		mov	r3, #0
 6212 048e 4FF00004 		mov	r4, #0
 6213 0492 9400     		lsls	r4, r2, #2
 6214 0494 44EA9174 		orr	r4, r4, r1, lsr #30
 6215 0498 8B00     		lsls	r3, r1, #2
 6216 049a 1A46     		mov	r2, r3
 6217 049c 2346     		mov	r3, r4
 6218 049e D7E92A01 		ldrd	r0, [r7, #168]
 6219 04a2 FFF7FEFF 		bl	__aeabi_uldivmod
 6220              	.LVL9:
 6221 04a6 0346     		mov	r3, r0
 6222 04a8 0C46     		mov	r4, r1
 6223 04aa 1A46     		mov	r2, r3
 6224 04ac 4F4B     		ldr	r3, .L245
 6225 04ae A3FB0223 		umull	r2, r3, r3, r2
 6226 04b2 5B09     		lsrs	r3, r3, #5
 6227 04b4 4FEA0318 		lsl	r8, r3, #4
 6228 04b8 D7F8E830 		ldr	r3, [r7, #232]
ARM GAS  /tmp/ccytgAn2.s 			page 164


 6229 04bc 1946     		mov	r1, r3
 6230 04be 4FF00002 		mov	r2, #0
 6231 04c2 0B46     		mov	r3, r1
 6232 04c4 1446     		mov	r4, r2
 6233 04c6 D818     		adds	r0, r3, r3
 6234 04c8 B861     		str	r0, [r7, #24]
 6235 04ca 44EB0403 		adc	r3, r4, r4
 6236 04ce FB61     		str	r3, [r7, #28]
 6237 04d0 D7E90634 		ldrd	r3, [r7, #24]
 6238 04d4 5B18     		adds	r3, r3, r1
 6239 04d6 42EB0404 		adc	r4, r2, r4
 6240 04da 4FF00005 		mov	r5, #0
 6241 04de 4FF00006 		mov	r6, #0
 6242 04e2 E600     		lsls	r6, r4, #3
 6243 04e4 46EA5376 		orr	r6, r6, r3, lsr #29
 6244 04e8 DD00     		lsls	r5, r3, #3
 6245 04ea 2B46     		mov	r3, r5
 6246 04ec 3446     		mov	r4, r6
 6247 04ee 5818     		adds	r0, r3, r1
 6248 04f0 C7F8A000 		str	r0, [r7, #160]
 6249 04f4 44EB0203 		adc	r3, r4, r2
 6250 04f8 C7F8A430 		str	r3, [r7, #164]
 6251 04fc D7F8E430 		ldr	r3, [r7, #228]
 6252 0500 5B68     		ldr	r3, [r3, #4]
 6253 0502 1946     		mov	r1, r3
 6254 0504 4FF00002 		mov	r2, #0
 6255 0508 4FF00003 		mov	r3, #0
 6256 050c 4FF00004 		mov	r4, #0
 6257 0510 9400     		lsls	r4, r2, #2
 6258 0512 44EA9174 		orr	r4, r4, r1, lsr #30
 6259 0516 8B00     		lsls	r3, r1, #2
 6260 0518 1A46     		mov	r2, r3
 6261 051a 2346     		mov	r3, r4
 6262 051c D7E92801 		ldrd	r0, [r7, #160]
 6263 0520 FFF7FEFF 		bl	__aeabi_uldivmod
 6264              	.LVL10:
 6265 0524 0346     		mov	r3, r0
 6266 0526 0C46     		mov	r4, r1
 6267 0528 1A46     		mov	r2, r3
 6268 052a 304B     		ldr	r3, .L245
 6269 052c A3FB0213 		umull	r1, r3, r3, r2
 6270 0530 5B09     		lsrs	r3, r3, #5
 6271 0532 6421     		movs	r1, #100
 6272 0534 01FB03F3 		mul	r3, r1, r3
 6273 0538 D31A     		subs	r3, r2, r3
 6274 053a 1B01     		lsls	r3, r3, #4
 6275 053c 3233     		adds	r3, r3, #50
 6276 053e 2B4A     		ldr	r2, .L245
 6277 0540 A2FB0323 		umull	r2, r3, r2, r3
 6278 0544 5B09     		lsrs	r3, r3, #5
 6279 0546 03F0F003 		and	r3, r3, #240
 6280 054a 9844     		add	r8, r8, r3
 6281 054c D7F8E830 		ldr	r3, [r7, #232]
 6282 0550 1946     		mov	r1, r3
 6283 0552 4FF00002 		mov	r2, #0
 6284 0556 0B46     		mov	r3, r1
 6285 0558 1446     		mov	r4, r2
ARM GAS  /tmp/ccytgAn2.s 			page 165


 6286 055a D818     		adds	r0, r3, r3
 6287 055c 3861     		str	r0, [r7, #16]
 6288 055e 44EB0403 		adc	r3, r4, r4
 6289 0562 7B61     		str	r3, [r7, #20]
 6290 0564 D7E90434 		ldrd	r3, [r7, #16]
 6291 0568 5B18     		adds	r3, r3, r1
 6292 056a 42EB0404 		adc	r4, r2, r4
 6293 056e 4FF00005 		mov	r5, #0
 6294 0572 4FF00006 		mov	r6, #0
 6295 0576 E600     		lsls	r6, r4, #3
 6296 0578 46EA5376 		orr	r6, r6, r3, lsr #29
 6297 057c DD00     		lsls	r5, r3, #3
 6298 057e 2B46     		mov	r3, r5
 6299 0580 3446     		mov	r4, r6
 6300 0582 5818     		adds	r0, r3, r1
 6301 0584 C7F89800 		str	r0, [r7, #152]
 6302 0588 44EB0203 		adc	r3, r4, r2
 6303 058c C7F89C30 		str	r3, [r7, #156]
 6304 0590 D7F8E430 		ldr	r3, [r7, #228]
 6305 0594 5B68     		ldr	r3, [r3, #4]
 6306 0596 1946     		mov	r1, r3
 6307 0598 4FF00002 		mov	r2, #0
 6308 059c 4FF00003 		mov	r3, #0
 6309 05a0 4FF00004 		mov	r4, #0
 6310 05a4 9400     		lsls	r4, r2, #2
 6311 05a6 44EA9174 		orr	r4, r4, r1, lsr #30
 6312 05aa 8B00     		lsls	r3, r1, #2
 6313 05ac 1A46     		mov	r2, r3
 6314 05ae 2346     		mov	r3, r4
 6315 05b0 D7E92601 		ldrd	r0, [r7, #152]
 6316 05b4 FFF7FEFF 		bl	__aeabi_uldivmod
 6317              	.LVL11:
 6318 05b8 0346     		mov	r3, r0
 6319 05ba 0C46     		mov	r4, r1
 6320 05bc 1A46     		mov	r2, r3
 6321 05be 0B4B     		ldr	r3, .L245
 6322 05c0 A3FB0213 		umull	r1, r3, r3, r2
 6323 05c4 5B09     		lsrs	r3, r3, #5
 6324 05c6 6421     		movs	r1, #100
 6325 05c8 01FB03F3 		mul	r3, r1, r3
 6326 05cc D31A     		subs	r3, r2, r3
 6327 05ce 1B01     		lsls	r3, r3, #4
 6328 05d0 3233     		adds	r3, r3, #50
 6329 05d2 064A     		ldr	r2, .L245
 6330 05d4 A2FB0323 		umull	r2, r3, r2, r3
 6331 05d8 5B09     		lsrs	r3, r3, #5
 6332 05da 03F00F02 		and	r2, r3, #15
3135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6333              		.loc 1 3135 12
 6334 05de D7F8E430 		ldr	r3, [r7, #228]
 6335 05e2 1B68     		ldr	r3, [r3]
3135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6336              		.loc 1 3135 30
 6337 05e4 4244     		add	r2, r2, r8
3135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6338              		.loc 1 3135 28
 6339 05e6 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/ccytgAn2.s 			page 166


 6340 05e8 E1E0     		b	.L239
 6341              	.L246:
 6342 05ea 00BF     		.align	2
 6343              	.L245:
 6344 05ec 1F85EB51 		.word	1374389535
 6345 05f0 00100140 		.word	1073811456
 6346 05f4 00140140 		.word	1073812480
 6347              	.L241:
3146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 6348              		.loc 1 3146 14
 6349 05f8 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 6350 05fc C7F8E800 		str	r0, [r7, #232]
3147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6351              		.loc 1 3147 30
 6352 0600 D7F8E830 		ldr	r3, [r7, #232]
 6353 0604 1D46     		mov	r5, r3
 6354 0606 4FF00006 		mov	r6, #0
 6355 060a 2B46     		mov	r3, r5
 6356 060c 3446     		mov	r4, r6
 6357 060e 13EB0308 		adds	r8, r3, r3
 6358 0612 44EB0409 		adc	r9, r4, r4
 6359 0616 4346     		mov	r3, r8
 6360 0618 4C46     		mov	r4, r9
 6361 061a 5B19     		adds	r3, r3, r5
 6362 061c 46EB0404 		adc	r4, r6, r4
 6363 0620 4FF00001 		mov	r1, #0
 6364 0624 4FF00002 		mov	r2, #0
 6365 0628 E200     		lsls	r2, r4, #3
 6366 062a 42EA5372 		orr	r2, r2, r3, lsr #29
 6367 062e D900     		lsls	r1, r3, #3
 6368 0630 0B46     		mov	r3, r1
 6369 0632 1446     		mov	r4, r2
 6370 0634 5A19     		adds	r2, r3, r5
 6371 0636 C7F89020 		str	r2, [r7, #144]
 6372 063a 44EB0603 		adc	r3, r4, r6
 6373 063e C7F89430 		str	r3, [r7, #148]
 6374 0642 D7F8E430 		ldr	r3, [r7, #228]
 6375 0646 5B68     		ldr	r3, [r3, #4]
 6376 0648 1946     		mov	r1, r3
 6377 064a 4FF00002 		mov	r2, #0
 6378 064e 4FF00003 		mov	r3, #0
 6379 0652 4FF00004 		mov	r4, #0
 6380 0656 9400     		lsls	r4, r2, #2
 6381 0658 44EA9174 		orr	r4, r4, r1, lsr #30
 6382 065c 8B00     		lsls	r3, r1, #2
 6383 065e 1A46     		mov	r2, r3
 6384 0660 2346     		mov	r3, r4
 6385 0662 D7E92401 		ldrd	r0, [r7, #144]
 6386 0666 FFF7FEFF 		bl	__aeabi_uldivmod
 6387              	.LVL12:
 6388 066a 0346     		mov	r3, r0
 6389 066c 0C46     		mov	r4, r1
 6390 066e 1A46     		mov	r2, r3
 6391 0670 514B     		ldr	r3, .L247
 6392 0672 A3FB0223 		umull	r2, r3, r3, r2
 6393 0676 5B09     		lsrs	r3, r3, #5
 6394 0678 4FEA0318 		lsl	r8, r3, #4
ARM GAS  /tmp/ccytgAn2.s 			page 167


 6395 067c D7F8E830 		ldr	r3, [r7, #232]
 6396 0680 1946     		mov	r1, r3
 6397 0682 4FF00002 		mov	r2, #0
 6398 0686 0B46     		mov	r3, r1
 6399 0688 1446     		mov	r4, r2
 6400 068a D818     		adds	r0, r3, r3
 6401 068c B860     		str	r0, [r7, #8]
 6402 068e 44EB0403 		adc	r3, r4, r4
 6403 0692 FB60     		str	r3, [r7, #12]
 6404 0694 D7E90234 		ldrd	r3, [r7, #8]
 6405 0698 5B18     		adds	r3, r3, r1
 6406 069a 42EB0404 		adc	r4, r2, r4
 6407 069e 4FF00005 		mov	r5, #0
 6408 06a2 4FF00006 		mov	r6, #0
 6409 06a6 E600     		lsls	r6, r4, #3
 6410 06a8 46EA5376 		orr	r6, r6, r3, lsr #29
 6411 06ac DD00     		lsls	r5, r3, #3
 6412 06ae 2B46     		mov	r3, r5
 6413 06b0 3446     		mov	r4, r6
 6414 06b2 5818     		adds	r0, r3, r1
 6415 06b4 C7F88800 		str	r0, [r7, #136]
 6416 06b8 44EB0203 		adc	r3, r4, r2
 6417 06bc C7F88C30 		str	r3, [r7, #140]
 6418 06c0 D7F8E430 		ldr	r3, [r7, #228]
 6419 06c4 5B68     		ldr	r3, [r3, #4]
 6420 06c6 1946     		mov	r1, r3
 6421 06c8 4FF00002 		mov	r2, #0
 6422 06cc 4FF00003 		mov	r3, #0
 6423 06d0 4FF00004 		mov	r4, #0
 6424 06d4 9400     		lsls	r4, r2, #2
 6425 06d6 44EA9174 		orr	r4, r4, r1, lsr #30
 6426 06da 8B00     		lsls	r3, r1, #2
 6427 06dc 1A46     		mov	r2, r3
 6428 06de 2346     		mov	r3, r4
 6429 06e0 D7E92201 		ldrd	r0, [r7, #136]
 6430 06e4 FFF7FEFF 		bl	__aeabi_uldivmod
 6431              	.LVL13:
 6432 06e8 0346     		mov	r3, r0
 6433 06ea 0C46     		mov	r4, r1
 6434 06ec 1A46     		mov	r2, r3
 6435 06ee 324B     		ldr	r3, .L247
 6436 06f0 A3FB0213 		umull	r1, r3, r3, r2
 6437 06f4 5B09     		lsrs	r3, r3, #5
 6438 06f6 6421     		movs	r1, #100
 6439 06f8 01FB03F3 		mul	r3, r1, r3
 6440 06fc D31A     		subs	r3, r2, r3
 6441 06fe 1B01     		lsls	r3, r3, #4
 6442 0700 3233     		adds	r3, r3, #50
 6443 0702 2D4A     		ldr	r2, .L247
 6444 0704 A2FB0323 		umull	r2, r3, r2, r3
 6445 0708 5B09     		lsrs	r3, r3, #5
 6446 070a 03F0F003 		and	r3, r3, #240
 6447 070e 9844     		add	r8, r8, r3
 6448 0710 D7F8E830 		ldr	r3, [r7, #232]
 6449 0714 1946     		mov	r1, r3
 6450 0716 4FF00002 		mov	r2, #0
 6451 071a 0B46     		mov	r3, r1
ARM GAS  /tmp/ccytgAn2.s 			page 168


 6452 071c 1446     		mov	r4, r2
 6453 071e D818     		adds	r0, r3, r3
 6454 0720 3860     		str	r0, [r7]
 6455 0722 44EB0403 		adc	r3, r4, r4
 6456 0726 7B60     		str	r3, [r7, #4]
 6457 0728 D7E90034 		ldrd	r3, [r7]
 6458 072c 5B18     		adds	r3, r3, r1
 6459 072e 42EB0404 		adc	r4, r2, r4
 6460 0732 4FF00005 		mov	r5, #0
 6461 0736 4FF00006 		mov	r6, #0
 6462 073a E600     		lsls	r6, r4, #3
 6463 073c 46EA5376 		orr	r6, r6, r3, lsr #29
 6464 0740 DD00     		lsls	r5, r3, #3
 6465 0742 2B46     		mov	r3, r5
 6466 0744 3446     		mov	r4, r6
 6467 0746 5818     		adds	r0, r3, r1
 6468 0748 C7F88000 		str	r0, [r7, #128]
 6469 074c 44EB0203 		adc	r3, r4, r2
 6470 0750 C7F88430 		str	r3, [r7, #132]
 6471 0754 D7F8E430 		ldr	r3, [r7, #228]
 6472 0758 5B68     		ldr	r3, [r3, #4]
 6473 075a 1946     		mov	r1, r3
 6474 075c 4FF00002 		mov	r2, #0
 6475 0760 4FF00003 		mov	r3, #0
 6476 0764 4FF00004 		mov	r4, #0
 6477 0768 9400     		lsls	r4, r2, #2
 6478 076a 44EA9174 		orr	r4, r4, r1, lsr #30
 6479 076e 8B00     		lsls	r3, r1, #2
 6480 0770 1A46     		mov	r2, r3
 6481 0772 2346     		mov	r3, r4
 6482 0774 D7E92001 		ldrd	r0, [r7, #128]
 6483 0778 FFF7FEFF 		bl	__aeabi_uldivmod
 6484              	.LVL14:
 6485 077c 0346     		mov	r3, r0
 6486 077e 0C46     		mov	r4, r1
 6487 0780 1A46     		mov	r2, r3
 6488 0782 0D4B     		ldr	r3, .L247
 6489 0784 A3FB0213 		umull	r1, r3, r3, r2
 6490 0788 5B09     		lsrs	r3, r3, #5
 6491 078a 6421     		movs	r1, #100
 6492 078c 01FB03F3 		mul	r3, r1, r3
 6493 0790 D31A     		subs	r3, r2, r3
 6494 0792 1B01     		lsls	r3, r3, #4
 6495 0794 3233     		adds	r3, r3, #50
 6496 0796 084A     		ldr	r2, .L247
 6497 0798 A2FB0323 		umull	r2, r3, r2, r3
 6498 079c 5B09     		lsrs	r3, r3, #5
 6499 079e 03F00F02 		and	r2, r3, #15
3147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6500              		.loc 1 3147 12
 6501 07a2 D7F8E430 		ldr	r3, [r7, #228]
 6502 07a6 1B68     		ldr	r3, [r3]
3147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6503              		.loc 1 3147 30
 6504 07a8 4244     		add	r2, r2, r8
3147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6505              		.loc 1 3147 28
ARM GAS  /tmp/ccytgAn2.s 			page 169


 6506 07aa 9A60     		str	r2, [r3, #8]
 6507              		.loc 1 3150 1
 6508 07ac FFE7     		b	.L242
 6509              	.L239:
 6510              	.L242:
 6511 07ae 00BF     		nop
 6512 07b0 F437     		adds	r7, r7, #244
 6513              	.LCFI297:
 6514              		.cfi_def_cfa_offset 36
 6515 07b2 BD46     		mov	sp, r7
 6516              	.LCFI298:
 6517              		.cfi_def_cfa_register 13
 6518              		@ sp needed
 6519 07b4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6520              	.L248:
 6521              		.align	2
 6522              	.L247:
 6523 07b8 1F85EB51 		.word	1374389535
 6524              		.cfi_endproc
 6525              	.LFE184:
 6527              		.text
 6528              	.Letext0:
 6529              		.file 2 "/home/mip-laptop/uros_frtos_ws/firmware/toolchain/arm-none-eabi/include/machine/_default_
 6530              		.file 3 "/home/mip-laptop/uros_frtos_ws/firmware/toolchain/arm-none-eabi/include/sys/_stdint.h"
 6531              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 6532              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 6533              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 6534              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 6535              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 6536              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 6537              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 6538              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccytgAn2.s 			page 170


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_uart.c
     /tmp/ccytgAn2.s:18     .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccytgAn2.s:26     .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccytgAn2.s:643    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccytgAn2.s:5741   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccytgAn2.s:136    .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/ccytgAn2.s:143    .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/ccytgAn2.s:260    .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/ccytgAn2.s:267    .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/ccytgAn2.s:402    .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/ccytgAn2.s:409    .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/ccytgAn2.s:555    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/ccytgAn2.s:562    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/ccytgAn2.s:686    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccytgAn2.s:636    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccytgAn2.s:679    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccytgAn2.s:722    .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccytgAn2.s:729    .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccytgAn2.s:4767   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccytgAn2.s:953    .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccytgAn2.s:960    .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccytgAn2.s:1206   .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/ccytgAn2.s:1213   .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/ccytgAn2.s:1324   .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/ccytgAn2.s:1331   .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/ccytgAn2.s:1458   .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/ccytgAn2.s:1465   .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/ccytgAn2.s:1618   .text.HAL_UART_Transmit_DMA:00000000000000cc $d
     /tmp/ccytgAn2.s:4394   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/ccytgAn2.s:4473   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/ccytgAn2.s:4651   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/ccytgAn2.s:1625   .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/ccytgAn2.s:1632   .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/ccytgAn2.s:1806   .text.HAL_UART_Receive_DMA:00000000000000f4 $d
     /tmp/ccytgAn2.s:4518   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/ccytgAn2.s:4606   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/ccytgAn2.s:1813   .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/ccytgAn2.s:1820   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/ccytgAn2.s:1959   .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/ccytgAn2.s:1966   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/ccytgAn2.s:2084   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/ccytgAn2.s:2091   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/ccytgAn2.s:4885   .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/ccytgAn2.s:4939   .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/ccytgAn2.s:2222   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/ccytgAn2.s:2229   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/ccytgAn2.s:2408   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/ccytgAn2.s:2415   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/ccytgAn2.s:2520   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/ccytgAn2.s:2527   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/ccytgAn2.s:2640   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/ccytgAn2.s:2647   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/ccytgAn2.s:3729   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/ccytgAn2.s:2874   .text.HAL_UART_Abort_IT:0000000000000140 $d
     /tmp/ccytgAn2.s:5054   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/ccytgAn2.s:5144   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
ARM GAS  /tmp/ccytgAn2.s 			page 171


     /tmp/ccytgAn2.s:2880   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/ccytgAn2.s:2887   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/ccytgAn2.s:3772   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccytgAn2.s:3004   .text.HAL_UART_AbortTransmit_IT:000000000000009c $d
     /tmp/ccytgAn2.s:5234   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/ccytgAn2.s:3009   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/ccytgAn2.s:3016   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/ccytgAn2.s:3815   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccytgAn2.s:3141   .text.HAL_UART_AbortReceive_IT:00000000000000ac $d
     /tmp/ccytgAn2.s:5287   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/ccytgAn2.s:3146   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/ccytgAn2.s:3153   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/ccytgAn2.s:5540   .text.UART_Receive_IT:0000000000000000 UART_Receive_IT
     /tmp/ccytgAn2.s:3686   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/ccytgAn2.s:5340   .text.UART_Transmit_IT:0000000000000000 UART_Transmit_IT
     /tmp/ccytgAn2.s:5485   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/ccytgAn2.s:3502   .text.HAL_UART_IRQHandler:00000000000001fc $d
     /tmp/ccytgAn2.s:5001   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/ccytgAn2.s:3507   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccytgAn2.s:3514   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccytgAn2.s:3550   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccytgAn2.s:3557   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccytgAn2.s:3593   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccytgAn2.s:3600   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccytgAn2.s:3636   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccytgAn2.s:3643   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccytgAn2.s:3679   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccytgAn2.s:3722   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/ccytgAn2.s:3765   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/ccytgAn2.s:3808   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/ccytgAn2.s:3851   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/ccytgAn2.s:3858   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/ccytgAn2.s:3930   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/ccytgAn2.s:3937   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccytgAn2.s:4009   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000000 $t
     /tmp/ccytgAn2.s:4016   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000000 HAL_MultiProcessor_ExitMuteMode
     /tmp/ccytgAn2.s:4088   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/ccytgAn2.s:4095   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccytgAn2.s:4181   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/ccytgAn2.s:4188   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccytgAn2.s:4274   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/ccytgAn2.s:4281   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/ccytgAn2.s:4342   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/ccytgAn2.s:4349   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/ccytgAn2.s:4388   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccytgAn2.s:4467   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccytgAn2.s:4512   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccytgAn2.s:4600   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccytgAn2.s:4645   .text.UART_DMAError:0000000000000000 $t
     /tmp/ccytgAn2.s:4761   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccytgAn2.s:4879   .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/ccytgAn2.s:4933   .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/ccytgAn2.s:4995   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/ccytgAn2.s:5048   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccytgAn2.s:5138   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccytgAn2.s:5228   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccytgAn2.s:5281   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
ARM GAS  /tmp/ccytgAn2.s 			page 172


     /tmp/ccytgAn2.s:5334   .text.UART_Transmit_IT:0000000000000000 $t
     /tmp/ccytgAn2.s:5479   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/ccytgAn2.s:5534   .text.UART_Receive_IT:0000000000000000 $t
     /tmp/ccytgAn2.s:5735   .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccytgAn2.s:6001   .text.UART_SetConfig:0000000000000260 $d
     /tmp/ccytgAn2.s:6006   .text.UART_SetConfig:000000000000026c $t
     /tmp/ccytgAn2.s:6344   .text.UART_SetConfig:00000000000005ec $d
     /tmp/ccytgAn2.s:6349   .text.UART_SetConfig:00000000000005f8 $t
     /tmp/ccytgAn2.s:6523   .text.UART_SetConfig:00000000000007b8 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
__aeabi_uldivmod
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetPCLK1Freq
